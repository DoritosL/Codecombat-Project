{"version":3,"sources":["app/core/errors.coffee"],"names":[],"mappings":"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","file":"public/javascripts/app/core/errors.js","sourcesContent":["errorModalTemplate = require 'templates/core/error'\n{applyErrorsToForm} = require 'core/forms'\n\nmodule.exports.parseServerError = (text) ->\n  try\n    error = JSON.parse(text) or {message: 'Unknown error.'}\n  catch SyntaxError\n    error = {message: text or 'Unknown error.'}\n  error = error[0] if _.isArray(error)\n  error\n\nmodule.exports.genericFailure = (jqxhr) ->\n  Backbone.Mediator.publish('errors:server-error', {response: jqxhr})\n  return connectionFailure() if not jqxhr.status\n\n  error = module.exports.parseServerError(jqxhr.responseText)\n  message = error.message\n  message = error.property + ' ' + message if error.property\n  console.warn(jqxhr.status, jqxhr.statusText, error)\n  existingForm = $('.form:visible:first')\n  if existingForm[0]\n    missingErrors = applyErrorsToForm(existingForm, [error])\n    for error in missingErrors\n      existingForm.append($('<div class=\"alert alert-danger\"></div>').text(error.message))\n  else\n    res = errorModalTemplate(\n      status: jqxhr.status\n      statusText: jqxhr.statusText\n      message: message\n    )\n    showErrorModal(res)\n\nmodule.exports.backboneFailure = (model, jqxhr, options) ->\n  module.exports.genericFailure(jqxhr)\n\nmodule.exports.connectionFailure = connectionFailure = ->\n  html = errorModalTemplate(\n    status: 0\n    statusText: 'Connection Gone'\n    message: 'No response from the CoCo servers, captain.'\n  )\n  showErrorModal(html)\n\nmodule.exports.showNotyNetworkError = ->\n  jqxhr = _.find(arguments, 'promise') # handles jquery or backbone network error (jqxhr is first or second parameter)\n  noty({\n    text: jqxhr.responseJSON?.message or jqxhr.responseJSON?.errorName or 'Unknown error'\n    layout: 'topCenter'\n    type: 'error'\n    timeout: 5000\n    killer: false,\n    dismissQueue: true\n  })\n\nshowErrorModal = (html) ->\n  # TODO: make a views/modal/error_modal view for this to use so the template can reuse templates/core/modal-base?\n  $('#modal-wrapper').html(html)\n  $('.modal:visible').modal('hide')\n  $('#modal-error').modal('show')\n\nshownWorkerError = false\n  \nmodule.exports.onWorkerError = ->\n  # TODO: Improve worker error handling in general\n  # TODO: Remove this code when IE11 is deprecated OR Aether is removed.\n  \n  # Sometimes on IE11, Aether isn't loaded. Handle that error by messaging the user, reloading the page.\n  # Note: Edge is also considered 'msie'.\n  if (not shownWorkerError) and $.browser.msie and $.browser.versionNumber is 11\n    text = 'Explorer failure. Reloading...'\n    shownWorkerError = true\n    setTimeout((-> document.location.reload()), 5000)\n    noty({text, layout: 'topCenter', type: 'error'})\n"]}