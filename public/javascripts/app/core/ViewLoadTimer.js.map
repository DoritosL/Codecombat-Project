{"version":3,"sources":["app/core/ViewLoadTimer.coffee"],"names":[],"mappings":"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","file":"public/javascripts/app/core/ViewLoadTimer.js","sourcesContent":["VIEW_LOAD_LOG = false\nSHOW_NOTY = false\n\nclass ViewLoadTimer\n  @firstLoad: true\n  constructor: (@view) ->\n    @firstLoad = ViewLoadTimer.firstLoad\n    ViewLoadTimer.firstLoad = false\n    return unless window.performance and window.performance.now and window.performance.getEntriesByType\n    @t0 = if @firstLoad then 0 else performance.now()\n\n  setView: (@view) ->\n\n  record: ->\n    console.group('Recording view:', @view.id) if VIEW_LOAD_LOG\n    views = [@view]\n    networkPromises = []\n    while views.length\n      subView = views.pop()\n      views = views.concat(_.values(subView.subviews))\n      if not subView.supermodel.finished()\n        networkPromises.push(subView.supermodel.finishLoading())\n    console.log 'Network promises:', networkPromises.length if VIEW_LOAD_LOG\n\n    Promise.all(networkPromises)\n    .then =>\n      @networkLoad = performance.now()\n      return if @view.destroyed\n      \n      imagePromises = []\n      if VIEW_LOAD_LOG\n        console.groupCollapsed('Images')\n        console.groupCollapsed('Skipping')\n        for img in @view.$('img:not(:visible)')\n          console.log img.src\n        console.groupEnd()\n      for img in @view.$('img:visible')\n        if not img.complete\n          promise = new Promise((resolve) ->\n            if img.complete\n              resolve()\n            else\n              img.onload = resolve\n              img.onerror = resolve\n          )\n          promise.imgSrc = img.src\n          console.log img.src if VIEW_LOAD_LOG\n          imagePromises.push(promise)\n\n      console.groupEnd() if VIEW_LOAD_LOG\n      return Promise.all(imagePromises)\n    .then =>\n      return if @view.destroyed\n      networkTime = @networkLoad - @t0\n      totalTime = performance.now() - @t0 \n      return console.warn(\"Unknown view at: #{document.location.href}, could not record perf.\") if not @view.id\n      return console.warn(\"Got invalid time result for view #{@view.id}: #{totalTime}, could not record perf.\") if not _.isNumber(totalTime)\n      m = \"Loaded #{@view.id} in: #{totalTime}ms\"\n\n      if @firstLoad\n        entries = performance.getEntriesByType('resource').filter((r) => _.string.startsWith(r.name, location.origin))\n        totalEncodedBodySize = _.reduce(entries, ((total, entry) -> total + entry.encodedBodySize), 0)\n        totalTransferSize = _.reduce(entries, ((total, entry) -> total + entry.transferSize), 0)\n        cachedResources = _.size(_.filter(entries, (entry) -> entry.transferSize / entry.encodedBodySize < 0.1))\n        totalResources = _.size(entries)\n        resourceInfo = { networkTime, totalEncodedBodySize, totalTransferSize, cachedResources, totalResources }\n      else\n        resourceInfo = {}\n      console.log m if VIEW_LOAD_LOG\n      noty({text:m, type:'information', timeout: 1000, layout:'topCenter'}) if SHOW_NOTY\n      window.tracker?.trackEvent 'View Load', _.assign({ totalTime, viewId: @view.id, @firstLoad }, resourceInfo)\n    .then =>\n      console.groupEnd() if VIEW_LOAD_LOG\n\nmodule.exports = ViewLoadTimer\n"]}