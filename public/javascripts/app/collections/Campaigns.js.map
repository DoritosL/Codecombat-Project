{"version":3,"sources":["app/collections/Campaigns.coffee"],"names":[],"mappings":";AAAA;EAAA;;;;AAAA,WAAW,QAAQ,iBAAR;;AACX,iBAAiB,QAAQ,4BAAR;;AAEjB,MAAM,CAAC,OAAP,GAAuB;;;;;;;sBACrB,QAAO;;sBACP,MAAK;;sBAEL,cAAa,SAAC,IAAD,EAAO,OAAP;;MAAO,UAAQ;;;MAC1B,OAAO,CAAC,OAAQ;;IAChB,OAAO,CAAC,IAAI,CAAC,IAAb,GAAoB;WACpB,IAAC,MAAD,CAAO,OAAP;EAHW;;sBAKb,iCAAgC,SAAC,OAAD,EAAa,YAAb;AAC9B;;MAD+B,UAAQ;;;MAAI,eAAa;;IACxD,SAAS,QAAQ,oBAAR;;MACT,OAAO,CAAC,OAAQ;;IAChB,OAAO,CAAC,IAAI,CAAC,OAAb,GAAuB;IACvB,UAAU,OAAO,CAAC,OAAR,IAAmB;AAC7B,WAAO,IAAC,MAAD,CAAO,OAAP,CACL,CAAC,IADI,CACC;aAAA;AACJ;QAAA,WAAW,KAAC,OAAD,CAAQ,SAAC,CAAD;AAAO;uBAAA,CAAC,CAAC,GAAF,CAAM,MAAN,gBAAiB,OAAjB;QAAP,CAAR;QACX,KAAC,OAAD,CAAQ,QAAR;;UACA,YAAY,CAAC,OAAQ;;;cACJ,CAAC,UAAW;;QAC7B,SAAS;AACT;AAAA;;UACE,QAAQ,CAAC,MAAT,GAAsB;UACtB,MAAM,CAAC,IAAP,CAAY,QAAQ,CAAC,MAAM,CAAC,gBAAhB,CAAiC,QAAQ,CAAC,GAAT,CAAa,MAAb,CAAjC,EAAuD,YAAvD,CAAZ;AAFF;AAGA,eAAO,CAAC,CAAC,IAAF,UAAO,MAAP;MATH;IAAA,QADD;EALuB;;;;GATO","file":"public/javascripts/app/collections/Campaigns.js","sourcesContent":["Campaign = require 'models/Campaign'\nCocoCollection = require 'collections/CocoCollection'\n\nmodule.exports = class Campaigns extends CocoCollection\n  model: Campaign\n  url: '/db/campaign'\n\n  fetchByType: (type, options={}) ->\n    options.data ?= {}\n    options.data.type = type\n    @fetch(options)\n    \n  fetchCampaignsAndRelatedLevels: (options={}, levelOptions={}) ->\n    Levels = require 'collections/Levels'\n    options.data ?= {}\n    options.data.project = 'slug'\n    exclude = options.exclude or []\n    return @fetch(options)\n      .then =>\n        toRemove = @filter (c) -> c.get('slug') in exclude\n        @remove toRemove\n        levelOptions.data ?= {}\n        levelOptions.data.project ?= 'thangs,name,slug,campaign,tasks'\n        jqxhrs = []\n        for campaign in @models\n          campaign.levels = new Levels()\n          jqxhrs.push campaign.levels.fetchForCampaign(campaign.get('slug'), levelOptions)\n        return $.when(jqxhrs...)\n"]}