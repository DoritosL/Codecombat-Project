{"version":3,"sources":["app/templates/play/level/tome/spell_palette_entry_popover.jade"],"names":[],"mappingsfile":"public/javascripts/app/templates/play/level/tome/spell_palette_entry_popover.js","sourcesContent":["var __templateData = function anonymous(locals\n/**/) {\nvar buf = [];\nvar locals_ = (locals || {}),doc = locals_.doc,_ = locals_._,writable = locals_.writable,marked = locals_.marked,cooldowns = locals_.cooldowns,selectedMethod = locals_.selectedMethod,argumentExamples = locals_.argumentExamples,language = locals_.language,docName = locals_.docName,value = locals_.value,item = locals_.item;buf.push(\"<h4><span class=\\\"prop-name\\\">\" + (jade.escape(null == (jade.interp = doc.shortName) ? \"\" : jade.interp)) + \"</span> - \");\nvar skillType = (doc.type == 'function' && doc.owner == 'this' ? 'method' : doc.type)\nbuf.push(\"<code\" + (jade.attrs({ 'data-i18n':('skill_docs.' + skillType), \"class\": [('prop-type')] }, {\"data-i18n\":true})) + \"><!-- In case there's no translation in en.coffee because we missed one-->\" + (jade.escape(null == (jade.interp = skillType) ? \"\" : jade.interp)) + \"</code><!-- Redundant in case some tag docs are missing an owner-->\");\nif ( !_.contains(['function', 'basic tag', 'spawnable', 'event'], doc.type) && doc.owner != 'HTML')\n{\nbuf.push(\" (\");\nif ( writable)\n{\nbuf.push(\"<span data-i18n=\\\"skill_docs.writable\\\">writable</span>\");\n}\nelse\n{\nbuf.push(\"<span data-i18n=\\\"skill_docs.read_only\\\">read-only</span>\");\n}\nbuf.push(\")\");\n}\nbuf.push(\"</h4>\");\nif ( doc.translatedShortName)\n{\nbuf.push(\"<h5><span class=\\\"translated-name\\\">\" + (jade.escape(null == (jade.interp = doc.translatedShortName) ? \"\" : jade.interp)) + \"</span></h5>\");\n}\nbuf.push(\"<div class=\\\"description\\\"><p>\" + (null == (jade.interp = marked(doc.description || 'Still undocumented, sorry.')) ? \"\" : jade.interp) + \"</p><div style=\\\"clear: both\\\" class=\\\"clear\\\"></div>\");\nif ( cooldowns && (cooldowns.cooldown || cooldowns.specificCooldown))\n{\nbuf.push(\"<p><span>\");\nif ( cooldowns.type == 'spell')\n{\nbuf.push(\"<span data-i18n=\\\"skill_docs.spell\\\">Spell</span>\");\n}\nelse\n{\nbuf.push(\"<span data-i18n=\\\"skill_docs.action\\\">Action</span>\");\n}\nbuf.push(\"<span data-i18n=\\\"skill_docs.action_name\\\" class=\\\"spl\\\">name</span><span class=\\\"spr\\\">:</span><code>\\\"\" + (jade.escape((jade.interp = cooldowns.name) == null ? '' : jade.interp)) + \"\\\"</code>.</span><span class=\\\"spl\\\"><span data-i18n=\\\"skill_docs.action_cooldown\\\">Takes</span><span class=\\\"spr\\\">:</span><code>\" + (jade.escape(null == (jade.interp = cooldowns.cooldown) ? \"\" : jade.interp)) + \"</code>s.</span>\");\nif ( cooldowns.specificCooldown)\n{\nbuf.push(\"<span class=\\\"spl\\\"><span data-i18n=\\\"skill_docs.action_specific_cooldown\\\">Cooldown</span><span class=\\\"spr\\\">:</span><code>\" + (jade.escape(null == (jade.interp = cooldowns.specificCooldown) ? \"\" : jade.interp)) + \"</code>s.</span>\");\n}\nif ( cooldowns.damage)\n{\nbuf.push(\"<span class=\\\"spl\\\"><span data-i18n=\\\"skill_docs.action_damage\\\">Damage</span><span class=\\\"spr\\\">:</span><code>\" + (jade.escape(null == (jade.interp = cooldowns.damage) ? \"\" : jade.interp)) + \"</code>.</span>\");\n}\nif ( cooldowns.range)\n{\nbuf.push(\"<span class=\\\"spl\\\"><span data-i18n=\\\"skill_docs.action_range\\\">Range</span><span class=\\\"spr\\\">:</span><code>\" + (jade.escape(null == (jade.interp = cooldowns.range) ? \"\" : jade.interp)) + \"</code>m.</span>\");\n}\nif ( cooldowns.radius)\n{\nbuf.push(\"<span class=\\\"spl\\\"><span data-i18n=\\\"skill_docs.action_radius\\\">Radius</span><span class=\\\"spr\\\">:</span><code>\" + (jade.escape(null == (jade.interp = cooldowns.radius) ? \"\" : jade.interp)) + \"</code>m.</span>\");\n}\nif ( cooldowns.duration)\n{\nbuf.push(\"<span class=\\\"spl\\\"><span data-i18n=\\\"skill_docs.action_duration\\\">Duration</span><span class=\\\"spr\\\">:</span><code>\" + (jade.escape(null == (jade.interp = cooldowns.duration) ? \"\" : jade.interp)) + \"</code>s.</span>\");\n}\nbuf.push(\"</p>\");\n}\nbuf.push(\"</div>\");\nif ( !selectedMethod)\n{\nif ( doc.example)\n{\nbuf.push(\"<p class=\\\"example\\\"><strong><span data-i18n=\\\"skill_docs.example\\\">Example</span>:</strong><div class=\\\"docs-ace-container\\\"><div class=\\\"docs-ace\\\">\" + (jade.escape(null == (jade.interp = doc.example) ? \"\" : jade.interp)) + \"</div></div></p>\");\n}\nelse if ( doc.type == 'function' && argumentExamples.length)\n{\nbuf.push(\"<p class=\\\"example\\\"><strong><span data-i18n=\\\"skill_docs.example\\\">Example</span>:</strong><div><div class=\\\"docs-ace-container\\\"><div class=\\\"docs-ace\\\">\");\nif ( language == 'javascript')\n{\nbuf.push(\"<span>\" + (jade.escape(null == (jade.interp = doc.owner + '.' + docName + '(' + argumentExamples.join(', ') + ');') ? \"\" : jade.interp)) + \"</span>\");\n}\nelse if ( language == 'coffeescript')\n{\nbuf.push(\"<span>\" + (jade.escape(null == (jade.interp = doc.ownerName + (doc.ownerName == '@' ? '' : '.') + docName + ' ' + argumentExamples.join(', ')) ? \"\" : jade.interp)) + \"</span>\");\n}\nelse if ( language == 'python')\n{\nbuf.push(\"<span>\" + (jade.escape(null == (jade.interp = doc.ownerName + '.' + docName + '(' + argumentExamples.join(', ') + ')') ? \"\" : jade.interp)) + \"</span>\");\n}\nelse if ( language == 'clojure')\n{\nbuf.push(\"<span>\" + (jade.escape(null == (jade.interp = '(.' + docName + ' ' + doc.ownerName + ' ' + argumentExamples.join(', ') + ')') ? \"\" : jade.interp)) + \"</span>\");\n}\nelse if ( language == 'lua')\n{\nbuf.push(\"<span>\" + (jade.escape(null == (jade.interp = doc.ownerName + ':' + docName + '(' + argumentExamples.join(', ') + ')') ? \"\" : jade.interp)) + \"</span>\");\n}\nelse if ( language == 'io')\n{\nbuf.push(\"<span>\" + (jade.escape(null == (jade.interp = (doc.ownerName == 'this' ? '' : doc.ownerName + ' ') + docName + '(' + argumentExamples.join(', ') + ')') ? \"\" : jade.interp)) + \"</span>\");\n}\nbuf.push(\"</div></div></div></p>\");\n}\n}\nif ( (doc.type != 'function' && doc.type != 'snippet' && doc.type != 'spawnable' && doc.type != 'event' && !_.contains(['HTML', 'CSS', 'WebJavaScript', 'jQuery'], doc.owner)) || doc.name == 'now')\n{\nbuf.push(\"<p class=\\\"value\\\"><strong><span data-i18n=\\\"skill_docs.current_value\\\">Current Value</span><span class=\\\"spr\\\">:</span></strong><pre><code\" + (jade.attrs({ 'data-prop':(doc.name), \"class\": [('current-value')] }, {\"data-prop\":true})) + \">\" + (jade.escape(null == (jade.interp = value) ? \"\" : jade.interp)) + \"</code></pre></p>\");\n}\nvar argumentEntry_mixin = function(arg){\nvar block = this.block, attributes = this.attributes || {}, escaped = this.escaped || {};\nbuf.push(\"<div><code>\" + (jade.escape(null == (jade.interp = arg.name) ? \"\" : jade.interp)) + \"</code><span class=\\\"spr\\\">:</span><code>\" + (jade.escape(null == (jade.interp = arg.type) ? \"\" : jade.interp)) + \"</code>\");\nif ( arg.example)\n{\nbuf.push(\" (<span data-i18n=\\\"skill_docs.ex\\\">ex</span><span class=\\\"spr\\\">:</span><code>\" + (jade.escape(null == (jade.interp = arg.example) ? \"\" : jade.interp)) + \"</code>)\");\n}\nif ( arg.description)\n{\nbuf.push(\"<div>\" + (null == (jade.interp = marked(arg.description)) ? \"\" : jade.interp) + \"</div>\");\n}\nif ( arg.default)\n{\nbuf.push(\"<div><em><span data-i18n=\\\"skill_docs.default_value\\\">Default value</span><span class=\\\"spr\\\">:</span></em><code>\" + (jade.escape(null == (jade.interp = arg.default) ? \"\" : jade.interp)) + \"</code></div>\");\n}\nbuf.push(\"</div>\");\n};\nif ( doc.args && doc.args.length)\n{\nvar hasOptionalArguments = _.any(doc.args, function(arg){ return arg.optional })\nbuf.push(\"<p class=\\\"args\\\"><strong>\");\nif ( hasOptionalArguments)\n{\nbuf.push(\"<span data-i18n=\\\"skill_docs.required_parameters\\\">Required Parameters</span>\");\n}\nelse\n{\nbuf.push(\"<span data-i18n=\\\"skill_docs.parameters\\\">Parameters</span>\");\n}\nbuf.push(\"<span class=\\\"spr\\\">:</span></strong>\");\n// iterate doc.args\n;(function(){\n  var $$obj = doc.args;\n  if ('number' == typeof $$obj.length) {\n\n    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {\n      var arg = $$obj[$index];\n\nif (!( arg.optional))\n{\nargumentEntry_mixin(arg);\n}\n    }\n\n  } else {\n    var $$l = 0;\n    for (var $index in $$obj) {\n      $$l++;      var arg = $$obj[$index];\n\nif (!( arg.optional))\n{\nargumentEntry_mixin(arg);\n}\n    }\n\n  }\n}).call(this);\n\nbuf.push(\"</p>\");\nif ( hasOptionalArguments)\n{\nbuf.push(\"<p class=\\\"args\\\"><strong><span data-i18n=\\\"skill_docs.optional_parameters\\\">Optional Parameters</span><span class=\\\"spr\\\">:</span></strong>\");\n// iterate doc.args\n;(function(){\n  var $$obj = doc.args;\n  if ('number' == typeof $$obj.length) {\n\n    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {\n      var arg = $$obj[$index];\n\nif ( arg.optional)\n{\nargumentEntry_mixin(arg);\n}\n    }\n\n  } else {\n    var $$l = 0;\n    for (var $index in $$obj) {\n      $$l++;      var arg = $$obj[$index];\n\nif ( arg.optional)\n{\nargumentEntry_mixin(arg);\n}\n    }\n\n  }\n}).call(this);\n\nbuf.push(\"</p>\");\n}\n}\nif ( doc.returns)\n{\nbuf.push(\"<p class=\\\"returns\\\"><strong><span data-i18n=\\\"skill_docs.returns\\\">Returns</span><span class=\\\"spr\\\">:</span></strong><div><code>\" + (jade.escape(null == (jade.interp = doc.returns.type) ? \"\" : jade.interp)) + \"</code>\");\nif ( doc.returns.example)\n{\nbuf.push(\" (<span data-i18n=\\\"skill_docs.ex\\\">ex</span><span class=\\\"spr\\\">:</span><code>\" + (jade.escape(null == (jade.interp = doc.returns.example) ? \"\" : jade.interp)) + \"</code>)\");\n}\nif ( doc.returns.description)\n{\nbuf.push(\"<div>\" + (null == (jade.interp = marked(doc.returns.description)) ? \"\" : jade.interp) + \"</div>\");\n}\nbuf.push(\"</div></p>\");\n}\nif ( item)\n{\nbuf.push(\"<p><em><span data-i18n=\\\"skill_docs.granted_by\\\" class=\\\"spr\\\">Granted by</span>\" + (jade.escape((jade.interp = item.get('name')) == null ? '' : jade.interp)) + \".</em></p>\");\n}\nif ( selectedMethod)\n{\nbuf.push(\"<p><em>Write the body of this method below.</em></p>\");\n};return buf.join(\"\");\n};\nif (typeof define === 'function' && define.amd) {\n  define([], function() {\n    return __templateData;\n  });\n} else if (typeof module === 'object' && module && module.exports) {\n  module.exports = __templateData;\n} else {\n  __templateData;\n}"]}