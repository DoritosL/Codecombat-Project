{"version":3,"sources":["app/schemas/schemas.coffee"],"names":[],"mappings":"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","file":"public/javascripts/app/schemas/schemas.js","sourcesContent":["Language = require './languages'\nconcepts = require './concepts'\n\n# schema helper methods\n\nme = module.exports\n\ncombine = (base, ext) ->\n  return base unless ext?\n  return _.extend(base, ext)\n\nurlPattern = '^(ht|f)tp(s?)\\:\\/\\/[0-9a-zA-Z]([-.\\w]*[0-9a-zA-Z])*(:(0-9)*)*(\\/?)([a-zA-Z0-9\\-\\.\\?\\,\\'\\/\\\\\\+&%\\$#_=]*)?$'\npathPattern = '^\\/([a-zA-Z0-9\\-\\.\\?\\,\\'\\/\\\\\\+&%\\$#_=]*)?$'\n\n# Common schema properties\nme.object = (ext, props) -> combine({type: 'object', additionalProperties: false, properties: props or {}}, ext)\nme.array = (ext, items) -> combine({type: 'array', items: items or {}}, ext)\nme.shortString = (ext) -> combine({type: 'string', maxLength: 100}, ext)\nme.pct = (ext) -> combine({type: 'number', maximum: 1.0, minimum: 0.0}, ext)\nme.passwordString = {type: 'string', maxLength: 256, minLength: 2, title: 'Password'}\n\n# Dates should usually be strings, ObjectIds should be strings: https://github.com/codecombat/codecombat/issues/1384\nme.date = (ext) -> combine({type: ['object', 'string'], format: 'date-time'}, ext)  # old\nme.stringDate = (ext) -> combine({type: ['string'], format: 'date-time'}, ext)  # new\nme.objectId = (ext) -> combine({type: ['object', 'string']}, ext)  # old\nme.stringID = (ext) -> combine({type: 'string', minLength: 24, maxLength: 24}, ext)  # use for anything new\n\nme.url = (ext) -> combine({type: 'string', format: 'url', pattern: urlPattern}, ext)\nme.path = (ext) -> combine({type: 'string', pattern: pathPattern}, ext)\nme.int = (ext) -> combine {type: 'integer'}, ext\nme.float = (ext) -> combine {type: 'number'}, ext\n\nPointSchema = me.object {title: 'Point', description: 'An {x, y} coordinate point.', format: 'point2d', required: ['x', 'y']},\n  x: {title: 'x', description: 'The x coordinate.', type: 'number', 'default': 15}\n  y: {title: 'y', description: 'The y coordinate.', type: 'number', 'default': 20}\n\nme.point2d = (ext) -> combine(_.cloneDeep(PointSchema), ext)\n\nSoundSchema = me.object {format: 'sound'},\n  mp3: {type: 'string', format: 'sound-file'}\n  ogg: {type: 'string', format: 'sound-file'}\n\nme.sound = (props) ->\n  obj = _.cloneDeep(SoundSchema)\n  obj.properties[prop] = props[prop] for prop of props\n  obj\n\nColorConfigSchema = me.object {format: 'color-sound'},\n  hue: {format: 'range', type: 'number', minimum: 0, maximum: 1}\n  saturation: {format: 'range', type: 'number', minimum: 0, maximum: 1}\n  lightness: {format: 'range', type: 'number', minimum: 0, maximum: 1}\n\nme.colorConfig = (props) ->\n  obj = _.cloneDeep(ColorConfigSchema)\n  obj.properties[prop] = props[prop] for prop of props\n  obj\n\n# BASICS\n\nbasicProps = (linkFragment) ->\n  _id: me.objectId(links: [{rel: 'self', href: \"/db/#{linkFragment}/{($)}\"}], format: 'hidden')\n  __v: {title: 'Mongoose Version', format: 'hidden'}\n\nme.extendBasicProperties = (schema, linkFragment) ->\n  schema.properties = {} unless schema.properties?\n  _.extend(schema.properties, basicProps(linkFragment))\n\n# PATCHABLE\n\npatchableProps = ->\n  patches: me.array({title:'Patches'}, {\n    _id: me.objectId(links: [{rel: 'db', href: '/db/patch/{($)}'}], title: 'Patch ID', description: 'A reference to the patch.')\n    status: {enum: ['pending', 'accepted', 'rejected', 'cancelled']}\n  })\n  allowPatches: {type: 'boolean'}\n  watchers: me.array({title: 'Watchers'},\n    me.objectId(links: [{rel: 'extra', href: '/db/user/{($)}'}]))\n\nme.extendPatchableProperties = (schema) ->\n  schema.properties = {} unless schema.properties?\n  _.extend(schema.properties, patchableProps())\n\n# NAMED\n\nnamedProps = ->\n  name: me.shortString({title: 'Name'})\n  slug: me.shortString({title: 'Slug', format: 'hidden'})\n\nme.extendNamedProperties = (schema) ->\n  schema.properties = {} unless schema.properties?\n  _.extend(schema.properties, namedProps())\n\n# VERSIONED\n\nversionedProps = (linkFragment) ->\n  version:\n    'default': {minor: 0, major: 0, isLatestMajor: true, isLatestMinor: true}\n    format: 'version'\n    title: 'Version'\n    type: 'object'\n    readOnly: true\n    additionalProperties: false\n    properties:\n      major: {type: 'number', minimum: 0}\n      minor: {type: 'number', minimum: 0}\n      isLatestMajor: {type: 'boolean'}\n      isLatestMinor: {type: 'boolean'}\n  # TODO: figure out useful 'rel' values here\n  original: me.objectId(links: [{rel: 'extra', href: \"/db/#{linkFragment}/{($)}\"}], format: 'hidden')\n  parent: me.objectId(links: [{rel: 'extra', href: \"/db/#{linkFragment}/{($)}\"}], format: 'hidden')\n  creator: me.objectId(links: [{rel: 'extra', href: '/db/user/{($)}'}], format: 'hidden')\n  created: me.date({title: 'Created', readOnly: true})\n  commitMessage: {type: 'string', maxLength: 500, title: 'Commit Message', readOnly: true}\n\nme.extendVersionedProperties = (schema, linkFragment) ->\n  schema.properties = {} unless schema.properties?\n  _.extend(schema.properties, versionedProps(linkFragment))\n\n# SEARCHABLE\n\nsearchableProps = ->\n  index: {format: 'hidden'}\n\nme.extendSearchableProperties = (schema) ->\n  schema.properties = {} unless schema.properties?\n  _.extend(schema.properties, searchableProps())\n\n# PERMISSIONED\n\npermissionsProps = ->\n  permissions:\n    type: 'array'\n    items:\n      type: 'object'\n      additionalProperties: false\n      properties:\n        target: {}\n        access: {type: 'string', 'enum': ['read', 'write', 'owner']}\n    format: 'hidden'\n\nme.extendPermissionsProperties = (schema) ->\n  schema.properties = {} unless schema.properties?\n  _.extend(schema.properties, permissionsProps())\n\n# TRANSLATABLE\n\nme.generateLanguageCodeArrayRegex = -> '^(' + Language.languageCodes.join('|') + ')$'\n\nme.getLanguageCodeArray = ->\n  return Language.languageCodes\n\nme.getLanguagesObject = -> return Language\n\nme.extendTranslationCoverageProperties = (schema) ->\n  schema.properties = {} unless schema.properties?\n  schema.properties.i18nCoverage = { title: 'i18n Coverage', type: 'array', items: { type: 'string' }}\n\n# OTHER\n\nme.classNamePattern = '^[A-Z][A-Za-z0-9]*$'  # starts with capital letter; just letters and numbers\nme.identifierPattern = '^[a-z][A-Za-z0-9]*$'  # starts with lowercase letter; just letters and numbers\nme.constantPattern = '^[A-Z0-9_]+$'  # just uppercase letters, underscores, and numbers\nme.identifierOrConstantPattern = '^([a-z][A-Za-z0-9]*|[A-Z0-9_]+)$'\n\nme.FunctionArgumentSchema = me.object {\n  title: 'Function Argument',\n  description: 'Documentation entry for a function argument.'\n  'default':\n    name: 'target'\n    type: 'object'\n    optional: false\n    example: 'this.getNearestEnemy()'\n    description: 'The target of this function.'\n  required: ['name', 'type', 'example', 'description']\n},\n  name: {type: 'string', pattern: me.identifierPattern, title: 'Name', description: 'Name of the function argument.'}\n  i18n: { type: 'object', format: 'i18n', props: ['description'], description: 'Help translate this argument'}\n  # not actual JS types, just whatever they describe...\n  type: me.shortString(title: 'Type', description: 'Intended type of the argument.')\n  optional: {title: 'Optional', description: 'Whether an argument may be omitted when calling the function', type: 'boolean'}\n  example:\n    oneOf: [\n      {\n        type: 'object',\n        title: 'Language Examples',\n        description: 'Examples by code language.',\n        additionalProperties: me.shortString(description: 'Example value for the argument.')\n        format: 'code-languages-object'\n        default: {javascript: '', python: ''}\n      }\n      me.shortString(title: 'Example', description: 'Example value for the argument.')\n    ]\n  description:\n    oneOf: [\n      {\n        type: 'object',\n        title: 'Language Descriptions',\n        description: 'Example argument descriptions by code language.',\n        additionalProperties: {type: 'string', description: 'Description of the argument.', maxLength: 1000}\n        format: 'code-languages-object'\n        default: {javascript: '', python: ''}\n      }\n      {title: 'Description', type: 'string', description: 'Description of the argument.', maxLength: 1000}\n    ]\n  'default':\n    title: 'Default'\n    description: 'Default value of the argument. (Your code should set this.)'\n    'default': null\n\nme.codeSnippet = me.object {description: 'A language-specific code snippet'},\n  code: {type: 'string', format: 'code', title: 'Snippet', default: '', description: 'Code snippet. Use ${1:defaultValue} syntax to add flexible arguments'}\n  tab: {type: 'string', title: 'Tab Trigger', description: 'Tab completion text. Will be expanded to the snippet if typed and hit tab.'}\n\nme.activity = me.object {description: 'Stats on an activity'},\n  first: me.date()\n  last: me.date()\n  count: {type: 'integer', minimum: 0}\n\nme.terrainString = me.shortString {enum: ['Grass', 'Dungeon', 'Indoor', 'Desert', 'Mountain', 'Glacier', 'Volcano'], title: 'Terrain', description: 'Which terrain type this is.'}\n\nme.HeroConfigSchema = me.object {description: 'Which hero the player is using, equipped with what inventory.'},\n  inventory:\n    type: 'object'\n    description: 'The inventory of the hero: slots to item ThangTypes.'\n    additionalProperties: me.objectId(description: 'An item ThangType.')\n  thangType: me.objectId(links: [{rel: 'db', href: '/db/thang.type/{($)}/version'}], title: 'Thang Type', description: 'The ThangType of the hero.', format: 'thang-type')\n\nme.RewardSchema = (descriptionFragment='earned by achievements') ->\n  type: 'object'\n  additionalProperties: false\n  description: \"Rewards #{descriptionFragment}.\"\n  properties:\n    heroes: me.array {uniqueItems: true, description: \"Heroes #{descriptionFragment}.\"},\n      me.stringID(links: [{rel: 'db', href: '/db/thang.type/{($)}/version'}], title: 'Hero ThangType', description: 'A reference to the earned hero ThangType.', format: 'thang-type')\n    items: me.array {uniqueItems: true, description: \"Items #{descriptionFragment}.\"},\n      me.stringID(links: [{rel: 'db', href: '/db/thang.type/{($)}/version'}], title: 'Item ThangType', description: 'A reference to the earned item ThangType.', format: 'thang-type')\n    levels: me.array {uniqueItems: true, description: \"Levels #{descriptionFragment}.\"},\n      me.stringID(links: [{rel: 'db', href: '/db/level/{($)}/version'}], title: 'Level', description: 'A reference to the earned Level.', format: 'latest-version-original-reference')\n    gems: me.float {description: \"Gems #{descriptionFragment}.\"}\n\nme.task = me.object {title: 'Task', description: 'A task to be completed', format: 'task', default: {name: 'TODO', complete: false}},\n  name: {title: 'Name', description: 'What must be done?', type: 'string'}\n  complete: {title: 'Complete', description: 'Whether this task is done.', type: 'boolean', format: 'checkbox'}\n\nme.concept = {type: 'string', enum: (concept.concept for concept in concepts), format: 'concept'}\n"]}