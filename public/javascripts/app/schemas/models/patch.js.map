{"version":3,"sources":["app/schemas/models/patch.coffee"],"names":[],"mappings":";AAAA;;AAAA,IAAI,QAAQ,cAAR;;AAEJ,aAAa,CACX,aADW,EAEX,SAFW,EAGX,UAHW,EAIX,QAJW,EAKX,OALW,EAMX,iBANW,EAOX,cAPW,EAQX,MARW,EASX,YATW;;AAYb,cAAc,CAAC,CAAC,MAAF,CAAS;EAAC,OAAO,OAAR;EAAiB,UAAU,CAAC,QAAD,EAAW,OAAX,EAAoB,eAApB,CAA3B;CAAT,EAA2E;EACvF,OAAO;IAAC,OAAO,OAAR;IAAiB,MAAM,CAAC,OAAD,EAAU,QAAV,CAAvB;GADgF;EAEvF,eAAe,CAAC,CAAC,WAAF,CAAc;IAAC,WAAW,GAAZ;IAAiB,WAAW,CAA5B;GAAd,CAFwE;EAGvF,SAAS,CAAC,CAAC,QAAF,CAAW;IAAA,OAAO;MAAC;QAAC,KAAK,OAAN;QAAe,MAAM,gBAArB;OAAD;KAAP;GAAX,CAH8E;EAIvF,UAAU,CAAC,CAAC,QAAF,CAAW;IAAA,OAAO;MAAC;QAAC,KAAK,OAAN;QAAe,MAAM,gBAArB;OAAD;KAAP;GAAX,CAJ6E;EAKvF,SAAS,CAAC,CAAC,IAAF,CAAO;IAAC,OAAO,SAAR;IAAmB,UAAU,IAA7B;GAAP,CAL8E;EAMvF,QAAQ;IAAC,QAAM,CAAC,SAAD,EAAY,UAAZ,EAAwB,UAAxB,EAAoC,WAApC,CAAP;GAN+E;EAQvF,QAAQ,CAAC,CAAC,MAAF,CAAS;IAAC,OAAO,QAAR;IAAkB,UAAU,CAAC,YAAD,EAAe,IAAf,CAA5B;GAAT,EAA4D;IAClE,YAAY;MAAC,QAAM,UAAP;KADsD;IAElE,IAAI,CAAC,CAAC,QAAF,CAAW;MAAA,OAAO,WAAP;KAAX,CAF8D;IAKlE,UAAU,CAAC,CAAC,QAAF,CAAW;MAAA,OAAO,iBAAP;KAAX,CALwD;IAMlE,SACE;MAAA,YACE;QAAA,OAAO;UAAC,MAAM,QAAP;UAAiB,SAAS,CAA1B;SAAP;QACA,OAAO;UAAC,MAAM,QAAP;UAAiB,SAAS,CAA1B;SADP;OADF;KAPgE;GAA5D,CAR+E;EAoBvF,YAAY;IAAA,MAAM,SAAN;GApB2E;EAqBvF,eAAe;IAAA,MAAM,SAAN;GArBwE;EAsBvF,uBAAuB;IAAE,MAAM,QAAR;GAtBgE;CAA3E;;AAyBd,CAAC,CAAC,qBAAF,CAAwB,WAAxB,EAAqC,OAArC;;AAEA,MAAM,CAAC,OAAP,GAAiB","file":"public/javascripts/app/schemas/models/patch.js","sourcesContent":["c = require './../schemas'\n\npatchables = [\n  'achievement'\n  'article'\n  'campaign'\n  'course'\n  'level'\n  'level_component'\n  'level_system' \n  'poll'\n  'thang_type'\n]\n\nPatchSchema = c.object({title: 'Patch', required: ['target', 'delta', 'commitMessage']}, {\n  delta: {title: 'Delta', type: ['array', 'object']}\n  commitMessage: c.shortString({maxLength: 500, minLength: 1})\n  creator: c.objectId(links: [{rel: 'extra', href: '/db/user/{($)}'}])\n  acceptor: c.objectId(links: [{rel: 'extra', href: '/db/user/{($)}'}])\n  created: c.date({title: 'Created', readOnly: true})\n  status: {enum: ['pending', 'accepted', 'rejected', 'withdrawn']}\n\n  target: c.object({title: 'Target', required: ['collection', 'id']}, {\n    collection: {enum: patchables}\n    id: c.objectId(title: 'Target ID') # search by this if not versioned\n\n  # if target is versioned, want to know that info too\n    original: c.objectId(title: 'Target Original') # search by this if versioned\n    version:\n      properties:\n        major: {type: 'number', minimum: 0}\n        minor: {type: 'number', minimum: 0}\n  })\n\n  wasPending: type: 'boolean'\n  newlyAccepted: type: 'boolean'\n  reasonNotAutoAccepted: { type: 'string' }\n})\n\nc.extendBasicProperties(PatchSchema, 'patch')\n\nmodule.exports = PatchSchema\n"]}