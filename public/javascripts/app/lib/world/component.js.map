{"version":3,"sources":["app/lib/world/component.coffee"],"names":[],"mappings":";AAAA;EAAA;;AAAA,oBAAoB,CAAC,QAAD,EAAW,aAAX,EAA0B,mBAA1B,EAA+C,UAA/C,EAA2D,aAA3D;;AAEpB,MAAM,CAAC,OAAP,GAAuB;EACrB,SAAC,UAAD,GAAY;;sBACZ,cAAa;;EACA,mBAAC,MAAD;AACX;AAAA;;MACE,IAAE,KAAF,GAAS;AADX;EADW;;sBAIb,SAAQ,SAAC,KAAD;AAEN;AAAA;SAAA;;YAAyB,aAAW,iBAAX,cAAiC,GAAI,GAAJ,KAAY;;;MACpE,WAAW,KAAM;MACjB,IAAG,OAAO,QAAP,KAAmB,UAAtB;qBACE,KAAK,CAAC,YAAN,CAAmB,GAAnB,EAAwB,KAAxB,GADF;OAAA;qBAGE,KAAM,KAAN,GAAa,OAHf;;AAFF;;EAFM;;sBASR,oBACE;IAAA,sBAAsB,KAAtB;;;sBAEF,WAAU;WACR,iBAAe,IAAC,YAAW,CAAC;EADpB","file":"public/javascripts/app/lib/world/component.js","sourcesContent":["componentKeywords = ['attach', 'constructor', 'validateArguments', 'toString', 'isComponent']  # Array is faster than object\n\nmodule.exports = class Component\n  @className: 'Component'\n  isComponent: true\n  constructor: (config) ->\n    for key, value of config\n      @[key] = value  # Hmm, might want to _.cloneDeep here? What if the config has nested object values and the Thang modifies them, then we re-use the config for, say, missile spawning? Well, for now we'll clone in the missile.\n\n  attach: (thang) ->\n    # Optimize; this is much of the World constructor time\n    for key, value of @ when key not in componentKeywords and key[0] isnt '_'\n      oldValue = thang[key]\n      if typeof oldValue is 'function'\n        thang.appendMethod key, value\n      else\n        thang[key] = value\n\n  validateArguments:\n    additionalProperties: false\n\n  toString: ->\n    \"<Component: #{@constructor.className}\"\n"]}