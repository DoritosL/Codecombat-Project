{"version":3,"sources":["app/lib/world/Grid.coffee"],"names":[],"mappings":"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","file":"public/javascripts/app/lib/world/Grid.js","sourcesContent":["# TODO: this thing needs a bit of thinking/testing for grid square alignments, exclusive vs. inclusive mins/maxes, etc.\n\nmodule.exports = class Grid\n  constructor: (thangs, @width, @height, @padding=0, @left=0, @bottom=0, @rogue=false) ->\n    @width = Math.ceil @width\n    @height = Math.ceil @height\n    @left = Math.floor @left\n    @bottom = Math.floor @bottom\n    @update thangs\n\n  update: (thangs) ->\n    @grid = []\n    for y in [0 .. @height]\n      @grid.push []\n      for x in [0 .. @width]\n        @grid[y].push []\n    if @rogue\n      thangs = (t for t in thangs when t.collides or t.spriteName is 'Gem' and not t.dead)\n    else\n      thangs = (t for t in thangs when t.collides)\n    for thang in thangs\n      rect = thang.rectangle()\n      [minX, maxX, minY, maxY] = [9001, -9001, 9001, -9001]\n      for v in rect.vertices()\n        minX = Math.min(minX, v.x - @padding)\n        minY = Math.min(minY, v.y - @padding)\n        maxX = Math.max(maxX, v.x + @padding)\n        maxY = Math.max(maxY, v.y + @padding)\n      for y in @columns minY, maxY\n        for x in @rows minX, maxX\n          @grid[y][x].push thang\n\n  contents: (gx, gy, width=1, height=1) ->\n    thangs = []\n    for y in @columns gy - height / 2, gy + height / 2\n      for x in @rows gx - width / 2, gx + width / 2\n        for thang in @grid[y][x]\n          thangs.push thang if thang.collides and not (thang in thangs) and thang.id isnt 'Add Thang Phantom'\n    thangs\n\n  clampColumn: (y) ->\n    y = Math.max 0, Math.floor(y) - @bottom\n    Math.min @grid.length, Math.ceil(y) - @bottom\n\n  clampRow: (x) ->\n    x = Math.max 0, Math.floor(x) - @left\n    Math.min @grid[0]?.length or 0, Math.ceil(x) - @left\n\n  columns: (minY, maxY) ->\n    [@clampColumn(minY) ... @clampColumn(maxY)]\n\n  rows: (minX, maxX) ->\n    [@clampRow(minX) ... @clampRow(maxX)]\n\n  toString: (rogue=false) ->\n    upsideDown = _.clone @grid\n    upsideDown.reverse()\n    ((@charForThangs thangs, rogue for thangs in row).join(' ') for row in upsideDown).join(\"\\n\")\n\n  charForThangs: (thangs, rogue) ->\n    return thangs.length or ' ' unless rogue\n    return '.' unless thangs.length\n    return '@' if _.find thangs, (t) -> /Hero Placeholder/.test t.id\n    return '>' if _.find thangs, spriteName: 'Spike Walls'\n    return 'F' if _.find thangs, spriteName: 'Fence Wall'\n    return 'T' if _.find thangs, spriteName: 'Fire Trap'\n    return ' ' if _.find thangs, spriteName: 'Dungeon Wall'\n    return 'G' if _.find thangs, spriteName: 'Gem'\n    return 'C' if _.find thangs, spriteName: 'Treasure Chest'\n    return '*' if _.find thangs, spriteName: 'Spear'\n    return 'o' if _.find thangs, type: 'munchkin'\n    return 'O' if _.find thangs, (t) -> t.team is 'ogres'\n    return 'H' if _.find thangs, (t) -> t.team is 'humans'\n    return 'N' if _.find thangs, (t) -> t.team is 'neutral'\n    return '?'\n"]}