{"version":3,"sources":["app/lib/LocalMongo.coffee"],"names":[],"mappings":"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","file":"public/javascripts/app/lib/LocalMongo.js","sourcesContent":["LocalMongo = module.exports\n\n# Checks whether func(l, r) is true for at least one value of left for at least one value of right\nmapred = (left, right, func) ->\n  _.reduce(left, ((result, singleLeft) ->\n    result or (_.reduce (_.map right, (singleRight) -> func(singleLeft, singleRight)),\n      ((intermediate, value) -> intermediate or value), false)), false)\n\ndoQuerySelector = (originalValue, operatorObj) ->\n  value = if _.isArray originalValue then originalValue else [originalValue] # left hand can be an array too\n  for operator, originalBody of operatorObj\n    body = if _.isArray originalBody then originalBody else [originalBody] # right hand can be an array too\n    switch operator\n      when '$gt' then return false unless mapred value, body, (l, r) -> l > r\n      when '$gte' then return false unless mapred value, body, (l, r) -> l >= r\n      when '$lt' then return false unless mapred value, body, (l, r) -> l < r\n      when '$lte' then return false unless mapred value, body, (l, r) -> l <= r\n      when '$ne' then return false if mapred value, body, (l, r) -> l == r\n      when '$in' then return false unless _.reduce value, ((result, val) -> result or val in body), false\n      when '$nin' then return false if _.reduce value, ((result, val) -> result or val in body), false\n      when '$exists' then return false if value[0]? isnt body[0]\n      else \n        trimmedOperator = _.pick(operatorObj, operator)\n        return false unless _.isObject(originalValue) and matchesQuery(originalValue, trimmedOperator)\n  true\n\nmatchesQuery = (target, queryObj) ->\n  return true unless queryObj\n  throw new Error 'Expected an object to match a query against, instead got null' unless target\n  for prop, query of queryObj\n    if prop[0] == '$'\n      switch prop\n        when '$or' then return false unless _.reduce query, ((res, obj) -> res or matchesQuery target, obj), false\n        when '$and' then return false unless _.reduce query, ((res, obj) -> res and matchesQuery target, obj), true\n        else return false\n    else\n      # Do nested properties\n      pieces = prop.split('.')\n      obj = target\n      for piece in pieces\n        unless piece of obj\n          obj = null\n          break\n        obj = obj[piece]\n      if typeof query != 'object' or _.isArray query\n        return false unless obj == query or (query in obj if _.isArray obj)\n      else return false unless doQuerySelector obj, query\n  true\n\nLocalMongo.matchesQuery = matchesQuery\n"]}