{"version":3,"sources":["app/lib/requireUtils.coffee"],"names":[],"mappings":";AAAA,MAAM,CAAC,OAAO,CAAC,gBAAf,GAAkC,SAAC,OAAD,EAAU,SAAV;AAChC;;IAD0C,YAAU;;EACpD,KAAiB,OAAjB;AAAA,WAAO,GAAP;;EACA,QAAQ;EACR,QAAQ,OAAO,CAAC,KAAR,CAAc,GAAd;AACR,SAAM,KAAK,CAAC,MAAZ;IACE,KAAK,CAAC,GAAN;IACA,KAAK,CAAC,OAAN,CAAc;MACZ,MAAM,KAAM,MAAK,CAAC,MAAN,GAAa,CAAb,CAAN,IAAyB,KADnB;MAEZ,KAAK,YAAY,KAAK,CAAC,IAAN,CAAW,GAAX,CAFL;KAAd;EAFF;SAMA;AAVgC;;AAYlC,MAAM,CAAC,OAAO,CAAC,sBAAf,GAAwC,SAAC,WAAD,EAAc,OAAd,EAAuB,eAAvB,EAAoD,SAApD;AACtC;;IAD6D,kBAAgB;;;IAAa,YAAU;;EACpG,KAAiB,WAAjB;AAAA,WAAO,GAAP;;EACA,UAAU;EACV,QAAQ;EAER,gBAAgB,kBAAkB;EAClC,IAAG,aAAc,cAAa,CAAC,MAAd,GAAqB,CAArB,CAAd,KAA2C,GAA9C;IACE,iBAAiB,IADnB;;AAGA;;IACE,IAAI,CAAE;IACN,KAAgB,CAAhB;AAAA;;IACA,QAAQ,CAAC,CAAC,KAAF,CAAQ,GAAR;IACR,OAAO,KAAM;IACb,QAAW,KAAK,CAAC,MAAN,KAAgB,CAAnB,GAA0B,KAA1B,GAAqC;;MAC7C,KAAM,SAAS;;IACf,KAAM,MAAN,IAAe;AAPjB;EASA,WAAW;EACX,aAAa;EACb,IAAoB,SAAU,UAAS,CAAC,MAAV,GAAiB,CAAjB,CAAV,KAAmC,GAAvD;IAAA,aAAa,IAAb;;AAEA;AAAA;;IACE,QAAQ,CAAC,IAAT,CAAc;MACZ,MAAM,QADM;MAEZ,KAAK,YAAU,IAFH;MAGZ,MAAM,OAAK,GAHC;MAIZ,MAAM,OAAQ,MAJF;KAAd;AADF;AAOA;AAAA;;IACE,QAAQ,CAAC,IAAT,CAAc;MACZ,MAAM,MADM;MAEZ,KAAK,YAAU,IAFH;MAGZ,MAAM,IAHM;KAAd;AADF;SAMA;AAnCsC","file":"public/javascripts/app/lib/requireUtils.js","sourcesContent":["module.exports.getParentFolders = (subPath, urlPrefix='/test/') ->\n  return [] unless subPath\n  paths = []\n  parts = subPath.split('/')\n  while parts.length\n    parts.pop()\n    paths.unshift {\n      name: parts[parts.length-1] or 'All'\n      url: urlPrefix + parts.join('/')\n    }\n  paths\n\nmodule.exports.parseImmediateChildren = (allChildren, subPath, baseRequirePath='test/app/', urlPrefix='/test/') ->\n  return [] unless allChildren\n  folders = {}\n  files = {}\n\n  requirePrefix = baseRequirePath + subPath\n  if requirePrefix[requirePrefix.length-1] isnt '/'\n    requirePrefix += '/'\n\n  for f in allChildren\n    f = f[requirePrefix.length..]\n    continue unless f\n    parts = f.split('/')\n    name = parts[0]\n    group = if parts.length is 1 then files else folders\n    group[name] ?= 0\n    group[name] += 1\n\n  children = []\n  urlPrefix += subPath\n  urlPrefix += '/' if urlPrefix[urlPrefix.length-1] isnt '/'\n\n  for name in _.keys(folders)\n    children.push {\n      type: 'folder',\n      url: urlPrefix+name\n      name: name+'/'\n      size: folders[name]\n    }\n  for name in _.keys(files)\n    children.push {\n      type: 'file',\n      url: urlPrefix+name\n      name: name\n    }\n  children\n"]}