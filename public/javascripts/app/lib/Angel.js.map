{"version":3,"sources":["app/lib/Angel.coffee"],"names":[],"mappings":"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","file":"public/javascripts/app/lib/Angel.js","sourcesContent":["# Every Angel has one web worker attached to it. It will call methods inside the worker and kill it if it times out.\n# God is the public API; Angels are an implementation detail. Each God can have one or more Angels.\n\n{now} = require 'lib/world/world_utils'\nWorld = require 'lib/world/world'\nCocoClass = require 'core/CocoClass'\nGoalManager = require 'lib/world/GoalManager'\n{sendContactMessage} = require 'core/contact'\nerrors = require 'core/errors'\n\nreportedLoadErrorAlready = false\n\nmodule.exports = class Angel extends CocoClass\n  @nicks: ['Archer', 'Lana', 'Cyril', 'Pam', 'Cheryl', 'Woodhouse', 'Ray', 'Krieger']\n\n  infiniteLoopIntervalDuration: 10000  # check this often; must be longer than other two combined\n  infiniteLoopTimeoutDuration: 7500  # wait this long for a response when checking\n  abortTimeoutDuration: 500  # give in-process or dying workers this long to give up\n\n  subscriptions:\n    'level:flag-updated': 'onFlagEvent'\n    'playback:stop-real-time-playback': 'onStopRealTimePlayback'\n    'level:escape-pressed': 'onEscapePressed'\n\n  constructor: (@shared) ->\n    super()\n    @say 'Got my wings.'\n    isIE = window.navigator and (window.navigator.userAgent.search('MSIE') isnt -1 or window.navigator.appName is 'Microsoft Internet Explorer')\n    slowerSimulations = isIE  #or @shared.headless\n    # Since IE is so slow to serialize without transferable objects, we can't trust it.\n    # We also noticed the headless_client simulator needing more time. (This does both Simulators, though.) If we need to use lots of headless clients, enable this.\n    if slowerSimulations\n      @infiniteLoopIntervalDuration *= 10\n      @infiniteLoopTimeoutDuration *= 10\n      @abortTimeoutDuration *= 10\n    @initialized = false\n    @running = false\n    @allLogs = []\n    @hireWorker()\n    @shared.angels.push @\n    @listenTo @shared.gameUIState.get('realTimeInputEvents'), 'add', @onAddRealTimeInputEvent\n\n  destroy: ->\n    @fireWorker false\n    _.remove @shared.angels, @\n    super()\n\n  workIfIdle: ->\n    @doWork() unless @running\n\n  # say: debugging stuff, usually off; log: important performance indicators, keep on\n  say: (args...) -> #@log args...\n  log: ->\n    # console.info.apply is undefined in IE9, CoffeeScript splats invocation won't work.\n    # http://stackoverflow.com/questions/5472938/does-ie9-support-console-log-and-is-it-a-real-function\n    message = \"|#{@shared.godNick}'s #{@nick}|\"\n    message += \" #{arg}\" for arg in arguments\n    console.info message\n    @allLogs.push message\n\n  testWorker: =>\n    return if @destroyed\n    clearTimeout @condemnTimeout\n    @condemnTimeout = _.delay @infinitelyLooped, @infiniteLoopTimeoutDuration\n    @say 'Let\\'s give it', @infiniteLoopTimeoutDuration, 'to not loop.'\n    @worker.postMessage func: 'reportIn'\n\n  onWorkerMessage: (event) =>\n    return @say 'Currently aborting old work.' if @aborting and event.data.type isnt 'abort'\n\n    switch event.data.type\n      # First step: worker has to load the scripts.\n      when 'worker-initialized'\n        unless @initialized\n          @log \"Worker initialized after #{(new Date()) - @worker.creationTime}ms\"\n          @initialized = true\n          @doWork()\n\n      # We watch over the worker as it loads the world frames to make sure it doesn't infinitely loop.\n      when 'start-load-frames'\n        clearTimeout @condemnTimeout\n      when 'report-in'\n        @say 'Worker reported in.'\n        clearTimeout @condemnTimeout\n      when 'end-load-frames'\n        clearTimeout @condemnTimeout\n        @beholdGoalStates {goalStates: event.data.goalStates, overallStatus: event.data.overallStatus, preload: false, totalFrames: event.data.totalFrames, lastFrameHash: event.data.lastFrameHash, simulationFrameRate: event.data.simulationFrameRate}  # Work ends here if we're headless.\n      when 'end-preload-frames'\n        clearTimeout @condemnTimeout\n        @beholdGoalStates {goalStates: event.data.goalStates, overallStatus: event.data.overallStatus, preload: true, simulationFrameRate: event.data.simulationFrameRate}\n\n      # We have to abort like an infinite loop if we see one of these; they're not really recoverable\n      when 'non-user-code-problem'\n        @publishGodEvent 'non-user-code-problem', problem: event.data.problem\n        if @shared.firstWorld\n          @infinitelyLooped(false, true)  # For now, this should do roughly the right thing if it happens during load.\n        else\n          @fireWorker()\n\n      # If it didn't finish simulating successfully, or we abort the worker.\n      when 'abort'\n        @say 'Aborted.', event.data\n        clearTimeout @abortTimeout\n        @aborting = false\n        @running = false\n        _.remove @shared.busyAngels, @\n        @doWork()\n\n      # We pay attention to certain progress indicators as the world loads.\n      when 'console-log'\n        @log event.data.args...\n      when 'user-code-problem'\n        @publishGodEvent 'user-code-problem', problem: event.data.problem\n      when 'world-load-progress-changed'\n        progress = event.data.progress\n        progress = Math.min(progress, 0.9) if @work.indefiniteLength\n        @publishGodEvent 'world-load-progress-changed', { progress }\n        unless event.data.progress is 1 or @work.preload or @work.headless or @work.synchronous or @deserializationQueue.length or (@shared.firstWorld and not @shared.spectate)\n          @worker.postMessage func: 'serializeFramesSoFar'  # Stream it!\n\n      # We have some or all of the frames serialized, so let's send the (partially?) simulated world to the Surface.\n      when 'some-frames-serialized', 'new-world'\n        deserializationArgs = [event.data.serialized, event.data.goalStates, event.data.startFrame, event.data.endFrame, @streamingWorld]\n        @deserializationQueue.push deserializationArgs\n        if @deserializationQueue.length is 1\n          @beholdWorld deserializationArgs...\n\n      else\n        @log 'Received unsupported message:', event.data\n\n  beholdGoalStates: ({goalStates, overallStatus, preload, totalFrames, lastFrameHash, simulationFrameRate}) ->\n    return if @aborting\n    event = goalStates: goalStates, preload: preload ? false, overallStatus: overallStatus\n    event.totalFrames = totalFrames if totalFrames?\n    event.lastFrameHash = lastFrameHash if lastFrameHash?\n    event.simulationFrameRate = simulationFrameRate if simulationFrameRate?\n    @publishGodEvent 'goals-calculated', event\n    @finishWork() if @shared.headless\n\n  beholdWorld: (serialized, goalStates, startFrame, endFrame, streamingWorld) ->\n    return if @aborting\n    # Toggle BOX2D_ENABLED during deserialization so that if we have box2d in the namespace, the Collides Components still don't try to create bodies for deserialized Thangs upon attachment.\n    window.BOX2D_ENABLED = false\n    streamingWorld?.indefiniteLength = @work.indefiniteLength\n    @streamingWorld = World.deserialize serialized, @shared.worldClassMap, @shared.lastSerializedWorldFrames, @finishBeholdingWorld(goalStates), startFrame, endFrame, @work.level, streamingWorld\n    window.BOX2D_ENABLED = true\n    @shared.lastSerializedWorldFrames = serialized.frames\n\n  finishBeholdingWorld: (goalStates) -> (world) =>\n    return if @aborting or @destroyed\n    finished = world.frames.length is world.totalFrames\n    if @work?.indefiniteLength and world.victory?\n      finished = true\n      world.totalFrames = world.frames.length\n    firstChangedFrame = if @work?.indefiniteLength then 0 else world.findFirstChangedFrame @shared.world\n    eventType = if finished then 'new-world-created' else 'streaming-world-updated'\n    if finished\n      @shared.world = world\n    @publishGodEvent eventType, world: world, firstWorld: @shared.firstWorld, goalStates: goalStates, team: me.team, firstChangedFrame: firstChangedFrame, finished: finished\n    if finished\n      for scriptNote in @shared.world.scriptNotes\n        Backbone.Mediator.publish scriptNote.channel, scriptNote.event\n      @shared.goalManager?.world = world\n      @finishWork()\n    else\n      @deserializationQueue.shift()  # Finished with this deserialization.\n      if deserializationArgs = @deserializationQueue[0]  # Start another?\n        @beholdWorld deserializationArgs...\n\n  finishWork: ->\n    @streamingWorld = null\n    @shared.firstWorld = false\n    @deserializationQueue = []\n    @running = false\n    _.remove @shared.busyAngels, @\n    clearTimeout @condemnTimeout\n    clearInterval @purgatoryTimer\n    @condemnTimeout = @purgatoryTimer = null\n    @doWork()\n\n  finalizePreload: ->\n    @say 'Finalize preload.'\n    @worker.postMessage func: 'finalizePreload'\n    @work.preload = false\n\n  infinitelyLooped: (escaped=false, nonUserCodeProblem=false) =>\n    @say 'On infinitely looped! Aborting?', @aborting\n    return if @aborting\n    problem = type: 'runtime', level: 'error', id: 'runtime_InfiniteLoop', message: 'Code never finished. It\\'s either really slow or has an infinite loop.'\n    problem.message = 'Escape pressed; code aborted.' if escaped\n    @publishGodEvent 'user-code-problem', problem: problem\n    @publishGodEvent 'infinite-loop', firstWorld: @shared.firstWorld, nonUserCodeProblem: nonUserCodeProblem\n    @reportLoadError() if nonUserCodeProblem\n    @fireWorker()\n\n  publishGodEvent: (channel, e) ->\n    # For Simulator. TODO: refactor all the god:* Mediator events to be local events.\n    @shared.god.trigger channel, e\n    e.god = @shared.god\n    Backbone.Mediator.publish 'god:' + channel, e\n\n  reportLoadError: ->\n    return if me.isAdmin() or /dev=true/.test(window.location?.href ? '') or reportedLoadErrorAlready\n    reportedLoadErrorAlready = true\n    context = email: me.get('email')\n    context.message = \"Automatic Report - Unable to Load Level\\nLogs:\\n\" + @allLogs.join('\\n')\n    if $.browser\n      context.browser = \"#{$.browser.platform} #{$.browser.name} #{$.browser.versionNumber}\"\n    context.screenSize = \"#{screen?.width ? $(window).width()} x #{screen?.height ? $(window).height()}\"\n    context.subject = \"Level Load Error: #{@work?.level?.name or 'Unknown Level'}\"\n    context.levelSlug = @work?.level?.slug\n    sendContactMessage context\n\n  doWork: ->\n    return if @aborting\n    return @say 'Not initialized for work yet.' unless @initialized\n    if @shared.workQueue.length\n      @work = @shared.workQueue.shift()\n      return _.defer @simulateSync, @work if @work.synchronous\n      @say 'Running world...'\n      @running = true\n      @shared.busyAngels.push @\n      @deserializationQueue = []\n      @worker.postMessage func: 'runWorld', args: @work\n      clearTimeout @purgatoryTimer\n      @say 'Infinite loop timer started at interval of', @infiniteLoopIntervalDuration\n      @purgatoryTimer = setInterval @testWorker, @infiniteLoopIntervalDuration\n    else\n      @say 'No work to do.'\n      @hireWorker()\n\n  abort: ->\n    return unless @worker and @running\n    @say 'Aborting...'\n    @running = false\n    @work = null\n    @streamingWorld = null\n    @deserializationQueue = []\n    _.remove @shared.busyAngels, @\n    @abortTimeout = _.delay @fireWorker, @abortTimeoutDuration\n    @aborting = true\n    @worker.postMessage func: 'abort'\n\n  fireWorker: (rehire=true) =>\n    return if @destroyed\n    @aborting = false\n    @running = false\n    _.remove @shared.busyAngels, @\n    @worker?.removeEventListener 'message', @onWorkerMessage\n    @worker?.terminate()\n    @worker = null\n    clearTimeout @condemnTimeout\n    clearInterval @purgatoryTimer\n    @say 'Fired worker.'\n    @initialized = false\n    @work = null\n    @streamingWorld = null\n    @deserializationQueue = []\n    @hireWorker() if rehire\n\n  hireWorker: ->\n    unless Worker?\n      unless @initialized\n        @initialized = true\n        @doWork()\n      return null\n    return if @worker\n    @say 'Hiring worker.'\n    @worker = new Worker @shared.workerCode\n    @worker.addEventListener 'error', errors.onWorkerError\n    @worker.addEventListener 'message', @onWorkerMessage\n    @worker.creationTime = new Date()\n\n  onFlagEvent: (e) ->\n    return unless @running and @work.realTime\n    @worker.postMessage func: 'addFlagEvent', args: e\n\n  onAddRealTimeInputEvent: (realTimeInputEvent) ->\n    return unless @running and @work.realTime\n    @worker.postMessage func: 'addRealTimeInputEvent', args: realTimeInputEvent.toJSON()\n\n  onStopRealTimePlayback: (e) ->\n    return unless @running and @work.realTime\n    @work.realTime = false\n    @lastRealTimeWork = new Date()\n    @worker.postMessage func: 'stopRealTimePlayback'\n\n  onEscapePressed: (e) ->\n    return unless @running and not @work.realTime\n    return if (new Date() - @lastRealTimeWork) < 1000  # Fires right after onStopRealTimePlayback\n    @infinitelyLooped true\n\n  #### Synchronous code for running worlds on main thread (profiling / IE9) ####\n  simulateSync: (work) =>\n    console?.profile? \"World Generation #{(Math.random() * 1000).toFixed(0)}\" if imitateIE9?\n    work.t0 = now()\n    work.world = testWorld = new World work.userCodeMap\n    work.world.levelSessionIDs = work.levelSessionIDs\n    work.world.submissionCount = work.submissionCount\n    work.world.fixedSeed = work.fixedSeed\n    work.world.flagHistory = work.flagHistory ? []\n    work.world.difficulty = work.difficulty\n    work.world.loadFromLevel work.level\n    work.world.preloading = work.preload\n    work.world.headless = work.headless\n    work.world.realTime = work.realTime\n    if @shared.goalManager\n      testGM = new GoalManager(testWorld)\n      testGM.setGoals work.goals\n      testGM.setCode work.userCodeMap\n      testGM.worldGenerationWillBegin()\n      testWorld.setGoalManager testGM\n    @doSimulateWorld work\n    console?.profileEnd?() if imitateIE9?\n    console.log 'Construction:', (work.t1 - work.t0).toFixed(0), 'ms. Simulation:', (work.t2 - work.t1).toFixed(0), 'ms --', ((work.t2 - work.t1) / testWorld.frames.length).toFixed(3), 'ms per frame, profiled.'\n\n    # If performance was really a priority in IE9, we would rework things to be able to skip this step.\n    goalStates = testGM?.getGoalStates()\n    work.world.goalManager.worldGenerationEnded() if work.world.ended\n\n    if work.headless\n      simulationFrameRate = work.world.frames.length / (work.t2 - work.t1) * 1000 * 30 / work.world.frameRate\n      @beholdGoalStates {goalStates, overallStatus: testGM.checkOverallStatus(), preload: false, totalFrames: work.world.totalFrames, lastFrameHash: work.world.frames[work.world.totalFrames - 2]?.hash, simulationFrameRate: simulationFrameRate}\n      return\n\n    serialized = world.serialize()\n    window.BOX2D_ENABLED = false\n    World.deserialize serialized.serializedWorld, @shared.worldClassMap, @shared.lastSerializedWorldFrames, @finishBeholdingWorld(goalStates), serialized.startFrame, serialized.endFrame, work.level\n    window.BOX2D_ENABLED = true\n    @shared.lastSerializedWorldFrames = serialized.serializedWorld.frames\n\n  doSimulateWorld: (work) ->\n    work.t1 = now()\n    Math.random = work.world.rand.randf  # so user code is predictable\n    Aether.replaceBuiltin('Math', Math)\n    replacedLoDash = _.runInContext(window)\n    _[key] = replacedLoDash[key] for key, val of replacedLoDash\n    i = 0\n    while i < work.world.totalFrames\n      frame = work.world.getFrame i++\n    @publishGodEvent 'world-load-progress-changed', progress: 1\n    work.world.ended = true\n    system.finish work.world.thangs for system in work.world.systems\n    work.t2 = now()\n"]}