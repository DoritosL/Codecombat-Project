{"version":3,"sources":["app/lib/surface/Dropper.coffee"],"names":[],"mappings":";AAAA;;AAAA,UAAgB;oBACd,aAAY;;oBACZ,cAAa;;EAEA;IACX,IAAC,SAAD,GAAY;aAAA,SAAC,CAAD;eAAO,KAAC,KAAD,CAAM,CAAN;MAAP;IAAA;EADD;;oBAGb,OAAM;AACJ;IAAA,KAAO,IAAC,WAAR;MACE,IAAC,WAAD,GAAc;AACd,aAFF;;IAIA,IAAkB,IAAC,YAAD,GAAe,CAAjC;MAAA,EAAE,IAAC,aAAH;;IAGA,MAAM,QAAQ,CAAC,MAAM,CAAC,MAAhB;IACN,SAAS,QAAQ,CAAC,MAAM,CAAC,cAAhB,CAA+B,CAA/B;IACT,IAAC,WAAD,IAAe,CAAC,MAAM,MAAP,IAAiB;IAGhC,IAAC,YAAD,IAAgB,SAAS,IAAC,WAAV;WAChB,IAAC,WAAD,GAAc,IAAC,WAAD,GAAc;EAdxB;;oBAgBN,OAAM;AACJ,WAAO,IAAC,YAAD,GAAe;EADlB;;;;;;AAGR,MAAM,CAAC,OAAP,GAAqB","file":"public/javascripts/app/lib/surface/Dropper.js","sourcesContent":["Dropper = class Dropper\n  lostFrames: 0.0\n  dropCounter: 0\n\n  constructor: ->\n    @listener = (e) => @tick(e)\n\n  tick: ->\n    unless @tickedOnce\n      @tickedOnce = true  # Can't get measured FPS on the 0th frame.\n      return\n\n    --@dropCounter if @dropCounter > 0\n\n    # Track number of frames we've lost since the last tick.\n    fps = createjs.Ticker.getFPS()\n    actual = createjs.Ticker.getMeasuredFPS(1)\n    @lostFrames += (fps - actual) / fps\n\n    # If lostFrames > 1, drop that number for the next tick.\n    @dropCounter += parseInt @lostFrames\n    @lostFrames = @lostFrames % 1\n\n  drop: ->\n    return @dropCounter > 0\n\nmodule.exports = new Dropper()\n"]}