{"version":3,"sources":["app/lib/image_filter.coffee"],"names":[],"mappings":"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","file":"public/javascripts/app/lib/image_filter.js","sourcesContent":["# Based on: http://www.html5rocks.com/en/tutorials/canvas/imagefilters/\n\nFilters = {}\n\nFilters.getPixels = (img) ->\n  c = @getCanvas(img.naturalWidth, img.naturalHeight)\n  ctx = c.getContext('2d')\n  ctx.drawImage(img, 0, 0)\n  return ctx.getImageData(0, 0, c.width, c.height)\n\nFilters.getCanvas = (w, h) ->\n  c = document.createElement('canvas')\n  c.width = w\n  c.height = h\n  return c\n\nFilters.filterImage = (filter, image, args...) ->\n  args = [this.getPixels(image)].concat(args)\n  return filter(args...)\n\nFilters.brightness = (pixels, adjustment) ->\n  d = pixels.data\n  i = 0\n  while i < d.length\n    d[i] *= adjustment\n    d[i+1] *= adjustment\n    d[i+2] *= adjustment\n    i+=4\n  return pixels\n\nmodule.exports.darkenImage = darkenImage = (img, borderImageSelector, pct=0.5) ->\n  jqimg = $(img)\n  cachedValue = jqimg.data('darkened')\n  if cachedValue\n    $(borderImageSelector).css 'border-image-source', 'url(' + cachedValue + ')'\n    return img.src = cachedValue \n  jqimg.data('original', img.src) unless jqimg.data('original')\n  if not (img.naturalWidth > 0 and img.naturalHeight > 0)\n    console.warn 'Tried to darken image', img, 'but it has natural dimensions', img.naturalWidth, img.naturalHeight\n    return img\n  imageData = Filters.filterImage(Filters.brightness, img, pct)\n  c = Filters.getCanvas(img.naturalWidth, img.naturalHeight)\n  ctx = c.getContext('2d')\n  ctx.putImageData(imageData, 0, 0)\n  img.src = c.toDataURL()\n  $(borderImageSelector).css 'border-image-source', 'url(' + img.src + ')'\n  jqimg.data('darkened', img.src)\n\nmodule.exports.revertImage = revertImage = (img, borderImageSelector) ->\n  jqimg = $(img)\n  return unless jqimg.data('original')\n  $(borderImageSelector).css 'border-image-source', 'url(' + jqimg.data('original') + ')'\n  img.src = jqimg.data('original')\n"]}