{"version":3,"sources":["app/lib/Angel.coffee","app/lib/AudioPlayer.coffee","app/lib/Bus.coffee","app/lib/DefaultScripts.coffee","app/lib/God.coffee","app/lib/HtmlExtractor.coffee","app/lib/LevelBus.coffee","app/lib/LevelLoader.coffee","app/lib/LevelSetupManager.coffee","app/lib/LocalMongo.coffee","app/lib/SolutionConceptTagger.coffee","app/lib/aether_utils.coffee","app/lib/coursesHelper.coffee","app/lib/image_filter.coffee","app/lib/requireUtils.coffee","app/lib/scripts/DOMScriptModule.coffee","app/lib/scripts/PlaybackScriptModule.coffee","app/lib/scripts/ScriptManager.coffee","app/lib/scripts/ScriptModule.coffee","app/lib/scripts/SoundScriptModule.coffee","app/lib/scripts/SpriteScriptModule.coffee","app/lib/scripts/SurfaceScriptModule.coffee","app/lib/simulator/Simulator.coffee","app/lib/sprites/SpriteBuilder.coffee","app/lib/sprites/SpriteExporter.coffee","app/lib/sprites/SpriteParser.coffee","app/lib/surface/Camera.coffee","app/lib/surface/CameraBorder.coffee","app/lib/surface/CoordinateDisplay.coffee","app/lib/surface/CoordinateGrid.coffee","app/lib/surface/CountdownScreen.coffee","app/lib/surface/DebugDisplay.coffee","app/lib/surface/Dimmer.coffee","app/lib/surface/Dropper.coffee","app/lib/surface/FlagLank.coffee","app/lib/surface/IndieLank.coffee","app/lib/surface/Label.coffee","app/lib/surface/Lank.coffee","app/lib/surface/LankBoss.coffee","app/lib/surface/LayerAdapter.coffee","app/lib/surface/Letterbox.coffee","app/lib/surface/Mark.coffee","app/lib/surface/MusicPlayer.coffee","app/lib/surface/PlaybackOverScreen.coffee","app/lib/surface/PointChooser.coffee","app/lib/surface/RegionChooser.coffee","app/lib/surface/SegmentedSprite.coffee","app/lib/surface/SingularSprite.coffee","app/lib/surface/Surface.coffee","app/lib/surface/TrailMaster.coffee","app/lib/surface/sprite_utils.coffee","app/lib/world/GoalManager.coffee","app/lib/world/Grid.coffee","app/lib/world/box2d.coffee","app/lib/world/component.coffee","app/lib/world/ellipse.coffee","app/lib/world/errors.coffee","app/lib/world/line_segment.coffee","app/lib/world/names.coffee","app/lib/world/rand.coffee","app/lib/world/rectangle.coffee","app/lib/world/script_event_prereqs.coffee","app/lib/world/system.coffee","app/lib/world/systems/action.coffee","app/lib/world/systems/collision.coffee","app/lib/world/systems/movement.coffee","app/lib/world/thang.coffee","app/lib/world/thang_state.coffee","app/lib/world/vector.coffee","app/lib/world/world.coffee","app/lib/world/world_frame.coffee","app/lib/world/world_script_note.coffee","app/lib/world/world_utils.coffee"],"names":[],"mappings":"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","file":"public/javascripts/app/lib.js","sourcesContent":["# Every Angel has one web worker attached to it. It will call methods inside the worker and kill it if it times out.\n# God is the public API; Angels are an implementation detail. Each God can have one or more Angels.\n\n{now} = require 'lib/world/world_utils'\nWorld = require 'lib/world/world'\nCocoClass = require 'core/CocoClass'\nGoalManager = require 'lib/world/GoalManager'\n{sendContactMessage} = require 'core/contact'\nerrors = require 'core/errors'\n\nreportedLoadErrorAlready = false\n\nmodule.exports = class Angel extends CocoClass\n  @nicks: ['Archer', 'Lana', 'Cyril', 'Pam', 'Cheryl', 'Woodhouse', 'Ray', 'Krieger']\n\n  infiniteLoopIntervalDuration: 10000  # check this often; must be longer than other two combined\n  infiniteLoopTimeoutDuration: 7500  # wait this long for a response when checking\n  abortTimeoutDuration: 500  # give in-process or dying workers this long to give up\n\n  subscriptions:\n    'level:flag-updated': 'onFlagEvent'\n    'playback:stop-real-time-playback': 'onStopRealTimePlayback'\n    'level:escape-pressed': 'onEscapePressed'\n\n  constructor: (@shared) ->\n    super()\n    @say 'Got my wings.'\n    isIE = window.navigator and (window.navigator.userAgent.search('MSIE') isnt -1 or window.navigator.appName is 'Microsoft Internet Explorer')\n    slowerSimulations = isIE  #or @shared.headless\n    # Since IE is so slow to serialize without transferable objects, we can't trust it.\n    # We also noticed the headless_client simulator needing more time. (This does both Simulators, though.) If we need to use lots of headless clients, enable this.\n    if slowerSimulations\n      @infiniteLoopIntervalDuration *= 10\n      @infiniteLoopTimeoutDuration *= 10\n      @abortTimeoutDuration *= 10\n    @initialized = false\n    @running = false\n    @allLogs = []\n    @hireWorker()\n    @shared.angels.push @\n    @listenTo @shared.gameUIState.get('realTimeInputEvents'), 'add', @onAddRealTimeInputEvent\n\n  destroy: ->\n    @fireWorker false\n    _.remove @shared.angels, @\n    super()\n\n  workIfIdle: ->\n    @doWork() unless @running\n\n  # say: debugging stuff, usually off; log: important performance indicators, keep on\n  say: (args...) -> #@log args...\n  log: ->\n    # console.info.apply is undefined in IE9, CoffeeScript splats invocation won't work.\n    # http://stackoverflow.com/questions/5472938/does-ie9-support-console-log-and-is-it-a-real-function\n    message = \"|#{@shared.godNick}'s #{@nick}|\"\n    message += \" #{arg}\" for arg in arguments\n    console.info message\n    @allLogs.push message\n\n  testWorker: =>\n    return if @destroyed\n    clearTimeout @condemnTimeout\n    @condemnTimeout = _.delay @infinitelyLooped, @infiniteLoopTimeoutDuration\n    @say 'Let\\'s give it', @infiniteLoopTimeoutDuration, 'to not loop.'\n    @worker.postMessage func: 'reportIn'\n\n  onWorkerMessage: (event) =>\n    return @say 'Currently aborting old work.' if @aborting and event.data.type isnt 'abort'\n\n    switch event.data.type\n      # First step: worker has to load the scripts.\n      when 'worker-initialized'\n        unless @initialized\n          @log \"Worker initialized after #{(new Date()) - @worker.creationTime}ms\"\n          @initialized = true\n          @doWork()\n\n      # We watch over the worker as it loads the world frames to make sure it doesn't infinitely loop.\n      when 'start-load-frames'\n        clearTimeout @condemnTimeout\n      when 'report-in'\n        @say 'Worker reported in.'\n        clearTimeout @condemnTimeout\n      when 'end-load-frames'\n        clearTimeout @condemnTimeout\n        @beholdGoalStates {goalStates: event.data.goalStates, overallStatus: event.data.overallStatus, preload: false, totalFrames: event.data.totalFrames, lastFrameHash: event.data.lastFrameHash, simulationFrameRate: event.data.simulationFrameRate}  # Work ends here if we're headless.\n      when 'end-preload-frames'\n        clearTimeout @condemnTimeout\n        @beholdGoalStates {goalStates: event.data.goalStates, overallStatus: event.data.overallStatus, preload: true, simulationFrameRate: event.data.simulationFrameRate}\n\n      # We have to abort like an infinite loop if we see one of these; they're not really recoverable\n      when 'non-user-code-problem'\n        @publishGodEvent 'non-user-code-problem', problem: event.data.problem\n        if @shared.firstWorld\n          @infinitelyLooped(false, true)  # For now, this should do roughly the right thing if it happens during load.\n        else\n          @fireWorker()\n\n      # If it didn't finish simulating successfully, or we abort the worker.\n      when 'abort'\n        @say 'Aborted.', event.data\n        clearTimeout @abortTimeout\n        @aborting = false\n        @running = false\n        _.remove @shared.busyAngels, @\n        @doWork()\n\n      # We pay attention to certain progress indicators as the world loads.\n      when 'console-log'\n        @log event.data.args...\n      when 'user-code-problem'\n        @publishGodEvent 'user-code-problem', problem: event.data.problem\n      when 'world-load-progress-changed'\n        progress = event.data.progress\n        progress = Math.min(progress, 0.9) if @work.indefiniteLength\n        @publishGodEvent 'world-load-progress-changed', { progress }\n        unless event.data.progress is 1 or @work.preload or @work.headless or @work.synchronous or @deserializationQueue.length or (@shared.firstWorld and not @shared.spectate)\n          @worker.postMessage func: 'serializeFramesSoFar'  # Stream it!\n\n      # We have some or all of the frames serialized, so let's send the (partially?) simulated world to the Surface.\n      when 'some-frames-serialized', 'new-world'\n        deserializationArgs = [event.data.serialized, event.data.goalStates, event.data.startFrame, event.data.endFrame, @streamingWorld]\n        @deserializationQueue.push deserializationArgs\n        if @deserializationQueue.length is 1\n          @beholdWorld deserializationArgs...\n\n      else\n        @log 'Received unsupported message:', event.data\n\n  beholdGoalStates: ({goalStates, overallStatus, preload, totalFrames, lastFrameHash, simulationFrameRate}) ->\n    return if @aborting\n    event = goalStates: goalStates, preload: preload ? false, overallStatus: overallStatus\n    event.totalFrames = totalFrames if totalFrames?\n    event.lastFrameHash = lastFrameHash if lastFrameHash?\n    event.simulationFrameRate = simulationFrameRate if simulationFrameRate?\n    @publishGodEvent 'goals-calculated', event\n    @finishWork() if @shared.headless\n\n  beholdWorld: (serialized, goalStates, startFrame, endFrame, streamingWorld) ->\n    return if @aborting\n    # Toggle BOX2D_ENABLED during deserialization so that if we have box2d in the namespace, the Collides Components still don't try to create bodies for deserialized Thangs upon attachment.\n    window.BOX2D_ENABLED = false\n    streamingWorld?.indefiniteLength = @work.indefiniteLength\n    @streamingWorld = World.deserialize serialized, @shared.worldClassMap, @shared.lastSerializedWorldFrames, @finishBeholdingWorld(goalStates), startFrame, endFrame, @work.level, streamingWorld\n    window.BOX2D_ENABLED = true\n    @shared.lastSerializedWorldFrames = serialized.frames\n\n  finishBeholdingWorld: (goalStates) -> (world) =>\n    return if @aborting or @destroyed\n    finished = world.frames.length is world.totalFrames\n    if @work?.indefiniteLength and world.victory?\n      finished = true\n      world.totalFrames = world.frames.length\n    firstChangedFrame = if @work?.indefiniteLength then 0 else world.findFirstChangedFrame @shared.world\n    eventType = if finished then 'new-world-created' else 'streaming-world-updated'\n    if finished\n      @shared.world = world\n    @publishGodEvent eventType, world: world, firstWorld: @shared.firstWorld, goalStates: goalStates, team: me.team, firstChangedFrame: firstChangedFrame, finished: finished\n    if finished\n      for scriptNote in @shared.world.scriptNotes\n        Backbone.Mediator.publish scriptNote.channel, scriptNote.event\n      @shared.goalManager?.world = world\n      @finishWork()\n    else\n      @deserializationQueue.shift()  # Finished with this deserialization.\n      if deserializationArgs = @deserializationQueue[0]  # Start another?\n        @beholdWorld deserializationArgs...\n\n  finishWork: ->\n    @streamingWorld = null\n    @shared.firstWorld = false\n    @deserializationQueue = []\n    @running = false\n    _.remove @shared.busyAngels, @\n    clearTimeout @condemnTimeout\n    clearInterval @purgatoryTimer\n    @condemnTimeout = @purgatoryTimer = null\n    @doWork()\n\n  finalizePreload: ->\n    @say 'Finalize preload.'\n    @worker.postMessage func: 'finalizePreload'\n    @work.preload = false\n\n  infinitelyLooped: (escaped=false, nonUserCodeProblem=false) =>\n    @say 'On infinitely looped! Aborting?', @aborting\n    return if @aborting\n    problem = type: 'runtime', level: 'error', id: 'runtime_InfiniteLoop', message: 'Code never finished. It\\'s either really slow or has an infinite loop.'\n    problem.message = 'Escape pressed; code aborted.' if escaped\n    @publishGodEvent 'user-code-problem', problem: problem\n    @publishGodEvent 'infinite-loop', firstWorld: @shared.firstWorld, nonUserCodeProblem: nonUserCodeProblem\n    @reportLoadError() if nonUserCodeProblem\n    @fireWorker()\n\n  publishGodEvent: (channel, e) ->\n    # For Simulator. TODO: refactor all the god:* Mediator events to be local events.\n    @shared.god.trigger channel, e\n    e.god = @shared.god\n    Backbone.Mediator.publish 'god:' + channel, e\n\n  reportLoadError: ->\n    return if me.isAdmin() or /dev=true/.test(window.location?.href ? '') or reportedLoadErrorAlready\n    reportedLoadErrorAlready = true\n    context = email: me.get('email')\n    context.message = \"Automatic Report - Unable to Load Level\\nLogs:\\n\" + @allLogs.join('\\n')\n    if $.browser\n      context.browser = \"#{$.browser.platform} #{$.browser.name} #{$.browser.versionNumber}\"\n    context.screenSize = \"#{screen?.width ? $(window).width()} x #{screen?.height ? $(window).height()}\"\n    context.subject = \"Level Load Error: #{@work?.level?.name or 'Unknown Level'}\"\n    context.levelSlug = @work?.level?.slug\n    sendContactMessage context\n\n  doWork: ->\n    return if @aborting\n    return @say 'Not initialized for work yet.' unless @initialized\n    if @shared.workQueue.length\n      @work = @shared.workQueue.shift()\n      return _.defer @simulateSync, @work if @work.synchronous\n      @say 'Running world...'\n      @running = true\n      @shared.busyAngels.push @\n      @deserializationQueue = []\n      @worker.postMessage func: 'runWorld', args: @work\n      clearTimeout @purgatoryTimer\n      @say 'Infinite loop timer started at interval of', @infiniteLoopIntervalDuration\n      @purgatoryTimer = setInterval @testWorker, @infiniteLoopIntervalDuration\n    else\n      @say 'No work to do.'\n      @hireWorker()\n\n  abort: ->\n    return unless @worker and @running\n    @say 'Aborting...'\n    @running = false\n    @work = null\n    @streamingWorld = null\n    @deserializationQueue = []\n    _.remove @shared.busyAngels, @\n    @abortTimeout = _.delay @fireWorker, @abortTimeoutDuration\n    @aborting = true\n    @worker.postMessage func: 'abort'\n\n  fireWorker: (rehire=true) =>\n    return if @destroyed\n    @aborting = false\n    @running = false\n    _.remove @shared.busyAngels, @\n    @worker?.removeEventListener 'message', @onWorkerMessage\n    @worker?.terminate()\n    @worker = null\n    clearTimeout @condemnTimeout\n    clearInterval @purgatoryTimer\n    @say 'Fired worker.'\n    @initialized = false\n    @work = null\n    @streamingWorld = null\n    @deserializationQueue = []\n    @hireWorker() if rehire\n\n  hireWorker: ->\n    unless Worker?\n      unless @initialized\n        @initialized = true\n        @doWork()\n      return null\n    return if @worker\n    @say 'Hiring worker.'\n    @worker = new Worker @shared.workerCode\n    @worker.addEventListener 'error', errors.onWorkerError\n    @worker.addEventListener 'message', @onWorkerMessage\n    @worker.creationTime = new Date()\n\n  onFlagEvent: (e) ->\n    return unless @running and @work.realTime\n    @worker.postMessage func: 'addFlagEvent', args: e\n\n  onAddRealTimeInputEvent: (realTimeInputEvent) ->\n    return unless @running and @work.realTime\n    @worker.postMessage func: 'addRealTimeInputEvent', args: realTimeInputEvent.toJSON()\n\n  onStopRealTimePlayback: (e) ->\n    return unless @running and @work.realTime\n    @work.realTime = false\n    @lastRealTimeWork = new Date()\n    @worker.postMessage func: 'stopRealTimePlayback'\n\n  onEscapePressed: (e) ->\n    return unless @running and not @work.realTime\n    return if (new Date() - @lastRealTimeWork) < 1000  # Fires right after onStopRealTimePlayback\n    @infinitelyLooped true\n\n  #### Synchronous code for running worlds on main thread (profiling / IE9) ####\n  simulateSync: (work) =>\n    console?.profile? \"World Generation #{(Math.random() * 1000).toFixed(0)}\" if imitateIE9?\n    work.t0 = now()\n    work.world = testWorld = new World work.userCodeMap\n    work.world.levelSessionIDs = work.levelSessionIDs\n    work.world.submissionCount = work.submissionCount\n    work.world.fixedSeed = work.fixedSeed\n    work.world.flagHistory = work.flagHistory ? []\n    work.world.difficulty = work.difficulty\n    work.world.loadFromLevel work.level\n    work.world.preloading = work.preload\n    work.world.headless = work.headless\n    work.world.realTime = work.realTime\n    if @shared.goalManager\n      testGM = new GoalManager(testWorld)\n      testGM.setGoals work.goals\n      testGM.setCode work.userCodeMap\n      testGM.worldGenerationWillBegin()\n      testWorld.setGoalManager testGM\n    @doSimulateWorld work\n    console?.profileEnd?() if imitateIE9?\n    console.log 'Construction:', (work.t1 - work.t0).toFixed(0), 'ms. Simulation:', (work.t2 - work.t1).toFixed(0), 'ms --', ((work.t2 - work.t1) / testWorld.frames.length).toFixed(3), 'ms per frame, profiled.'\n\n    # If performance was really a priority in IE9, we would rework things to be able to skip this step.\n    goalStates = testGM?.getGoalStates()\n    work.world.goalManager.worldGenerationEnded() if work.world.ended\n\n    if work.headless\n      simulationFrameRate = work.world.frames.length / (work.t2 - work.t1) * 1000 * 30 / work.world.frameRate\n      @beholdGoalStates {goalStates, overallStatus: testGM.checkOverallStatus(), preload: false, totalFrames: work.world.totalFrames, lastFrameHash: work.world.frames[work.world.totalFrames - 2]?.hash, simulationFrameRate: simulationFrameRate}\n      return\n\n    serialized = world.serialize()\n    window.BOX2D_ENABLED = false\n    World.deserialize serialized.serializedWorld, @shared.worldClassMap, @shared.lastSerializedWorldFrames, @finishBeholdingWorld(goalStates), serialized.startFrame, serialized.endFrame, work.level\n    window.BOX2D_ENABLED = true\n    @shared.lastSerializedWorldFrames = serialized.serializedWorld.frames\n\n  doSimulateWorld: (work) ->\n    work.t1 = now()\n    Math.random = work.world.rand.randf  # so user code is predictable\n    Aether.replaceBuiltin('Math', Math)\n    replacedLoDash = _.runInContext(window)\n    _[key] = replacedLoDash[key] for key, val of replacedLoDash\n    i = 0\n    while i < work.world.totalFrames\n      frame = work.world.getFrame i++\n    @publishGodEvent 'world-load-progress-changed', progress: 1\n    work.world.ended = true\n    system.finish work.world.thangs for system in work.world.systems\n    work.t2 = now()\n","CocoClass = require 'core/CocoClass'\ncache = {}\n{me} = require 'core/auth'\n\n# Top 20 obscene words (plus 'fiddlesticks') will trigger swearing Simlish with *beeps*.\n# Didn't like leaving so much profanity lying around in the source, so rot13'd.\nrot13 = (s) -> s.replace /[A-z]/g, (c) -> String.fromCharCode c.charCodeAt(0) + (if c.toUpperCase() <= 'M' then 13 else -13)\nswears = (rot13 s for s in ['nefrubyr', 'nffubyr', 'onfgneq', 'ovgpu', 'oybbql', 'obyybpxf', 'ohttre', 'pbpx', 'penc', 'phag', 'qnza', 'qnea', 'qvpx', 'qbhpur', 'snt', 'shpx', 'cvff', 'chffl', 'fuvg', 'fyhg', 'svqqyrfgvpxf'])\n\n# IE(11, 10, 9) throws an exception if createjs.FlashPlugin is undefined\n# Chrome and Firefox don't seem to care that it's undefined\nif createjs.FlashPlugin?\n  soundPlugins = [createjs.WebAudioPlugin, createjs.FlashPlugin, createjs.HTMLAudioPlugin]\nelse\n  soundPlugins = [createjs.WebAudioPlugin, createjs.HTMLAudioPlugin]\ncreatejs.Sound.registerPlugins(soundPlugins)\n\nclass Manifest\n  constructor: -> @storage = {}\n\n  add: (filename, group='misc') ->\n    name = name or filename\n    @storage[group] = [] unless @storage[group]?\n    return if filename in @storage[group]\n    @storage[group].push(filename)\n\n  addPrimarySound: (filename) -> @add(filename, 'primarySounds')\n  addSecondarySound: (filename) -> @add(filename, 'secondarySounds')\n  getData: -> return @storage\n\nclass Media\n  constructor: (name) -> @name = name if name\n\n  loaded: false\n  data: null\n  progress: 0.0\n  error: null\n  name: ''\n\nclass AudioPlayer extends CocoClass\n  subscriptions:\n    'audio-player:play-sound': (e) -> @playInterfaceSound e.trigger, e.volume\n\n  constructor: () ->\n    super()\n    @ext = if createjs.Sound.getCapability('mp3') then '.mp3' else '.ogg'\n    @camera = null\n    @listenToSound()\n    @createNewManifest()\n    @soundsToPlayWhenLoaded = {}\n\n  createNewManifest: ->\n    @manifest = new Manifest()\n\n  listenToSound: ->\n    # I would like to go through PreloadJS to organize loading by queue, but\n    # when I try to set it up, I get an error with the Sound plugin.\n    # So for now, we'll just load through SoundJS instead.\n    createjs.Sound.on 'fileload', @onSoundLoaded\n\n  applyPanning: (options, pos) ->\n    sup = @camera.worldToSurface pos\n    svp = @camera.surfaceViewport\n    pan = Math.max -1, Math.min 1, ((sup.x - svp.x) - svp.width / 2) / svp.width\n    pan = 0 if _.isNaN pan\n    dst = @camera.distanceRatioTo pos\n    dst = 0.8 if _.isNaN dst\n    vol = Math.min 1, options.volume / Math.pow (dst + 0.2), 2\n    volume: options.volume, delay: options.delay, pan: pan\n\n  # PUBLIC LOADING METHODS\n\n  soundForDialogue: (message, soundTriggers) ->\n    if _.isArray message then message = message.join ' '\n    return message unless _.isString message\n    return null unless say = soundTriggers?.say\n    message = _.string.slugify message\n    return sound if sound = say[message]\n    if _.string.startsWith message, 'attack'\n      return sound if sound = say.attack\n    if message.indexOf(\"i-dont-see-anyone\") isnt -1\n      return sound if sound = say['i-dont-see-anyone']\n    if message.indexOf(\"i-see-you\") isnt -1\n      return sound if sound = say['i-see-you']\n    if message.indexOf(\"repeating-loop\") isnt -1\n      return sound if sound = say['repeating-loop']\n    if /move(up|down|left|right)/.test message\n      return sound if sound = say[\"move-#{message[4...]}\"]\n    defaults = say.defaultSimlish\n    if say.swearingSimlish?.length and _.find(swears, (s) -> message.search(s) isnt -1)\n      defaults = say.swearingSimlish\n    return null unless defaults?.length\n    return defaults[message.length % defaults.length]\n\n  preloadInterfaceSounds: (names) ->\n    return unless me.get 'volume'\n    for name in names\n      filename = \"/file/interface/#{name}#{@ext}\"\n      @preloadSound filename, name\n\n  playInterfaceSound: (name, volume=1) ->\n    return unless volume and me.get 'volume'\n    filename = \"/file/interface/#{name}#{@ext}\"\n    if @hasLoadedSound filename\n      @playSound name, volume\n    else\n      @preloadInterfaceSounds [name] unless filename of cache\n      @soundsToPlayWhenLoaded[name] = volume\n\n  playSound: (name, volume=1, delay=0, pos=null) ->\n    return console.error 'Trying to play empty sound?' unless name\n    return unless volume and me.get 'volume'\n    audioOptions = {volume: volume, delay: delay}\n    filename = if _.string.startsWith(name, '/file/') then name else '/file/' + name\n    unless @hasLoadedSound filename\n      @soundsToPlayWhenLoaded[name] = audioOptions.volume\n    audioOptions = @applyPanning audioOptions, pos if @camera and not @camera.destroyed and pos\n    instance = createjs.Sound.play name, audioOptions\n    instance\n\n  hasLoadedSound: (filename, name) ->\n    return false unless filename of cache\n    return false unless createjs.Sound.loadComplete filename\n    true\n\n  preloadSoundReference: (sound) ->\n    return unless me.get 'volume'\n    return unless name = @nameForSoundReference sound\n    filename = '/file/' + name\n    @preloadSound filename, name\n    filename\n\n  nameForSoundReference: (sound) ->\n    sound[@ext.slice(1)]  # mp3 or ogg\n\n  preloadSound: (filename, name) ->\n    return unless filename\n    return if filename of cache\n    name ?= filename\n    # SoundJS flips out if you try to register the same file twice\n    result = createjs.Sound.registerSound(filename, name, 1)  # 1: 1 channel\n    cache[filename] = new Media(name)\n\n  # PROGRESS CALLBACKS\n\n  onSoundLoaded: (e) =>\n    media = cache[e.src]\n    return if not media\n    media.loaded = true\n    media.progress = 1.0\n    if volume = @soundsToPlayWhenLoaded[media.name]\n      @playSound media.name, volume\n      @soundsToPlayWhenLoaded[media.name] = false\n    @notifyProgressChanged()\n\n  onSoundLoadError: (e) =>\n    console.error 'Could not load sound', e\n\n  notifyProgressChanged: ->\n    Backbone.Mediator.publish('audio-player:loaded', {sender: @})\n\n  getStatus: (src) ->\n    return cache[src] or null\n\n\nmodule.exports = new AudioPlayer()\n","CocoClass = require 'core/CocoClass'\n\n{me} = require 'core/auth'\n\nCHAT_SIZE_LIMIT = 500 # no more than 500 messages\n\nmodule.exports = Bus = class Bus extends CocoClass\n  joined: null\n  players: null\n\n  @get: (docName) -> return @getFromCache or new Bus docName\n  @getFromCache: (docName) -> return Bus.activeBuses[docName]\n  @activeBuses: {}\n  @fireHost: 'https://codecombat.firebaseio.com'\n\n  constructor: (@docName) ->\n    super()\n    @players = {}\n    Bus.activeBuses[@docName] = @\n\n  subscriptions:\n    'auth:me-synced': 'onMeSynced'\n\n  connect: ->\n    # Put Firebase back in bower if you want to use this\n    Backbone.Mediator.publish 'bus:connecting', {bus: @}\n    Firebase.goOnline()\n    @fireRef = new Firebase(Bus.fireHost + '/' + @docName)\n    @fireRef.once 'value', @onFireOpen\n\n  onFireOpen: (snapshot) =>\n    if @destroyed\n      console.log(\"Leaving '#{@docName}' because class has been destroyed.\")\n      return\n    @init()\n    Backbone.Mediator.publish 'bus:connected', {bus: @}\n\n  disconnect: ->\n    @fireRef?.off()\n    @fireRef = null\n    @fireChatRef?.off()\n    @fireChatRef = null\n    @firePlayersRef?.off()\n    @firePlayersRef = null\n    @myConnection?.off()\n    @myConnection = null\n    @joined = false\n    Backbone.Mediator.publish 'bus:disconnected', {bus: @}\n\n  init: ->\n    \"\"\"\n    Init happens when we're connected.\n    \"\"\"\n    @fireChatRef = @fireRef.child('chat')\n    @firePlayersRef = @fireRef.child('players')\n    @join()\n    @listenForChanges()\n    @sendMessage('/me joined.', true)\n\n  join: ->\n    @joined = true\n    @myConnection = @firePlayersRef.child(me.id)\n    @myConnection.set({id: me.id, name: me.get('name'), connected: true})\n    @onDisconnect = @myConnection.child('connected').onDisconnect()\n    @onDisconnect.set(false)\n\n  listenForChanges: ->\n    @fireChatRef.limit(CHAT_SIZE_LIMIT).on 'child_added', @onChatAdded\n    @firePlayersRef.on 'child_added', @onPlayerJoined\n    @firePlayersRef.on 'child_removed', @onPlayerLeft\n    @firePlayersRef.on 'child_changed', @onPlayerChanged\n\n  onChatAdded: (snapshot) =>\n    Backbone.Mediator.publish('bus:new-message', {message: snapshot.val(), bus: @})\n\n  onPlayerJoined: (snapshot) =>\n    player = snapshot.val()\n    return unless player.connected\n    @players[player.id] = player\n    Backbone.Mediator.publish('bus:player-joined', {player: player, bus: @})\n\n  onPlayerLeft: (snapshot) =>\n    val = snapshot.val()\n    return unless val\n    player = @players[val.id]\n    return unless player\n    delete @players[player.id]\n    Backbone.Mediator.publish('bus:player-left', {player: player, bus: @})\n\n  onPlayerChanged: (snapshot) =>\n    player = snapshot.val()\n    wasConnected = @players[player.id]?.connected\n    @players[player.id] = player\n    @onPlayerLeft(snapshot) if wasConnected and not player.connected\n    @onPlayerJoined(snapshot) if player.connected and not wasConnected\n    Backbone.Mediator.publish('bus:player-states-changed', {states: @players, bus: @})\n\n  onMeSynced: ->\n    @myConnection?.child('name').set(me.get('name'))\n\n  countPlayers: -> _.size(@players)\n\n  onPoint: ->\n    # simple way to elect somone to do jobs that don't need to be done by each player\n    ids = _.keys(@players)\n    ids.sort()\n    return ids[0] is me.id\n\n  # MESSAGING\n\n  sendSystemMessage: (content) ->\n    @sendMessage(content, true)\n\n  sendMessage: (content, system=false) ->\n    MAX_MESSAGE_LENGTH = 400\n    message =\n      content: content[... MAX_MESSAGE_LENGTH]\n      authorName: me.displayName()\n      authorID: me.id\n      dateMade: new Date()\n    message.system = system if system\n    @fireChatRef.push(message)\n\n  # TEARDOWN\n\n  destroy: ->\n    @sendMessage('/me left.', true) if @joined\n    delete Bus.activeBuses[@docName] if @docName of Bus.activeBuses\n    @disconnect()\n    super()\n","module.exports = [\n  {\n    id: \"Introduction\"\n    channel: \"god:new-world-created\"\n    noteChain: [\n      name: \"Set camera, start music.\"\n      surface:\n        focus:\n          bounds: [{x: 0, y: 0}, {x: 80, y: 68}]\n          target: \"Hero Placeholder\"\n          zoom: 0.5\n      sound:\n        music:\n          file: \"/music/music_level_2\"\n          play: true\n      script:\n        duration: 1\n      playback:\n        playing: false\n    ]\n  }\n]\n","# Each LevelView or Simulator has a God which listens for spells cast and summons new Angels on the main thread to\n# oversee simulation of the World on worker threads. The Gods and Angels even have names. It's kind of fun.\n# (More fun than ThreadPool and WorkerAgentManager and such.)\n\n{now} = require 'lib/world/world_utils'\nWorld = require 'lib/world/world'\nCocoClass = require 'core/CocoClass'\nAngel = require 'lib/Angel'\nGameUIState = require 'models/GameUIState'\nerrors = require 'core/errors'\n\nmodule.exports = class God extends CocoClass\n  @nicks: ['Athena', 'Baldr', 'Crom', 'Dagr', 'Eris', 'Freyja', 'Great Gish', 'Hades', 'Ishtar', 'Janus', 'Khronos', 'Loki', 'Marduk', 'Negafook', 'Odin', 'Poseidon', 'Quetzalcoatl', 'Ra', 'Shiva', 'Thor', 'Umvelinqangi', 'Týr', 'Vishnu', 'Wepwawet', 'Xipe Totec', 'Yahweh', 'Zeus', '上帝', 'Tiamat', '盘古', 'Phoebe', 'Artemis', 'Osiris', '嫦娥', 'Anhur', 'Teshub', 'Enlil', 'Perkele', 'Chaos', 'Hera', 'Iris', 'Theia', 'Uranus', 'Stribog', 'Sabazios', 'Izanagi', 'Ao', 'Tāwhirimātea', 'Tengri', 'Inmar', 'Torngarsuk', 'Centzonhuitznahua', 'Hunab Ku', 'Apollo', 'Helios', 'Thoth', 'Hyperion', 'Alectrona', 'Eos', 'Mitra', 'Saranyu', 'Freyr', 'Koyash', 'Atropos', 'Clotho', 'Lachesis', 'Tyche', 'Skuld', 'Urðr', 'Verðandi', 'Camaxtli', 'Huhetotl', 'Set', 'Anu', 'Allah', 'Anshar', 'Hermes', 'Lugh', 'Brigit', 'Manannan Mac Lir', 'Persephone', 'Mercury', 'Venus', 'Mars', 'Azrael', 'He-Man', 'Anansi', 'Issek', 'Mog', 'Kos', 'Amaterasu Omikami', 'Raijin', 'Susanowo', 'Blind Io', 'The Lady', 'Offler', 'Ptah', 'Anubis', 'Ereshkigal', 'Nergal', 'Thanatos', 'Macaria', 'Angelos', 'Erebus', 'Hecate', 'Hel', 'Orcus', 'Ishtar-Deela Nakh', 'Prometheus', 'Hephaestos', 'Sekhmet', 'Ares', 'Enyo', 'Otrera', 'Pele', 'Hadúr', 'Hachiman', 'Dayisun Tngri', 'Ullr', 'Lua', 'Minerva']\n\n  subscriptions:\n    'tome:cast-spells': 'onTomeCast'\n    'tome:spell-debug-value-request': 'retrieveValueFromFrame'\n    'god:new-world-created': 'onNewWorldCreated'\n\n  constructor: (options) ->\n    options ?= {}\n    @retrieveValueFromFrame = _.throttle @retrieveValueFromFrame, 1000\n    @gameUIState ?= options.gameUIState or new GameUIState()\n    @indefiniteLength = options.indefiniteLength or false\n    super()\n\n    # Angels are all given access to this.\n    @angelsShare = {\n      workerCode: options.workerCode or '/javascripts/workers/worker_world.js'  # Either path or function\n      headless: options.headless  # Whether to just simulate the goals, or to deserialize all simulation results\n      spectate: options.spectate\n      god: @\n      godNick: @nick\n      @gameUIState\n      workQueue: []\n      firstWorld: true\n      world: undefined\n      goalManager: undefined\n      worldClassMap: undefined\n      angels: []\n      busyAngels: []  # Busy angels will automatically register here.\n    }\n\n    # Determine how many concurrent Angels/web workers to use at a time\n    # ~20MB per idle worker + angel overhead - every Angel maps to 1 worker\n    if options.maxAngels?\n      angelCount = options.maxAngels\n    else if window.application.isIPadApp\n      angelCount = 1\n    else\n      angelCount = 2\n\n    # Don't generate all Angels at once.\n    _.delay (=> new Angel @angelsShare unless @destroyed), 250 * i for i in [0 ... angelCount]\n\n  destroy: ->\n    angel.destroy() for angel in @angelsShare.angels.slice()\n    @angelsShare.goalManager?.destroy()\n    @debugWorker?.terminate()\n    @debugWorker?.removeEventListener 'message', @onDebugWorkerMessage\n    super()\n\n  setLevel: (@level) ->\n  setLevelSessionIDs: (@levelSessionIDs) ->\n  setGoalManager: (goalManager) ->\n    @angelsShare.goalManager?.destroy() unless @angelsShare.goalManager is goalManager\n    @angelsShare.goalManager = goalManager\n  setWorldClassMap: (worldClassMap) -> @angelsShare.worldClassMap = worldClassMap\n\n  onTomeCast: (e) ->\n    return unless e.god is @\n    @lastSubmissionCount = e.submissionCount\n    @lastFixedSeed = e.fixedSeed\n    @lastFlagHistory = (flag for flag in e.flagHistory when flag.source isnt 'code')\n    @lastDifficulty = e.difficulty\n    @createWorld e.spells, e.preload, e.realTime, e.justBegin\n\n  createWorld: (spells, preload, realTime, justBegin) ->\n    console.log \"#{@nick}: Let there be light upon #{@level.name}! (preload: #{preload})\"\n    userCodeMap = @getUserCodeMap spells\n\n    # We only want one world being simulated, so we abort other angels, unless we had one preloading this very code.\n    hadPreloader = false\n    for angel in @angelsShare.busyAngels\n      isPreloading = angel.running and angel.work.preload and _.isEqual angel.work.userCodeMap, userCodeMap, (a, b) ->\n        return a.raw is b.raw if a?.raw? and b?.raw?\n        undefined  # Let default equality test suffice.\n      if not hadPreloader and isPreloading and not realTime\n        angel.finalizePreload()\n        hadPreloader = true\n      else if preload and angel.running and not angel.work.preload\n        # It's still running for real, so let's not preload.\n        return\n      else\n        angel.abort()\n    return if hadPreloader\n\n    @angelsShare.workQueue = []\n    work = {\n      userCodeMap: userCodeMap\n      @level\n      levelSessionIDs: @levelSessionIDs\n      submissionCount: @lastSubmissionCount\n      fixedSeed: @lastFixedSeed\n      flagHistory: @lastFlagHistory\n      difficulty: @lastDifficulty\n      goals: @angelsShare.goalManager?.getGoals()\n      headless: @angelsShare.headless\n      preload\n      synchronous: not Worker?  # Profiling world simulation is easier on main thread, or we are IE9.\n      realTime\n      justBegin\n      indefiniteLength: @indefiniteLength and realTime\n    }\n    @angelsShare.workQueue.push work\n    angel.workIfIdle() for angel in @angelsShare.angels\n    work\n\n  getUserCodeMap: (spells) ->\n    userCodeMap = {}\n    for spellKey, spell of spells\n      (userCodeMap[spell.thang.thang.id] ?= {})[spell.name] = spell.thang.aether.serialize()\n    userCodeMap\n\n\n  #### New stuff related to debugging ####\n  retrieveValueFromFrame: (args) =>\n    return if @destroyed\n    return unless args.thangID and args.spellID and args.variableChain\n    return console.error 'Tried to retrieve debug value with no currentUserCodeMap' unless @currentUserCodeMap\n    @debugWorker ?= @createDebugWorker()\n    args.frame ?= @angelsShare.world.age / @angelsShare.world.dt\n    @debugWorker.postMessage\n      func: 'retrieveValueFromFrame'\n      args:\n        userCodeMap: @currentUserCodeMap\n        level: @level\n        levelSessionIDs: @levelSessionIDs\n        submissionCount: @lastSubmissionCount\n        fixedSeed: @fixedSeed\n        flagHistory: @lastFlagHistory\n        difficulty: @lastDifficulty\n        goals: @goalManager?.getGoals()\n        frame: args.frame\n        currentThangID: args.thangID\n        currentSpellID: args.spellID\n        variableChain: args.variableChain\n\n  createDebugWorker: ->\n    worker = new Worker '/javascripts/workers/worker_world.js'\n    worker.addEventListener 'message', @onDebugWorkerMessage\n    worker.addEventListener 'error', errors.onWorkerError\n    worker\n\n  onDebugWorkerMessage: (event) =>\n    switch event.data.type\n      when 'console-log'\n        console.log \"|#{@nick}'s debugger|\", event.data.args...\n      when 'debug-value-return'\n        Backbone.Mediator.publish 'god:debug-value-return', event.data.serialized, god: @\n      when 'debug-world-load-progress-changed'\n        Backbone.Mediator.publish 'god:debug-world-load-progress-changed', progress: event.data.progress, god: @\n\n  onNewWorldCreated: (e) ->\n    @currentUserCodeMap = @filterUserCodeMapWhenFromWorld e.world.userCodeMap\n\n  filterUserCodeMapWhenFromWorld: (worldUserCodeMap) ->\n    newUserCodeMap = {}\n    for thangName, thang of worldUserCodeMap\n      newUserCodeMap[thangName] = {}\n      for spellName, aether of thang\n        shallowFilteredObject = _.pick aether, ['raw', 'pure', 'originalOptions']\n        newUserCodeMap[thangName][spellName] = _.cloneDeep shallowFilteredObject\n        newUserCodeMap[thangName][spellName] = _.defaults newUserCodeMap[thangName][spellName],\n          flow: {}\n          metrics: {}\n          problems:\n            errors: []\n            infos: []\n            warnings: []\n          style: {}\n    newUserCodeMap\n\n\nimitateIE9 = false  # (and in world_utils.coffee)\nif imitateIE9\n  window.Worker = null\n  window.Float32Array = null\n  # Also uncomment vendor_with_box2d.js in index.html if you want Collision to run and Thangs to move.\n","# Convert htmlparser2-formatted DOM structure into Deku format\ndekuify = (elem) ->\n  return elem.data if elem.type is 'text'\n  return null if elem.type is 'comment'  # TODO: figure out how to make a comment in virtual dom\n  # Prevent Deku from including invalid attribute names (which DOMElement will choke on)\n  elem.attribs = _.omit elem.attribs, (val, attr) -> not attr.match(/^[^\\s\"'<>\\\\\\/=]+$/)\n  unless elem.name\n    console.log('Failed to dekuify', elem)\n    return elem.type\n  deku.element(elem.name, elem.attribs, (dekuify(c) for c in elem.children ? []))\n\n# Convert Deku-formatted DOM nodes into a flat list of their raw values\nunwrapDekuNodes = (dekuNode) ->\n  return dekuNode if _.isString(dekuNode)\n  if _.isArray(dekuNode)\n    return _.filter _.flatten(unwrapDekuNodes(child) for child in dekuNode)\n  else\n    return _.filter _.flatten [dekuNode.nodeValue, (unwrapDekuNodes(child) for child in (dekuNode.children or []))]\n\n# Parses user code into Deku format. Also guarantees an `html` and `body` element so that Deku doesn't explode when reading it.\n# Arguments:\n#   html — Raw HTML source code, possibly without html/body tags\n# Returns: Parsed Deku-format DOM that includes html/body tags\nparseUserHtml = (html) ->\n  dom = htmlparser2.parseDOM html, {}\n  bodyNode = _.find(dom, name: 'body') ? {name: 'body', attribs: null, children: dom}\n  htmlNode = _.find(dom, name: 'html') ? {name: 'html', attribs: null, children: [bodyNode]}\n  dekuify(htmlNode)\n\n# Creates a deku virtual DOM for given HTML, with the <script> and <style> tags separated out (and dekuified as well)\n# Arguments:\n#   html — raw HTML source code\n# Returns: Object\n#   virtualDom: The DekuTree for the main content\n#   scripts: A list of Deku nodes for the <script> tags\n#   styles: A list of Deku nodes for the <style> tags\nextractStylesAndScripts = (html) ->\n  dekuTree = parseUserHtml(html)\n  recurse = (dekuTree) ->\n    #base case\n    if dekuTree.type is '#text'\n      return { virtualDom: dekuTree, styles: [], scripts: [] }\n    if dekuTree.type is 'style'\n      return { styles: [dekuTree], scripts: [] }\n    if dekuTree.type is 'script'\n      return { styles: [], scripts: [dekuTree] }\n    # recurse over children\n    childStyles = []\n    childScripts = []\n    dekuTree.children?.forEach (dekuChild, index) =>\n      { virtualDom, styles, scripts } = recurse(dekuChild)\n      dekuTree.children[index] = virtualDom\n      childStyles = childStyles.concat(styles)\n      childScripts = childScripts.concat(scripts)\n    dekuTree.children = _.filter dekuTree.children # Remove the nodes we extracted\n    return { virtualDom: dekuTree, scripts: childScripts, styles: childStyles }\n\n  { virtualDom, scripts, styles } = recurse(dekuTree)\n  wrappedStyles = deku.element('head', {}, styles)\n  wrappedScripts = deku.element('head', {}, scripts)\n  return { virtualDom, scripts: wrappedScripts, styles: wrappedStyles }\n\n# Returns a list of CSS selectors found in CSS code and jQuery calls\nextractCssSelectors = (dekuStyles, dekuScripts) ->\n  cssSelectors = extractSelectorsFromCss dekuStyles\n  jQuerySelectors = extractSelectorsFromJS dekuScripts\n  return cssSelectors.concat(jQuerySelectors)\n\n# Returns a list of CSS selectors found in jQuery calls\n# Arguments:\n#   styles — one (or a list of) strings or Deku nodes.\nextractSelectorsFromCss = (styles) ->\n  styles = unwrapDekuNodes(styles)\n  styles = [styles] unless _.isArray(styles)\n  cssSelectors = _.flatten styles.map (rawCss) ->\n    try\n      parsedCss = parseCss(rawCss) # TODO: Don't put this in the global namespace\n      parsedCss.stylesheet.rules.map (rule) ->\n        rule.selectors.join(', ').trim()\n    catch e\n      # TODO: Report this error, handle CSS errors in general\n      []\n  cssSelectors\n\n# Returns a list of CSS selector strings found in jQuery calls\n# Arguments:\n#   scripts — one (or a list of) strings or Deku nodes.\nextractSelectorsFromJS = (scripts) ->\n  scripts = unwrapDekuNodes(scripts)\n  scripts = [scripts] unless _.isArray(scripts)\n  jQuerySelectors = _.flatten scripts.map (script) ->\n    (script.match(/\\$\\(\\s*['\"](?!<)(.*?)(?!>)['\"]\\s*\\)/g) or []).map (jQueryCall) ->\n      # Extract the argument (because capture groups don't work with /g)\n      jQueryCall.match(/\\$\\(\\s*['\"](?!<)(.*?)(?!>)['\"]\\s*\\)/)[1]\n  jQuerySelectors\n\n# Converts deku style nodes into a list of lines of CSS code.\n# Used to prefilter hovered lines for selectors.\nextractCssLines = (dekuStyles) ->\n  rawCssLines = []\n  dekuStyles.children.forEach (styleNode) =>\n    rawCss = styleNode.children[0].nodeValue\n    rawCssLines = rawCssLines.concat(rawCss.split('\\n'))\n  rawCssLines\n\n# Converts deku script nodes into a list of lines of lines of code that contain jQuery selectors\n# Used to prefilter hovered lines for selectors.\nextractJQueryLines = (dekuScripts) ->\n  _.flatten dekuScripts.children.map (dekuScript) ->\n    rawScript = dekuScript.children[0].nodeValue\n    _.filter (rawScript.split('\\n').map (line) -> (line.match(/^.*\\$\\(\\s*['\"].*['\"]\\s*\\).*$/g) or [])[0])\n\nmodule.exports = {\n  dekuify\n  unwrapDekuNodes\n  parseUserHtml\n  extractStylesAndScripts\n  extractCssSelectors\n  extractSelectorsFromCss\n  extractSelectorsFromJS\n  extractCssLines\n  extractJQueryLines\n}\n","Bus = require './Bus'\n{me} = require 'core/auth'\nLevelSession = require 'models/LevelSession'\nutils = require 'core/utils'\n\nmodule.exports = class LevelBus extends Bus\n\n  @get: (levelID, sessionID) ->\n    docName = \"play/level/#{levelID}/#{sessionID}\"\n    return Bus.getFromCache(docName) or new LevelBus docName\n\n  subscriptions:\n    'tome:editing-began': 'onEditingBegan'\n    'tome:editing-ended': 'onEditingEnded'\n    'script:state-changed': 'onScriptStateChanged'\n    'script:ended': 'onScriptEnded'\n    'script:reset': 'onScriptReset'\n    'surface:sprite-selected': 'onSpriteSelected'\n    'level:show-victory': 'onVictory'\n    'tome:spell-changed': 'onSpellChanged'\n    'tome:spell-created': 'onSpellCreated'\n    'tome:cast-spells': 'onCastSpells'\n    'tome:winnability-updated': 'onWinnabilityUpdated'\n    'application:idle-changed': 'onIdleChanged'\n    'goal-manager:new-goal-states': 'onNewGoalStates'\n    'god:new-world-created': 'onNewWorldCreated'\n\n  constructor: ->\n    super(arguments...)\n    @changedSessionProperties = {}\n    saveDelay = window.serverConfig?.sessionSaveDelay\n    [wait, maxWait] = switch\n      when not application.isProduction or not saveDelay then [1, 5]  # Save quickly in development.\n      when me.isAnonymous() then [saveDelay.anonymous.min, saveDelay.anonymous.max]\n      else [saveDelay.registered.min, saveDelay.registered.max]\n    @saveSession = _.debounce @reallySaveSession, wait * 1000, {maxWait: maxWait * 1000}\n    @playerIsIdle = false\n\n  init: ->\n    super()\n    @fireScriptsRef = @fireRef?.child('scripts')\n\n  setSession: (@session) ->\n    @timerIntervalID = setInterval(@incrementSessionPlaytime, 1000)\n\n  onIdleChanged: (e) ->\n    @playerIsIdle = e.idle\n\n  incrementSessionPlaytime: =>\n    if @playerIsIdle then return\n    @changedSessionProperties.playtime = true\n    @session.set('playtime', (@session.get('playtime') ? 0) + 1)\n\n  onPoint: ->\n    return true\n\n  onMeSynced: =>\n    super()\n\n  join: ->\n    super()\n\n  disconnect: ->\n    @fireScriptsRef?.off()\n    @fireScriptsRef = null\n    super()\n\n  removeFirebaseData: (callback) ->\n    return callback?() unless @myConnection\n    @myConnection.child('connected')\n    @fireRef.remove()\n    @onDisconnect.cancel(-> callback?())\n\n  # UPDATING FIREBASE AND SESSION\n\n  onEditingBegan: -> #@wizardRef?.child('editing').set(true)  # no more wizards\n  onEditingEnded: -> #@wizardRef?.child('editing').set(false)  # no more wizards\n\n  # HACK: Backbone does not work with nested documents, but we want to\n  #   patch only those props that have changed. Look into plugins to\n  #   give Backbone support for nested docs and update the code here.\n\n  # TODO: The LevelBus doesn't need to be in charge of updating the\n  #   LevelSession object. Either break this off into a separate class\n  #   or have the LevelSession object listen for all these events itself.\n\n  setSpells: (spells) ->\n    @onSpellCreated spell: spell for spellKey, spell of spells\n\n  onSpellChanged: (e) ->\n    return unless @onPoint()\n    code = @session.get('code')\n    code ?= {}\n    parts = e.spell.spellKey.split('/')\n\n    code[parts[0]] ?= {}\n    code[parts[0]][parts[1]] = e.spell.getSource()\n    @changedSessionProperties.code = true\n    @session.set({'code': code})\n    @saveSession()\n\n  onSpellCreated: (e) ->\n    return unless @onPoint()\n    spellTeam = e.spell.team\n    @teamSpellMap ?= {}\n    @teamSpellMap[spellTeam] ?= []\n\n    unless e.spell.spellKey in @teamSpellMap[spellTeam]\n      @teamSpellMap[spellTeam].push e.spell.spellKey\n    @changedSessionProperties.teamSpells = true\n    @session.set({'teamSpells': @teamSpellMap})\n    @saveSession()\n    if spellTeam is me.team or (e.spell.otherSession and spellTeam isnt e.spell.otherSession.get('team'))\n      # https://github.com/codecombat/codecombat/issues/81\n      @onSpellChanged e  # Save the new spell to the session, too.\n\n  onCastSpells: (e) ->\n    return unless @onPoint() and e.realTime\n    # We have incremented state.submissionCount and reset state.flagHistory.\n    @changedSessionProperties.state = true\n    @saveSession()\n\n  onWinnabilityUpdated: (e) ->\n    return unless @onPoint() and e.winnable\n    return unless e.level.get('slug') in ['ace-of-coders', 'elemental-wars', 'the-battle-of-sky-span']  # Mirror matches don't otherwise show victory, so we win here.\n    return if @session.get('state')?.complete\n    @onVictory()\n\n  onNewWorldCreated: (e) ->\n    return unless @onPoint()\n    # Record the flag history.\n    state = @session.get('state')\n    flagHistory = (flag for flag in e.world.flagHistory when flag.source isnt 'code')\n    return if _.isEqual state.flagHistory, flagHistory\n    state.flagHistory = flagHistory\n    @changedSessionProperties.state = true\n    @session.set('state', state)\n    @saveSession()\n\n  onScriptStateChanged: (e) ->\n    return unless @onPoint()\n    @fireScriptsRef?.update(e)\n    state = @session.get('state')\n    scripts = state.scripts ? {}\n    scripts.currentScript = e.currentScript\n    scripts.currentScriptOffset = e.currentScriptOffset\n    @changedSessionProperties.state = true\n    @session.set('state', state)\n    @saveSession()\n\n  onScriptEnded: (e) ->\n    return unless @onPoint()\n    state = @session.get('state')\n    scripts = state.scripts\n    scripts.ended ?= {}\n    return if scripts.ended[e.scriptID]?\n    index = _.keys(scripts.ended).length + 1\n    @fireScriptsRef?.child('ended').child(e.scriptID).set(index)\n    scripts.ended[e.scriptID] = index\n    @session.set('state', state)\n    @changedSessionProperties.state = true\n    @saveSession()\n\n  onScriptReset: ->\n    return unless @onPoint()\n    @fireScriptsRef?.set({})\n    state = @session.get('state')\n    state.scripts = {}\n    #state.complete = false  # Keep it complete once ever completed.\n    @session.set('state', state)\n    @changedSessionProperties.state = true\n    @saveSession()\n\n  onSpriteSelected: (e) ->\n    return unless @onPoint()\n    state = @session.get('state')\n    state.selected = e.thang?.id or null\n    @session.set('state', state)\n    @changedSessionProperties.state = true\n    @saveSession()\n\n  onVictory: ->\n    return unless @onPoint()\n    state = @session.get('state')\n    state.complete = true\n    @session.set('state', state)\n    @changedSessionProperties.state = true\n    @reallySaveSession()  # Make sure it saves right away; don't debounce it.\n\n  onNewGoalStates: (e) ->\n    # TODO: this log doesn't capture when null-status goals are being set during world streaming. Where can they be coming from?\n    goalStates = e.goalStates\n    return console.error(\"Somehow trying to save null goal states!\", newGoalStates) if _.find(newGoalStates, (gs) -> not gs.status)\n\n    return unless e.overallStatus is 'success'\n    newGoalStates = goalStates\n    state = @session.get('state')\n    oldGoalStates = state.goalStates or {}\n\n    changed = false\n    for goalKey, goalState of newGoalStates\n      continue if oldGoalStates[goalKey]?.status is 'success' and goalState.status isnt 'success' # don't undo success, this property is for keying off achievements\n      continue if utils.kindaEqual state.goalStates?[goalKey], goalState # Only save when goals really change\n      changed = true\n      oldGoalStates[goalKey] = _.cloneDeep newGoalStates[goalKey]\n\n    if changed\n      state.goalStates = oldGoalStates\n      @session.set 'state', state\n      @changedSessionProperties.state = true\n      @saveSession()\n\n  onPlayerJoined: (snapshot) =>\n    super(arguments...)\n    return unless @onPoint()\n    players = @session.get('players')\n    players ?= {}\n    player = snapshot.val()\n    return if players[player.id]?\n    players[player.id] = {}\n    @session.set('players', players)\n    @changedSessionProperties.players = true\n    @saveSession()\n\n  onChatAdded: (snapshot) =>\n    super(arguments...)\n    chat = @session.get('chat')\n    chat ?= []\n    message = snapshot.val()\n    return if message.system\n    chat.push(message)\n    chat = chat[chat.length-50...] if chat.length > 50\n    @session.set('chat', chat)\n    @changedSessionProperties.chat = true\n    @saveSession()\n\n  # Debounced as saveSession\n  reallySaveSession: ->\n    return if _.isEmpty @changedSessionProperties\n    # don't let peeking admins mess with the session accidentally\n    return unless @session.get('creator') is me.id\n    return if @session.fake\n    Backbone.Mediator.publish 'level:session-will-save', session: @session\n    patch = {}\n    patch[prop] = @session.get(prop) for prop of @changedSessionProperties\n    @changedSessionProperties = {}\n\n    # since updates are coming fast and loose for session objects\n    # don't let what the server returns overwrite changes since the save began\n    tempSession = new LevelSession _id: @session.id\n    tempSession.save(patch, {patch: true, type: 'PUT'})\n\n  destroy: ->\n    clearInterval(@timerIntervalID)\n    super()\n","Level = require 'models/Level'\nLevelComponent = require 'models/LevelComponent'\nLevelSystem = require 'models/LevelSystem'\nArticle = require 'models/Article'\nLevelSession = require 'models/LevelSession'\nThangType = require 'models/ThangType'\nThangNamesCollection = require 'collections/ThangNamesCollection'\n\nCocoClass = require 'core/CocoClass'\nAudioPlayer = require 'lib/AudioPlayer'\napp = require 'core/application'\nWorld = require 'lib/world/world'\nutils = require 'core/utils'\n\nLOG = me.get('name') is 'Shanakin'  # Debugging a hanging load issue in production\n\n# This is an initial stab at unifying loading and setup into a single place which can\n# monitor everything and keep a LoadingScreen visible overall progress.\n#\n# Would also like to incorporate into here:\n#  * World Building\n#  * Sprite map generation\n#  * Connecting to Firebase\n\n# LevelLoader depends on SuperModel retrying timed out requests, as these occasionally happen during play.\n# If LevelLoader ever moves away from SuperModel, it will have to manage its own retries.\n\nreportedLoadErrorAlready = false\n\nmodule.exports = class LevelLoader extends CocoClass\n\n  constructor: (options) ->\n    @t0 = new Date().getTime()\n    super()\n    @supermodel = options.supermodel\n    @supermodel.setMaxProgress 0.2\n    @levelID = options.levelID\n    @sessionID = options.sessionID\n    @opponentSessionID = options.opponentSessionID\n    @team = options.team\n    @headless = options.headless\n    @loadArticles = options.loadArticles\n    @sessionless = options.sessionless\n    @fakeSessionConfig = options.fakeSessionConfig\n    @spectateMode = options.spectateMode ? false\n    @observing = options.observing\n    @courseID = options.courseID\n    @courseInstanceID = options.courseInstanceID\n\n    @worldNecessities = []\n    @listenTo @supermodel, 'resource-loaded', @onWorldNecessityLoaded\n    @listenTo @supermodel, 'failed', @onWorldNecessityLoadFailed\n    @loadLevel()\n    @loadAudio()\n    @playJingle()\n    if @supermodel.finished()\n      @onSupermodelLoaded()\n    else\n      @loadTimeoutID = setTimeout @reportLoadError.bind(@), 30000\n      @listenToOnce @supermodel, 'loaded-all', @onSupermodelLoaded\n\n  # Supermodel (Level) Loading\n\n  loadWorldNecessities: ->\n    # TODO: Actually trigger loading, instead of in the constructor\n    new Promise((resolve, reject) =>\n      return resolve(@) if @world\n      @once 'world-necessities-loaded', => resolve(@)\n      @once 'world-necessity-load-failed', ({resource}) ->\n        { jqxhr } = resource\n        reject({message: jqxhr.responseJSON?.message or jqxhr.responseText or 'Unknown Error'})\n    )\n\n  loadLevel: ->\n    @level = @supermodel.getModel(Level, @levelID) or new Level _id: @levelID\n    if @level.loaded\n      @onLevelLoaded()\n    else\n      @level = @supermodel.loadModel(@level, 'level').model\n      @listenToOnce @level, 'sync', @onLevelLoaded\n\n  reportLoadError: ->\n    return if @destroyed\n    window.tracker?.trackEvent 'LevelLoadError',\n      category: 'Error',\n      levelSlug: @work?.level?.slug,\n      unloaded: JSON.stringify(@supermodel.report().map (m) -> _.result(m.model, 'url'))\n\n  onLevelLoaded: ->\n    if not @sessionless and @level.isType('hero', 'hero-ladder', 'hero-coop', 'course')\n      @sessionDependenciesRegistered = {}\n    if @level.isType('web-dev')\n      @headless = true\n      if @sessionless\n        # When loading a web-dev level in the level editor, pretend it's a normal hero level so we can put down our placeholder Thang.\n        # TODO: avoid this whole roundabout Thang-based way of doing web-dev levels\n        originalGet = @level.get\n        @level.get = ->\n          return 'hero' if arguments[0] is 'type'\n          return 'web-dev' if arguments[0] is 'realType'\n          originalGet.apply @, arguments\n    if (@courseID and not @level.isType('course', 'course-ladder', 'game-dev', 'web-dev')) or window.serverConfig.picoCTF\n      # Because we now use original hero levels for both hero and course levels, we fake being a course level in this context.\n      originalGet = @level.get\n      realType = @level.get('type')\n      @level.get = ->\n        return 'course' if arguments[0] is 'type'\n        return realType if arguments[0] is 'realType'\n        originalGet.apply @, arguments\n    if window.serverConfig.picoCTF\n      @supermodel.addRequestResource(url: '/picoctf/problems', success: (picoCTFProblems) =>\n        @level?.picoCTFProblem = _.find picoCTFProblems, pid: @level.get('picoCTFProblem')\n      ).load()\n    if @sessionless\n      null\n    else if @fakeSessionConfig?\n      @loadFakeSession()\n    else\n      @loadSession()\n    @populateLevel()\n\n  # Session Loading\n\n  loadFakeSession: ->\n    initVals =\n      level:\n        original: @level.get('original')\n        majorVersion: @level.get('version').major\n      creator: me.id\n      state:\n        complete: false\n        scripts: {}\n      permissions: [\n        {target: me.id, access: 'owner'}\n        {target: 'public', access: 'write'}\n      ]\n      codeLanguage: @fakeSessionConfig.codeLanguage or me.get('aceConfig')?.language or 'python'\n      _id: 'A Fake Session ID'\n    @session = new LevelSession initVals\n    @session.loaded = true\n    @fakeSessionConfig.callback? @session, @level\n\n    # TODO: set the team if we need to, for multiplayer\n    # TODO: just finish the part where we make the submit button do what is right when we are fake\n    # TODO: anything else to make teacher session-less play make sense when we are fake\n    # TODO: make sure we are not actually calling extra save/patch/put things throwing warnings because we know we are fake and so we shouldn't try to do that\n    for method in ['save', 'patch', 'put']\n      @session[method] = -> console.error \"We shouldn't be doing a session.#{method}, since it's a fake session.\"\n    @session.fake = true\n    @loadDependenciesForSession @session\n\n  loadSession: ->\n    if @sessionID\n      url = \"/db/level.session/#{@sessionID}\"\n      url += \"?interpret=true\" if @spectateMode\n    else\n      url = \"/db/level/#{@levelID}/session\"\n      if @team\n        url += \"?team=#{@team}\"\n      else if @courseID\n        url += \"?course=#{@courseID}\"\n        if @courseInstanceID\n          url += \"&courseInstance=#{@courseInstanceID}\"\n\n    session = new LevelSession().setURL url\n    if @headless and not @level.isType('web-dev')\n      session.project = ['creator', 'team', 'heroConfig', 'codeLanguage', 'submittedCodeLanguage', 'state', 'submittedCode', 'submitted']\n    @sessionResource = @supermodel.loadModel(session, 'level_session', {cache: false})\n    @session = @sessionResource.model\n    if @opponentSessionID\n      opponentURL = \"/db/level.session/#{@opponentSessionID}?interpret=true\"\n      opponentSession = new LevelSession().setURL opponentURL\n      opponentSession.project = session.project if @headless\n      @opponentSessionResource = @supermodel.loadModel(opponentSession, 'opponent_session', {cache: false})\n      @opponentSession = @opponentSessionResource.model\n\n    if @session.loaded\n      @session.setURL '/db/level.session/' + @session.id\n      @loadDependenciesForSession @session\n    else\n      @listenToOnce @session, 'sync', ->\n        @session.setURL '/db/level.session/' + @session.id\n        @loadDependenciesForSession @session\n    if @opponentSession\n      if @opponentSession.loaded\n        @loadDependenciesForSession @opponentSession\n      else\n        @listenToOnce @opponentSession, 'sync', @loadDependenciesForSession\n\n  loadDependenciesForSession: (session) ->\n    console.log \"Loading dependencies for session: \", session if LOG\n    if me.id isnt session.get 'creator'\n      session.patch = session.save = -> console.error \"Not saving session, since we didn't create it.\"\n    else if codeLanguage = utils.getQueryVariable 'codeLanguage'\n      session.set 'codeLanguage', codeLanguage\n    @loadCodeLanguagesForSession session\n    if compressed = session.get 'interpret'\n      uncompressed = LZString.decompressFromUTF16 compressed\n      code = session.get 'code'\n      code[if session.get('team') is 'humans' then 'hero-placeholder' else 'hero-placeholder-1'].plan = uncompressed\n      session.set 'code', code\n      session.unset 'interpret'\n    if session.get('codeLanguage') in ['io', 'clojure']\n      session.set 'codeLanguage', 'python'\n    if session is @session\n      @addSessionBrowserInfo session\n      # hero-ladder games require the correct session team in level:loaded\n      team = @team ? @session.get('team')\n      Backbone.Mediator.publish 'level:loaded', level: @level, team: team\n      Backbone.Mediator.publish 'level:session-loaded', level: @level, session: @session\n      @consolidateFlagHistory() if @opponentSession?.loaded\n    else if session is @opponentSession\n      @consolidateFlagHistory() if @session.loaded\n    if @level.isType('course')  # course-ladder is hard to handle because there's 2 sessions\n      heroThangType = me.get('heroConfig')?.thangType or ThangType.heroes.captain\n      console.log \"Course mode, loading custom hero: \", heroThangType if LOG\n      url = \"/db/thang.type/#{heroThangType}/version\"\n      if heroResource = @maybeLoadURL(url, ThangType, 'thang')\n        console.log \"Pushing resource: \", heroResource if LOG\n        @worldNecessities.push heroResource\n      @sessionDependenciesRegistered[session.id] = true\n    unless @level.isType('hero', 'hero-ladder', 'hero-coop')\n      # Return before loading heroConfig ThangTypes. Finish if all world necessities were completed by the time the session loaded.\n      if @checkAllWorldNecessitiesRegisteredAndLoaded()\n        @onWorldNecessitiesLoaded()\n      return\n    # Load the ThangTypes needed for the session's heroConfig for these types of levels\n    heroConfig = session.get('heroConfig')\n    heroConfig ?= me.get('heroConfig') if session is @session and not @headless\n    heroConfig ?= {}\n    heroConfig.inventory ?= feet: '53e237bf53457600003e3f05'  # If all else fails, assign simple boots.\n    heroConfig.thangType ?= '529ffbf1cf1818f2be000001'  # If all else fails, assign Tharin as the hero.\n    session.set 'heroConfig', heroConfig unless _.isEqual heroConfig, session.get('heroConfig')\n    url = \"/db/thang.type/#{heroConfig.thangType}/version\"\n    if heroResource = @maybeLoadURL(url, ThangType, 'thang')\n      @worldNecessities.push heroResource\n    else\n      heroThangType = @supermodel.getModel url\n      @loadDefaultComponentsForThangType heroThangType\n      @loadThangsRequiredByThangType heroThangType\n\n    for itemThangType in _.values(heroConfig.inventory)\n      url = \"/db/thang.type/#{itemThangType}/version?project=name,components,original,rasterIcon,kind\"\n      if itemResource = @maybeLoadURL(url, ThangType, 'thang')\n        @worldNecessities.push itemResource\n      else\n        itemThangType = @supermodel.getModel url\n        @loadDefaultComponentsForThangType itemThangType\n        @loadThangsRequiredByThangType itemThangType\n    @sessionDependenciesRegistered[session.id] = true\n    if _.size(@sessionDependenciesRegistered) is 2 and @checkAllWorldNecessitiesRegisteredAndLoaded()\n      @onWorldNecessitiesLoaded()\n\n  loadCodeLanguagesForSession: (session) ->\n    codeLanguages = _.uniq _.filter [session.get('codeLanguage') or 'python', session.get('submittedCodeLanguage')]\n    for codeLanguage in codeLanguages\n      continue if codeLanguage in ['clojure', 'io']\n      do (codeLanguage) =>\n        modulePath = \"vendor/aether-#{codeLanguage}\"\n        return unless application.moduleLoader?.load modulePath\n        languageModuleResource = @supermodel.addSomethingResource 'language_module'\n        onModuleLoaded = (e) ->\n          return unless e.id is modulePath\n          languageModuleResource.markLoaded()\n          @stopListening application.moduleLoader, 'loaded', onModuleLoaded  # listenToOnce might work here instead, haven't tried\n        @listenTo application.moduleLoader, 'loaded', onModuleLoaded\n\n  addSessionBrowserInfo: (session) ->\n    return unless me.id is session.get 'creator'\n    return unless $.browser?\n    browser = {}\n    browser['desktop'] = $.browser.desktop if $.browser.desktop\n    browser['name'] = $.browser.name if $.browser.name\n    browser['platform'] = $.browser.platform if $.browser.platform\n    browser['version'] = $.browser.version if $.browser.version\n    session.set 'browser', browser\n    session.patch() unless session.fake\n\n  consolidateFlagHistory: ->\n    state = @session.get('state') ? {}\n    myFlagHistory = _.filter state.flagHistory ? [], team: @session.get('team')\n    opponentFlagHistory = _.filter @opponentSession.get('state')?.flagHistory ? [], team: @opponentSession.get('team')\n    state.flagHistory = myFlagHistory.concat opponentFlagHistory\n    @session.set 'state', state\n\n  # Grabbing the rest of the required data for the level\n\n  populateLevel: ->\n    thangIDs = []\n    componentVersions = []\n    systemVersions = []\n    articleVersions = []\n\n    flagThang = thangType: '53fa25f25bc220000052c2be', id: 'Placeholder Flag', components: []\n    for thang in (@level.get('thangs') or []).concat [flagThang]\n      thangIDs.push thang.thangType\n      @loadThangsRequiredByLevelThang(thang)\n      for comp in thang.components or []\n        componentVersions.push _.pick(comp, ['original', 'majorVersion'])\n\n    for system in @level.get('systems') or []\n      systemVersions.push _.pick(system, ['original', 'majorVersion'])\n      if indieSprites = system?.config?.indieSprites\n        for indieSprite in indieSprites\n          thangIDs.push indieSprite.thangType\n\n    unless @headless and not @loadArticles\n      for article in @level.get('documentation')?.generalArticles or []\n        articleVersions.push _.pick(article, ['original', 'majorVersion'])\n\n    objUniq = (array) -> _.uniq array, false, (arg) -> JSON.stringify(arg)\n\n    worldNecessities = []\n\n    @thangIDs = _.uniq thangIDs\n    @thangNames = new ThangNamesCollection(@thangIDs)\n    worldNecessities.push @supermodel.loadCollection(@thangNames, 'thang_names')\n    @listenToOnce @thangNames, 'sync', @onThangNamesLoaded\n    worldNecessities.push @sessionResource if @sessionResource?.isLoading\n    worldNecessities.push @opponentSessionResource if @opponentSessionResource?.isLoading\n\n    for obj in objUniq componentVersions\n      url = \"/db/level.component/#{obj.original}/version/#{obj.majorVersion}\"\n      worldNecessities.push @maybeLoadURL(url, LevelComponent, 'component')\n    for obj in objUniq systemVersions\n      url = \"/db/level.system/#{obj.original}/version/#{obj.majorVersion}\"\n      worldNecessities.push @maybeLoadURL(url, LevelSystem, 'system')\n    for obj in objUniq articleVersions\n      url = \"/db/article/#{obj.original}/version/#{obj.majorVersion}\"\n      @maybeLoadURL url, Article, 'article'\n    if obj = @level.get 'nextLevel'  # TODO: update to get next level from campaigns, not this old property\n      url = \"/db/level/#{obj.original}/version/#{obj.majorVersion}\"\n      @maybeLoadURL url, Level, 'level'\n\n    @worldNecessities = @worldNecessities.concat worldNecessities\n\n  loadThangsRequiredByLevelThang: (levelThang) ->\n    @loadThangsRequiredFromComponentList levelThang.components\n\n  loadThangsRequiredByThangType: (thangType) ->\n    @loadThangsRequiredFromComponentList thangType.get('components')\n\n  loadThangsRequiredFromComponentList: (components) ->\n    return unless components\n    requiredThangTypes = []\n    for component in components when component.config\n      if component.original is LevelComponent.EquipsID\n        requiredThangTypes.push itemThangType for itemThangType in _.values (component.config.inventory ? {})\n      else if component.config.requiredThangTypes\n        requiredThangTypes = requiredThangTypes.concat component.config.requiredThangTypes\n    extantRequiredThangTypes = _.filter requiredThangTypes\n    if extantRequiredThangTypes.length < requiredThangTypes.length\n      console.error \"Some Thang had a blank required ThangType in components list:\", components\n    for thangType in extantRequiredThangTypes\n      url = \"/db/thang.type/#{thangType}/version?project=name,components,original,rasterIcon,kind,prerenderedSpriteSheetData\"\n      @worldNecessities.push @maybeLoadURL(url, ThangType, 'thang')\n\n  onThangNamesLoaded: (thangNames) ->\n    for thangType in thangNames.models\n      @loadDefaultComponentsForThangType(thangType)\n      @loadThangsRequiredByThangType(thangType)\n    @thangNamesLoaded = true\n    @onWorldNecessitiesLoaded() if @checkAllWorldNecessitiesRegisteredAndLoaded()\n\n  loadDefaultComponentsForThangType: (thangType) ->\n    return unless components = thangType.get('components')\n    for component in components\n      url = \"/db/level.component/#{component.original}/version/#{component.majorVersion}\"\n      @worldNecessities.push @maybeLoadURL(url, LevelComponent, 'component')\n\n  onWorldNecessityLoaded: (resource) ->\n    index = @worldNecessities.indexOf(resource)\n    if resource.name is 'thang'\n      @loadDefaultComponentsForThangType(resource.model)\n      @loadThangsRequiredByThangType(resource.model)\n\n    return unless index >= 0\n    @worldNecessities.splice(index, 1)\n    @worldNecessities = (r for r in @worldNecessities when r?)\n    @onWorldNecessitiesLoaded() if @checkAllWorldNecessitiesRegisteredAndLoaded()\n\n  onWorldNecessityLoadFailed: (event) ->\n    @reportLoadError()\n    @trigger('world-necessity-load-failed', event)\n\n  checkAllWorldNecessitiesRegisteredAndLoaded: ->\n    return false unless _.filter(@worldNecessities).length is 0\n    return false unless @thangNamesLoaded\n    return false if @sessionDependenciesRegistered and not @sessionDependenciesRegistered[@session.id] and not @sessionless\n    return false if @sessionDependenciesRegistered and @opponentSession and not @sessionDependenciesRegistered[@opponentSession.id] and not @sessionless\n    return false unless @session?.loaded or @sessionless\n    true\n\n  onWorldNecessitiesLoaded: ->\n    console.log \"World necessities loaded.\" if LOG\n    return if @initialized\n    @initialized = true\n    @initWorld()\n    @supermodel.clearMaxProgress()\n    @trigger 'world-necessities-loaded'\n    return if @headless\n    thangsToLoad = _.uniq( (t.spriteName for t in @world.thangs when t.exists) )\n    nameModelTuples = ([thangType.get('name'), thangType] for thangType in @thangNames.models)\n    nameModelMap = _.zipObject nameModelTuples\n    @spriteSheetsToBuild ?= []\n\n#    for thangTypeName in thangsToLoad\n#      thangType = nameModelMap[thangTypeName]\n#      continue if not thangType or thangType.isFullyLoaded()\n#      thangType.fetch()\n#      thangType = @supermodel.loadModel(thangType, 'thang').model\n#      res = @supermodel.addSomethingResource 'sprite_sheet', 5\n#      res.thangType = thangType\n#      res.markLoading()\n#      @spriteSheetsToBuild.push res\n\n    @buildLoopInterval = setInterval @buildLoop, 5 if @spriteSheetsToBuild.length\n\n  maybeLoadURL: (url, Model, resourceName) ->\n    return if @supermodel.getModel(url)\n    model = new Model().setURL url\n    @supermodel.loadModel(model, resourceName)\n\n  onSupermodelLoaded: ->\n    clearTimeout @loadTimeoutID\n    return if @destroyed\n    console.log 'SuperModel for Level loaded in', new Date().getTime() - @t0, 'ms' if LOG\n    @loadLevelSounds()\n    @denormalizeSession()\n\n  buildLoop: =>\n    someLeft = false\n    for spriteSheetResource, i in @spriteSheetsToBuild ? []\n      continue if spriteSheetResource.spriteSheetKeys\n      someLeft = true\n      thangType = spriteSheetResource.thangType\n      if thangType.loaded and not thangType.loading\n        keys = @buildSpriteSheetsForThangType spriteSheetResource.thangType\n        if keys and keys.length\n          @listenTo spriteSheetResource.thangType, 'build-complete', @onBuildComplete\n          spriteSheetResource.spriteSheetKeys = keys\n        else\n          spriteSheetResource.markLoaded()\n\n    clearInterval @buildLoopInterval unless someLeft\n\n  onBuildComplete: (e) ->\n    resource = null\n    for resource in @spriteSheetsToBuild\n      break if e.thangType is resource.thangType\n    return console.error 'Did not find spriteSheetToBuildResource for', e unless resource\n    resource.spriteSheetKeys = (k for k in resource.spriteSheetKeys when k isnt e.key)\n    resource.markLoaded() if resource.spriteSheetKeys.length is 0\n\n  denormalizeSession: ->\n    return if @sessionDenormalized or @spectateMode or @sessionless or me.isSessionless()\n    return if @headless and not @level.isType('web-dev')\n    # This is a way (the way?) PUT /db/level.sessions/undefined was happening\n    # See commit c242317d9\n    return if not @session.id\n    patch =\n      'levelName': @level.get('name')\n      'levelID': @level.get('slug') or @level.id\n    if me.id is @session.get 'creator'\n      patch.creatorName = me.get('name')\n    for key, value of patch\n      if @session.get(key) is value\n        delete patch[key]\n    unless _.isEmpty patch\n      @session.set key, value for key, value of patch\n      tempSession = new LevelSession _id: @session.id\n      tempSession.save(patch, {patch: true, type: 'PUT'})\n    @sessionDenormalized = true\n\n  # Building sprite sheets\n\n  buildSpriteSheetsForThangType: (thangType) ->\n    return if @headless\n    # TODO: Finish making sure the supermodel loads the raster image before triggering load complete, and that the cocosprite has access to the asset.\n#    if f = thangType.get('raster')\n#      queue = new createjs.LoadQueue()\n#      queue.loadFile('/file/'+f)\n    @grabThangTypeTeams() unless @thangTypeTeams\n    keys = []\n    for team in @thangTypeTeams[thangType.get('original')] ? [null]\n      spriteOptions = {resolutionFactor: SPRITE_RESOLUTION_FACTOR, async: true}\n      if thangType.get('kind') is 'Floor'\n        spriteOptions.resolutionFactor = 2\n      if team and color = @teamConfigs[team]?.color\n        spriteOptions.colorConfig = team: color\n      key = @buildSpriteSheet thangType, spriteOptions\n      if _.isString(key) then keys.push key\n    keys\n\n  grabThangTypeTeams: ->\n    @grabTeamConfigs()\n    @thangTypeTeams = {}\n    for thang in @level.get('thangs')\n      if @level.isType('hero', 'course') and thang.id is 'Hero Placeholder'\n        continue  # No team colors for heroes on single-player levels\n      for component in thang.components\n        if team = component.config?.team\n          @thangTypeTeams[thang.thangType] ?= []\n          @thangTypeTeams[thang.thangType].push team unless team in @thangTypeTeams[thang.thangType]\n          break\n    @thangTypeTeams\n\n  grabTeamConfigs: ->\n    for system in @level.get('systems')\n      if @teamConfigs = system.config?.teamConfigs\n        break\n    unless @teamConfigs\n      # Hack: pulled from Alliance System code. TODO: put in just one place.\n      @teamConfigs = {'humans': {'superteam': 'humans', 'color': {'hue': 0, 'saturation': 0.75, 'lightness': 0.5}, 'playable': true}, 'ogres': {'superteam': 'ogres', 'color': {'hue': 0.66, 'saturation': 0.75, 'lightness': 0.5}, 'playable': false}, 'neutral': {'superteam': 'neutral', 'color': {'hue': 0.33, 'saturation': 0.75, 'lightness': 0.5}}}\n    @teamConfigs\n\n  buildSpriteSheet: (thangType, options) ->\n    if thangType.get('name') is 'Wizard'\n      options.colorConfig = me.get('wizard')?.colorConfig or {}\n    thangType.buildSpriteSheet options\n\n  # World init\n\n  initWorld: ->\n    return if @level.isType('web-dev')\n    @world = new World()\n    @world.levelSessionIDs = if @opponentSessionID then [@sessionID, @opponentSessionID] else [@sessionID]\n    @world.submissionCount = @session?.get('state')?.submissionCount ? 0\n    @world.flagHistory = @session?.get('state')?.flagHistory ? []\n    @world.difficulty = @session?.get('state')?.difficulty ? 0\n    if @observing\n      @world.difficulty = Math.max 0, @world.difficulty - 1  # Show the difficulty they won, not the next one.\n    serializedLevel = @level.serialize {@supermodel, @session, @opponentSession, @headless, @sessionless}\n    @world.loadFromLevel serializedLevel, false\n    console.log 'World has been initialized from level loader.' if LOG\n\n  # Initial Sound Loading\n\n  playJingle: ->\n    return if @headless or not me.get('volume')\n    volume = 0.5\n    if me.level() < 3\n      volume = 0.25  # Start softly, since they may not be expecting it\n    # Apparently the jingle, when it tries to play immediately during all this loading, you can't hear it.\n    # Add the timeout to fix this weird behavior.\n    f = ->\n      jingles = ['ident_1', 'ident_2']\n      AudioPlayer.playInterfaceSound jingles[Math.floor Math.random() * jingles.length], volume\n    setTimeout f, 500\n\n  loadAudio: ->\n    return if @headless or not me.get('volume')\n    AudioPlayer.preloadInterfaceSounds ['victory']\n\n  loadLevelSounds: ->\n    return if @headless or not me.get('volume')\n    scripts = @level.get 'scripts'\n    return unless scripts\n\n    for script in scripts when script.noteChain\n      for noteGroup in script.noteChain when noteGroup.sprites\n        for sprite in noteGroup.sprites when sprite.say?.sound\n          AudioPlayer.preloadSoundReference(sprite.say.sound)\n\n    thangTypes = @supermodel.getModels(ThangType)\n    for thangType in thangTypes\n      for trigger, sounds of thangType.get('soundTriggers') or {} when trigger isnt 'say'\n        AudioPlayer.preloadSoundReference sound for sound in sounds\n\n  # everything else sound wise is loaded as needed as worlds are generated\n\n  progress: -> @supermodel.progress\n\n  destroy: ->\n    clearInterval @buildLoopInterval if @buildLoopInterval\n    super()\n","CocoClass = require 'core/CocoClass'\nPlayHeroesModal = require 'views/play/modal/PlayHeroesModal'\nInventoryModal = require 'views/play/menu/InventoryModal'\nLevel = require 'models/Level'\nLevelSession = require 'models/LevelSession'\nSuperModel = require 'models/SuperModel'\nThangType = require 'models/ThangType'\n\nlastHeroesEarned = me.get('earned')?.heroes ? []\nlastHeroesPurchased = me.get('purchased')?.heroes ? []\n\nmodule.exports = class LevelSetupManager extends CocoClass\n\n  constructor: (@options) ->\n    super()\n    @supermodel = @options.supermodel ? new SuperModel()\n    @session = @options.session\n    unless @level = @options.level\n      @loadLevel()\n    if @session\n      @fillSessionWithDefaults()\n    else\n      @loadSession()\n\n  loadLevel: ->\n    levelURL = \"/db/level/#{@options.levelID}\"\n    @level = new Level().setURL levelURL\n    @level = @supermodel.loadModel(@level).model\n    if @level.loaded then @onLevelSync() else @listenToOnce @level, 'sync', @onLevelSync\n\n  loadSession: ->\n    sessionURL = \"/db/level/#{@options.levelID}/session\"\n    #sessionURL += \"?team=#{@team}\" if @options.team  # TODO: figure out how to get the teams for multiplayer PVP hero style\n    sessionURL += \"?course=#{@options.courseID}\" if @options.courseID\n    @session = new LevelSession().setURL sessionURL\n    @session = @supermodel.loadModel(@session).model\n    if @session.loaded then @onSessionSync() else @listenToOnce @session, 'sync', @onSessionSync\n\n  onLevelSync: ->\n    return if @destroyed\n    if @waitingToLoadModals\n      @waitingToLoadModals = false\n      @loadModals()\n\n  onSessionSync: ->\n    return if @destroyed\n    @session.url = -> '/db/level.session/' + @id\n    @fillSessionWithDefaults()\n\n  fillSessionWithDefaults: ->\n    heroConfig = _.merge {}, me.get('heroConfig'), @session.get('heroConfig')\n    @session.set('heroConfig', heroConfig)\n    if @level.loaded\n      @loadModals()\n    else\n      @waitingToLoadModals = true\n\n  loadModals: ->\n    # build modals and prevent them from disappearing.\n    if @level.get('slug') is 'zero-sum'\n      sorcerer = '52fd1524c7e6cf99160e7bc9'\n      if @session.get('creator') is '532dbc73a622924444b68ed9'  # Wizard Dude gets his own avatar\n        sorcerer = '53e126a4e06b897606d38bef'\n      @session.set 'heroConfig', {\"thangType\":sorcerer,\"inventory\":{\"misc-0\":\"53e2396a53457600003e3f0f\",\"programming-book\":\"546e266e9df4a17d0d449be5\",\"minion\":\"54eb5dbc49fa2d5c905ddf56\",\"feet\":\"53e214f153457600003e3eab\",\"right-hand\":\"54eab7f52b7506e891ca7202\",\"left-hand\":\"5463758f3839c6e02811d30f\",\"wrists\":\"54693797a2b1f53ce79443e9\",\"gloves\":\"5469425ca2b1f53ce7944421\",\"torso\":\"546d4a549df4a17d0d449a97\",\"neck\":\"54693274a2b1f53ce79443c9\",\"eyes\":\"546941fda2b1f53ce794441d\",\"head\":\"546d4ca19df4a17d0d449abf\"}}\n      @onInventoryModalPlayClicked()\n      return\n    # TODO: Remove post-KR\n    if @level.get('slug') is 'the-gauntlet-kr'\n      lightseeker = '583d2cca6ffa3e65d170f29f'\n      @session.set 'heroConfig', {\"thangType\":lightseeker,\"inventory\":{\n        \"feet\":\"53e237bf53457600003e3f05\",\n        \"head\":\"546d38269df4a17d0d4499ff\",\n        \"eyes\":\"53e238df53457600003e3f0b\",\n        \"torso\":\"53e22eac53457600003e3efc\",\n        \"right-hand\":\"53e218d853457600003e3ebe\",\n        \"programming-book\":\"53e4108204c00d4607a89f78\"\n      }}\n      @onInventoryModalPlayClicked()\n      return\n    if @level.get('slug') is 'woodland-cleaver-kr'\n      lightseeker = '583d2cca6ffa3e65d170f29f'\n      @session.set 'heroConfig', {\"thangType\":lightseeker,\"inventory\":{\n        \"eyes\": \"53e238df53457600003e3f0b\",\n        \"head\": \"546d38269df4a17d0d4499ff\",\n        \"torso\": \"545d3f0b2d03e700001b5a5d\",\n        \"right-hand\": \"544d7d1f8494308424f564a3\",\n        \"wrists\": \"53e2396a53457600003e3f0f\",\n        \"feet\": \"53e2384453457600003e3f07\",\n        \"programming-book\": \"546e25d99df4a17d0d449be1\",\n        \"left-hand\": \"544c310ae0017993fce214bf\"\n      }}\n      @onInventoryModalPlayClicked()\n      return\n    if @level.get('slug') is 'crossroads-kr'\n      lightseeker = '583d2cca6ffa3e65d170f29f'\n      @session.set 'heroConfig', {\"thangType\":lightseeker,\"inventory\":{\n        \"wrists\": \"53e2396a53457600003e3f0f\",\n        \"eyes\": \"53e2167653457600003e3eb3\",\n        \"feet\": \"546d4d589df4a17d0d449ac9\",\n        \"left-hand\": \"544d7bb88494308424f56493\",\n        \"right-hand\": \"54694ba3a2b1f53ce794444d\",\n        \"waist\": \"5437002a7beba4a82024a97d\",\n        \"programming-book\": \"546e25d99df4a17d0d449be1\",\n        \"gloves\": \"5469425ca2b1f53ce7944421\",\n        \"head\": \"546d390b9df4a17d0d449a0b\",\n        \"torso\": \"546aaf1b3777d6186329285e\",\n        \"neck\": \"54693140a2b1f53ce79443bc\"\n        }\n      }\n      @onInventoryModalPlayClicked()\n      return\n\n    if @level.get('slug') in ['ace-of-coders', 'elemental-wars']\n      goliath = '55e1a6e876cb0948c96af9f8'\n      @session.set 'heroConfig', {\"thangType\":goliath,\"inventory\":{\"eyes\":\"53eb99f41a100989a40ce46e\",\"neck\":\"54693274a2b1f53ce79443c9\",\"wrists\":\"54693797a2b1f53ce79443e9\",\"feet\":\"546d4d8e9df4a17d0d449acd\",\"minion\":\"54eb5bf649fa2d5c905ddf4a\",\"programming-book\":\"557871261ff17fef5abee3ee\"}}\n      @onInventoryModalPlayClicked()\n      return\n    if @level.get('slug') is 'the-battle-of-sky-span'\n      wizard = '52fc1460b2b91c0d5a7b6af3'\n      @session.set 'heroConfig', {\n        \"thangType\": wizard\n        \"inventory\":{\n          \"eyes\": \"546941fda2b1f53ce794441d\",\n          \"feet\": \"546d4d8e9df4a17d0d449acd\",\n          \"torso\": \"546d4a549df4a17d0d449a97\",\n          \"head\": \"546d4ca19df4a17d0d449abf\",\n          \"minion\": \"54eb5d1649fa2d5c905ddf52\",\n          \"neck\": \"54693240a2b1f53ce79443c5\",\n          \"wrists\": \"54693830a2b1f53ce79443f1\",\n          \"programming-book\": \"557871261ff17fef5abee3ee\",\n          \"left-ring\": \"54692d2aa2b1f53ce794438f\"\n        }\n      }\n      @onInventoryModalPlayClicked()\n      return\n    if @level.get('slug') is 'assembly-speed'\n      raider = '55527eb0b8abf4ba1fe9a107'\n      @session.set 'heroConfig', {\"thangType\":raider,\"inventory\":{}}\n      @onInventoryModalPlayClicked()\n      return\n    if @level.isType('course', 'course-ladder', 'game-dev', 'web-dev') or window.serverConfig.picoCTF\n      @onInventoryModalPlayClicked()\n      return\n    @heroesModal = new PlayHeroesModal({supermodel: @supermodel, session: @session, confirmButtonI18N: 'play.next', level: @level, hadEverChosenHero: @options.hadEverChosenHero})\n    @inventoryModal = new InventoryModal({supermodel: @supermodel, session: @session, level: @level})\n    @heroesModalDestroy = @heroesModal.destroy\n    @inventoryModalDestroy = @inventoryModal.destroy\n    @heroesModal.destroy = @inventoryModal.destroy = _.noop\n    @listenTo @heroesModal, 'confirm-click', @onHeroesModalConfirmClicked\n    @listenToOnce @heroesModal, 'hero-loaded', @onceHeroLoaded\n    @listenTo @inventoryModal, 'choose-hero-click', @onChooseHeroClicked\n    @listenTo @inventoryModal, 'play-click', @onInventoryModalPlayClicked\n    @modalsLoaded = true\n    if @waitingToOpen\n      @waitingToOpen = false\n      @open()\n\n  open: ->\n    return @waitingToOpen = true unless @modalsLoaded\n    firstModal = if @options.hadEverChosenHero then @inventoryModal else @heroesModal\n    if (not _.isEqual(lastHeroesEarned, me.get('earned')?.heroes ? []) or\n        not _.isEqual(lastHeroesPurchased, me.get('purchased')?.heroes ? []))\n      console.log 'Showing hero picker because heroes earned/purchased has changed.'\n      firstModal = @heroesModal\n    else if allowedHeroSlugs = @level.get 'allowedHeroes'\n      unless _.find(allowedHeroSlugs, (slug) -> ThangType.heroes[slug] is me.get('heroConfig')?.thangType)\n        firstModal = @heroesModal\n    lastHeroesEarned = me.get('earned')?.heroes ? []\n    lastHeroesPurchased = me.get('purchased')?.heroes ? []\n\n    @options.parent.openModalView(firstModal)\n    @trigger 'open'\n    #    @inventoryModal.onShown() # replace?\n\n  #- Modal events\n\n  onceHeroLoaded: (e) ->\n    @inventoryModal.setHero(e.hero) if window.currentModal is @inventoryModal\n\n  onHeroesModalConfirmClicked: (e) ->\n    @options.parent.openModalView(@inventoryModal)\n    @inventoryModal.render()\n    @inventoryModal.didReappear()\n    @inventoryModal.onShown()\n    @inventoryModal.setHero(e.hero) if e.hero\n    window.tracker?.trackEvent 'Choose Inventory', category: 'Play Level'\n\n  onChooseHeroClicked: ->\n    @options.parent.openModalView(@heroesModal)\n    @heroesModal.render()\n    @heroesModal.didReappear()\n    @inventoryModal.endHighlight()\n    window.tracker?.trackEvent 'Change Hero', category: 'Play Level'\n\n  onInventoryModalPlayClicked: ->\n    @navigatingToPlay = true\n    PlayLevelView = 'views/play/level/PlayLevelView'\n    LadderView = 'views/ladder/LadderView'\n    viewClass = if @options.levelPath is 'ladder' then LadderView else PlayLevelView\n    route = \"/play/#{@options.levelPath || 'level'}/#{@options.levelID}\"\n    route += \"?codeLanguage=\" + @level.get('primerLanguage') if @level.get('primerLanguage')\n    Backbone.Mediator.publish 'router:navigate', {\n      route, viewClass\n      viewArgs: [{supermodel: @supermodel}, @options.levelID]\n    }\n\n  destroy: ->\n    @heroesModalDestroy?.call @heroesModal unless @heroesModal?.destroyed\n    @inventoryModalDestroy?.call @inventoryModal unless @inventoryModal?.destroyed\n    super()\n","LocalMongo = module.exports\n\n# Checks whether func(l, r) is true for at least one value of left for at least one value of right\nmapred = (left, right, func) ->\n  _.reduce(left, ((result, singleLeft) ->\n    result or (_.reduce (_.map right, (singleRight) -> func(singleLeft, singleRight)),\n      ((intermediate, value) -> intermediate or value), false)), false)\n\ndoQuerySelector = (originalValue, operatorObj) ->\n  value = if _.isArray originalValue then originalValue else [originalValue] # left hand can be an array too\n  for operator, originalBody of operatorObj\n    body = if _.isArray originalBody then originalBody else [originalBody] # right hand can be an array too\n    switch operator\n      when '$gt' then return false unless mapred value, body, (l, r) -> l > r\n      when '$gte' then return false unless mapred value, body, (l, r) -> l >= r\n      when '$lt' then return false unless mapred value, body, (l, r) -> l < r\n      when '$lte' then return false unless mapred value, body, (l, r) -> l <= r\n      when '$ne' then return false if mapred value, body, (l, r) -> l == r\n      when '$in' then return false unless _.reduce value, ((result, val) -> result or val in body), false\n      when '$nin' then return false if _.reduce value, ((result, val) -> result or val in body), false\n      when '$exists' then return false if value[0]? isnt body[0]\n      else \n        trimmedOperator = _.pick(operatorObj, operator)\n        return false unless _.isObject(originalValue) and matchesQuery(originalValue, trimmedOperator)\n  true\n\nmatchesQuery = (target, queryObj) ->\n  return true unless queryObj\n  throw new Error 'Expected an object to match a query against, instead got null' unless target\n  for prop, query of queryObj\n    if prop[0] == '$'\n      switch prop\n        when '$or' then return false unless _.reduce query, ((res, obj) -> res or matchesQuery target, obj), false\n        when '$and' then return false unless _.reduce query, ((res, obj) -> res and matchesQuery target, obj), true\n        else return false\n    else\n      # Do nested properties\n      pieces = prop.split('.')\n      obj = target\n      for piece in pieces\n        unless piece of obj\n          obj = null\n          break\n        obj = obj[piece]\n      if typeof query != 'object' or _.isArray query\n        return false unless obj == query or (query in obj if _.isArray obj)\n      else return false unless doQuerySelector obj, query\n  true\n\nLocalMongo.matchesQuery = matchesQuery\n","concepts = require 'schemas/concepts'\n\nmodule.exports = TagSolution = (solution) ->\n  code = solution.source\n  engine = new esper.Engine()\n  engine.load(code)\n  ast = engine.evaluator.ast\n  result = []\n  for key of concepts\n    tkn = concepts[key].tagger\n    continue unless tkn\n    if typeof tkn is 'function'\n      result.push concepts[key].concept if tkn(ast)\n    else\n      result.push concepts[key].concept if ast.find(tkn).length > 0\n   \n  console.log result\n  result\n","require 'aether'\nrequire 'esper'\n\nutils = require 'core/utils'\n\nAether.addGlobal 'Vector', require './world/vector'\nAether.addGlobal '_', _\n\nmodule.exports.createAetherOptions = (options) ->\n  throw new Error 'Specify a function name to create an Aether instance' unless options.functionName\n  throw new Error 'Specify a code language to create an Aether instance' unless options.codeLanguage\n\n  aetherOptions =\n    functionName: options.functionName\n    protectAPI: not options.skipProtectAPI\n    includeFlow: Boolean options.includeFlow\n    noVariablesInFlow: true\n    skipDuplicateUserInfoInFlow: true  # Optimization that won't work if we are stepping with frames\n    yieldConditionally: options.functionName is 'plan'\n    simpleLoops: true\n    whileTrueAutoYield: true\n    globals: ['Vector', '_']\n    problems:\n      jshint_W040: {level: 'ignore'}\n      jshint_W030: {level: 'ignore'}  # aether_NoEffect instead\n      jshint_W038: {level: 'ignore'}  # eliminates hoisting problems\n      jshint_W091: {level: 'ignore'}  # eliminates more hoisting problems\n      jshint_E043: {level: 'ignore'}  # https://github.com/codecombat/codecombat/issues/813 -- since we can't actually tell JSHint to really ignore things\n      jshint_Unknown: {level: 'ignore'}  # E043 also triggers Unknown, so ignore that, too\n      aether_MissingThis: {level: 'error'}\n    problemContext: options.problemContext\n    #functionParameters: # TODOOOOO\n    executionLimit: 3 * 1000 * 1000\n    language: options.codeLanguage\n    useInterpreter: true\n  parameters = functionParameters[options.functionName]\n  unless parameters\n    console.warn \"Unknown method #{options.functionName}: please add function parameters to lib/aether_utils.coffee.\"\n    parameters = []\n  if options.functionParameters and not _.isEqual options.functionParameters, parameters\n    console.error \"Update lib/aether_utils.coffee with the right function parameters for #{options.functionName} (had: #{parameters} but this gave #{options.functionParameters}.\"\n    parameters = options.functionParameters\n  aetherOptions.functionParameters = parameters.slice()\n  #console.log 'creating aether with options', aetherOptions\n  return aetherOptions\n\n# TODO: figure out some way of saving this info dynamically so that we don't have to hard-code it: #1329\nfunctionParameters =\n  hear: ['speaker', 'message', 'data']\n  makeBid: ['tileGroupLetter']\n  findCentroids: ['centroids']\n  isFriend: ['name']\n  evaluateBoard: ['board', 'player']\n  getPossibleMoves: ['board']\n  minimax_alphaBeta: ['board', 'player', 'depth', 'alpha', 'beta']\n  distanceTo: ['target']\n\n  chooseAction: []\n  plan: []\n  initializeCentroids: []\n  update: []\n  getNearestEnemy: []\n  die: []\n","Levels = require 'collections/Levels'\n\nmodule.exports =\n  # Result: Each course instance gains a property, numCompleted, that is the\n  #   number of students in that course instance who have completed ALL of\n  #   the levels in thate course\n  # TODO: simplify, classroom.sessions only includes sessions for assigned courses now\n  calculateDots: (classrooms, courses, courseInstances) ->\n    for classroom in classrooms.models\n      # map [user, level] => session so we don't have to do find TODO\n      for course, courseIndex in courses.models\n        instance = courseInstances.findWhere({ courseID: course.id, classroomID: classroom.id })\n        continue if not instance\n        instance.numCompleted = 0\n        instance.started = false\n        levels = classroom.getLevels({courseID: course.id})\n        levels.remove(levels.filter((level) => level.get('practice')))\n        for userID in instance.get('members')\n          instance.started ||= _.any levels.models, (level) ->\n            session = _.find classroom.sessions.models, (session) ->\n              session.get('creator') is userID and session.get('level').original is level.get('original')\n            session?\n          levelCompletes = _.map levels.models, (level) ->\n            #TODO: Hella slow! Do the mapping first!\n            sessions = _.filter classroom.sessions.models, (session) ->\n              session.get('creator') is userID and session.get('level').original is level.get('original')\n            # sessionMap[userID][level].completed()\n            _.find(sessions, (s) -> s.completed())\n          if _.every levelCompletes\n            instance.numCompleted += 1\n\n  calculateEarliestIncomplete: (classroom, courses, courseInstances, students) ->\n    # Loop through all the combinations of things, return the first one that somebody hasn't finished\n    for course, courseIndex in courses.models\n      instance = courseInstances.findWhere({ courseID: course.id, classroomID: classroom.id })\n      continue if not instance\n      levels = classroom.getLevels({courseID: course.id})\n      for level, levelIndex in levels.models\n        userIDs = []\n        for user in students.models\n          userID = user.id\n          sessions = _.filter classroom.sessions.models, (session) ->\n            session.get('creator') is userID and session.get('level').original is level.get('original')\n          if not _.find(sessions, (s) -> s.completed())\n            userIDs.push userID\n        if userIDs.length > 0\n          users = _.map userIDs, (id) ->\n            students.get(id)\n          levelNumber = classroom.getLevelNumber(level.get('original'), levelIndex + 1)\n          return {\n            courseName: course.get('name')\n            courseNumber: courseIndex + 1\n            levelNumber\n            levelName: level.get('name')\n            users: users\n          }\n    null\n\n  calculateLatestComplete: (classroom, courses, courseInstances, students) ->\n    # Loop through all the combinations of things in reverse order, return the level that anyone's finished\n    courseModels = courses.models.slice()\n    for course, courseIndex in courseModels.reverse() #\n      courseIndex = courses.models.length - courseIndex - 1 #compensate for reverse\n      instance = courseInstances.findWhere({ courseID: course.id, classroomID: classroom.id })\n      continue if not instance\n      levels = classroom.getLevels({courseID: course.id})\n      levelModels = levels.models.slice()\n      for level, levelIndex in levelModels.reverse() #\n        levelIndex = levelModels.length - levelIndex - 1 #compensate for reverse\n        userIDs = []\n        for user in students.models\n          userID = user.id\n          sessions = _.filter classroom.sessions.models, (session) ->\n            session.get('creator') is userID and session.get('level').original is level.get('original')\n          if _.find(sessions, (s) -> s.completed()) #\n            userIDs.push userID\n        if userIDs.length > 0\n          users = _.map userIDs, (id) ->\n            students.get(id)\n          levelNumber = classroom.getLevelNumber(level.get('original'), levelIndex + 1)\n          return {\n            courseName: course.get('name')\n            courseNumber: courseIndex + 1\n            levelNumber\n            levelName: level.get('name')\n            users: users\n          }\n    null\n    \n  calculateConceptsCovered: (classrooms, courses, campaigns, courseInstances, students) ->\n    # Loop through all level/user combination and record\n    #   whether they've started, and completed, each concept\n    conceptData = {}\n    for classroom in classrooms.models\n      conceptData[classroom.id] = {}\n      \n      for course, courseIndex in courses.models\n        levels = classroom.getLevels({courseID: course.id})\n        \n        for level in levels.models\n          levelID = level.get('original')\n          \n          for concept in level.get('concepts')\n            unless conceptData[classroom.id][concept]\n              conceptData[classroom.id][concept] = { completed: true, started: false }\n\n          for concept in level.get('concepts')\n            for userID in classroom.get('members')\n              sessions = _.filter classroom.sessions.models, (session) ->\n                session.get('creator') is userID and session.get('level').original is levelID\n              \n              if _.size(sessions) is 0 # haven't gotten to this level yet, but might have completed others before\n                for concept in level.get('concepts')\n                  conceptData[classroom.id][concept].completed = false\n              if _.size(sessions) > 0 # have gotten to the level and at least started it\n                for concept in level.get('concepts')\n                  conceptData[classroom.id][concept].started = true\n              if not _.find(sessions, (s) -> s.completed()) # level started but not completed\n                for concept in level.get('concepts')\n                  conceptData[classroom.id][concept].completed = false\n    conceptData\n      \n  calculateAllProgress: (classrooms, courses, courseInstances, students) ->\n    # Loop through all combinations and record:\n    #   Completeness for each student/course\n    #   Completeness for each student/level\n    #   Completeness for each class/course (across all students)\n    #   Completeness for each class/level (across all students)\n    \n    # class -> course\n    #   class -> course -> student\n    #   class -> course -> level\n    #     class -> course -> level -> student\n    \n    progressData = {}\n    for classroom in classrooms.models\n      progressData[classroom.id] = {}\n\n      for course, courseIndex in courses.models\n        instance = courseInstances.findWhere({ courseID: course.id, classroomID: classroom.id })\n        if not instance\n          progressData[classroom.id][course.id] = { completed: false, started: false }\n          continue\n        progressData[classroom.id][course.id] = { completed: true, started: false } # to be updated\n\n        levels = classroom.getLevels({courseID: course.id})\n        for level in levels.models\n          levelID = level.get('original')\n          progressData[classroom.id][course.id][levelID] = {\n            completed: students.size() > 0,\n            started: false\n            numStarted: 0\n            # numCompleted: 0\n          }\n          isPractice = level.get('practice')\n\n          for user in students.models\n            userID = user.id\n            courseProgress = progressData[classroom.id][course.id]\n            courseProgress[userID] ?= { completed: true, started: false, levelsCompleted: 0 } # Only set it the first time through a user\n            courseProgress[levelID][userID] = { completed: true, started: false } # These don't matter, will always be set\n            sessions = _.filter classroom.sessions.models, (session) ->\n              session.get('creator') is userID and session.get('level').original is levelID\n            \n            courseProgress[levelID][userID].session = _.find(sessions, (s) -> s.completed()) or _.first(sessions)\n\n            if _.size(sessions) is 0 # haven't gotten to this level yet, but might have completed others before\n              courseProgress.started ||= false unless isPractice #no-op\n              courseProgress.completed = false unless isPractice\n              courseProgress[userID].started ||= false unless isPractice #no-op\n              courseProgress[userID].completed = false unless isPractice\n              courseProgress[levelID].started ||= false #no-op\n              courseProgress[levelID].completed = false unless isPractice \n              courseProgress[levelID][userID].started = false\n              courseProgress[levelID][userID].completed = false\n              \n            if _.size(sessions) > 0 # have gotten to the level and at least started it\n              courseProgress.started = true unless isPractice\n              courseProgress[userID].started = true unless isPractice\n              courseProgress[levelID].started = true\n              courseProgress[levelID][userID].started = true\n              courseProgress[levelID][userID].lastPlayed = new Date(Math.max(_.map(sessions, 'changed')))\n              courseProgress[levelID].numStarted += 1\n            \n            if _.find(sessions, (s) -> s.completed()) # have finished this level\n              courseProgress.completed &&= true unless isPractice #no-op\n              courseProgress[userID].completed &&= true unless isPractice #no-op\n              courseProgress[userID].levelsCompleted += 1 unless isPractice\n              courseProgress[levelID].completed &&= true #no-op\n              # courseProgress[levelID].numCompleted += 1\n              courseProgress[levelID][userID].completed = true\n              dates = (s.get('dateFirstCompleted') || s.get('changed') for s in sessions)\n              courseProgress[levelID][userID].dateFirstCompleted = new Date(Math.max(dates...))\n            else # level started but not completed\n              courseProgress.completed = false unless isPractice\n              courseProgress[userID].completed = false unless isPractice\n              if isPractice\n                # Weird behavior! Since practice levels are optional, the level is considered 'incomplete'\n                # for the class as a whole only if any started-but-not-completed sessions exist\n                courseProgress[levelID].completed = false if courseProgress[levelID][userID].started\n              else\n                courseProgress[levelID].completed = false\n              courseProgress[levelID][userID].completed = false\n              courseProgress[levelID].dateFirstCompleted = null\n              courseProgress[levelID][userID].dateFirstCompleted = null\n              \n          if isPractice and courseProgress and not courseProgress[levelID].started\n            courseProgress[levelID].completed = false # edge for practice levels, not considered complete if never started either\n\n    _.assign(progressData, progressMixin)\n    return progressData\n  \n  courseLabelsArray: (courses) ->\n    labels = []\n    courseLabelIndexes = CS: 0, GD: 0, WD: 0\n    for course in courses\n      acronym = switch\n        when /game-dev/.test(course.get('slug')) then 'GD'\n        when /web-dev/.test(course.get('slug')) then 'WD'\n        else 'CS'\n      labels.push acronym + ++courseLabelIndexes[acronym]\n    labels\n\nprogressMixin =\n  get: (options={}) ->\n    { classroom, course, level, user } = options\n    throw new Error \"You must provide a classroom\" unless classroom\n    throw new Error \"You must provide a course\" unless course\n    defaultValue = { completed: false, started: false }\n    if options.level\n      levelID = level.get('original')\n      if options.user\n        return @[classroom.id]?[course.id]?[levelID]?[user.id] or defaultValue\n      else\n        return @[classroom.id]?[course.id]?[levelID] or defaultValue\n    else\n      if options.user\n        return @[classroom.id]?[course.id]?[user.id] or defaultValue\n      else\n        return @[classroom.id]?[course.id] or defaultValue\n","# Based on: http://www.html5rocks.com/en/tutorials/canvas/imagefilters/\n\nFilters = {}\n\nFilters.getPixels = (img) ->\n  c = @getCanvas(img.naturalWidth, img.naturalHeight)\n  ctx = c.getContext('2d')\n  ctx.drawImage(img, 0, 0)\n  return ctx.getImageData(0, 0, c.width, c.height)\n\nFilters.getCanvas = (w, h) ->\n  c = document.createElement('canvas')\n  c.width = w\n  c.height = h\n  return c\n\nFilters.filterImage = (filter, image, args...) ->\n  args = [this.getPixels(image)].concat(args)\n  return filter(args...)\n\nFilters.brightness = (pixels, adjustment) ->\n  d = pixels.data\n  i = 0\n  while i < d.length\n    d[i] *= adjustment\n    d[i+1] *= adjustment\n    d[i+2] *= adjustment\n    i+=4\n  return pixels\n\nmodule.exports.darkenImage = darkenImage = (img, borderImageSelector, pct=0.5) ->\n  jqimg = $(img)\n  cachedValue = jqimg.data('darkened')\n  if cachedValue\n    $(borderImageSelector).css 'border-image-source', 'url(' + cachedValue + ')'\n    return img.src = cachedValue \n  jqimg.data('original', img.src) unless jqimg.data('original')\n  if not (img.naturalWidth > 0 and img.naturalHeight > 0)\n    console.warn 'Tried to darken image', img, 'but it has natural dimensions', img.naturalWidth, img.naturalHeight\n    return img\n  imageData = Filters.filterImage(Filters.brightness, img, pct)\n  c = Filters.getCanvas(img.naturalWidth, img.naturalHeight)\n  ctx = c.getContext('2d')\n  ctx.putImageData(imageData, 0, 0)\n  img.src = c.toDataURL()\n  $(borderImageSelector).css 'border-image-source', 'url(' + img.src + ')'\n  jqimg.data('darkened', img.src)\n\nmodule.exports.revertImage = revertImage = (img, borderImageSelector) ->\n  jqimg = $(img)\n  return unless jqimg.data('original')\n  $(borderImageSelector).css 'border-image-source', 'url(' + jqimg.data('original') + ')'\n  img.src = jqimg.data('original')\n","module.exports.getParentFolders = (subPath, urlPrefix='/test/') ->\n  return [] unless subPath\n  paths = []\n  parts = subPath.split('/')\n  while parts.length\n    parts.pop()\n    paths.unshift {\n      name: parts[parts.length-1] or 'All'\n      url: urlPrefix + parts.join('/')\n    }\n  paths\n\nmodule.exports.parseImmediateChildren = (allChildren, subPath, baseRequirePath='test/app/', urlPrefix='/test/') ->\n  return [] unless allChildren\n  folders = {}\n  files = {}\n\n  requirePrefix = baseRequirePath + subPath\n  if requirePrefix[requirePrefix.length-1] isnt '/'\n    requirePrefix += '/'\n\n  for f in allChildren\n    f = f[requirePrefix.length..]\n    continue unless f\n    parts = f.split('/')\n    name = parts[0]\n    group = if parts.length is 1 then files else folders\n    group[name] ?= 0\n    group[name] += 1\n\n  children = []\n  urlPrefix += subPath\n  urlPrefix += '/' if urlPrefix[urlPrefix.length-1] isnt '/'\n\n  for name in _.keys(folders)\n    children.push {\n      type: 'folder',\n      url: urlPrefix+name\n      name: name+'/'\n      size: folders[name]\n    }\n  for name in _.keys(files)\n    children.push {\n      type: 'file',\n      url: urlPrefix+name\n      name: name\n    }\n  children\n","ScriptModule = require './ScriptModule'\n\nmodule.exports = class DOMScriptModule extends ScriptModule\n  @neededFor: (noteGroup) ->\n    return noteGroup.dom?\n\n  startNotes: ->\n    notes = []\n    notes.push(@highlightNote()) if @noteGroup.dom.highlight?\n    notes.push(@lockNote()) if @noteGroup.dom.lock?\n    notes.push(@focusNote()) if @noteGroup.dom.focus?\n    notes.push(@showVictoryNote()) if @noteGroup.dom.showVictory\n    notes.push(@letterboxNote()) if @noteGroup.dom.letterbox?\n    return notes\n\n  endNotes: ->\n    notes = []\n    notes.push({'channel': 'level:end-highlight-dom'}) if @noteGroup.dom.highlight?\n    notes.push({'channel': 'level:enable-controls'}) if @noteGroup.dom.lock?\n    return notes\n\n  skipNotes: ->\n    notes = []\n    notes.push(@showVictoryNote(false)) if @noteGroup.dom.showVictory?\n    notes.push(@letterboxNote()) if @noteGroup.dom.letterbox?\n    notes\n\n  highlightNote: ->\n    dom = @noteGroup.dom\n    note =\n      channel: 'level:highlight-dom'\n      event:\n        selector: dom.highlight.target\n        delay: dom.highlight.delay\n        sides: dom.highlight.sides\n        offset: dom.highlight.offset\n        rotation: dom.highlight.rotation\n    note.event = _.pick note.event, (value) -> not _.isUndefined value\n    @maybeApplyDelayToNote note\n    note\n\n  focusNote: ->\n    note =\n      channel: 'level:focus-dom'\n      event:\n        selector: @noteGroup.dom.focus\n    note\n\n  showVictoryNote: (showModal) ->\n    e = {}\n    e.showModal = @noteGroup.dom.showVictory in [true, 'Done Button And Modal']\n    e.showModal = showModal if showModal?\n    note =\n      channel: 'level:show-victory'\n      event: e\n    note\n\n  lockNote: ->\n    event = {}\n    lock = @noteGroup.dom.lock\n    event.controls = lock if _.isArray lock  # array: subset of controls\n    channel = if lock then 'level:disable-controls' else 'level:enable-controls'\n    return {channel: channel, event: event}\n\n  letterboxNote: ->\n    return {channel: 'level:set-letterbox', event: {on: @noteGroup.dom.letterbox}}\n","ScriptModule = require './ScriptModule'\n\nmodule.exports = class PlaybackScriptModule extends ScriptModule\n  @neededFor: (noteGroup) ->\n    return noteGroup.playback?\n\n  startNotes: ->\n    notes = []\n    notes.push(@playingNote()) if @noteGroup.playback.playing?\n    notes.push(@scrubNote()) if @noteGroup.playback.scrub?\n    return notes\n\n  endNotes: ->\n    notes = []\n    # TODO: Want scripts to end where the scrub should go, but this doesn't work\n    # when scripts go somewhere then do something else. Figure out a different technique?\n#    notes.push(@scrubNote(true)) if @noteGroup.playback.scrub?\n    return notes\n\n  skipNotes: ->\n    notes = []\n    notes.push(@playingNote()) if @noteGroup.playback.playing?\n    notes.push(@scrubNote(true)) if @noteGroup.playback.scrub?\n    return notes\n\n  playingNote: ->\n    note =\n      channel: 'level:set-playing'\n      event: {playing: @noteGroup.playback.playing}\n    return note\n\n  scrubNote: (instant=false) ->\n    scrub = @noteGroup.playback.scrub\n    note =\n      channel: 'level:set-time'\n      event:\n        frameOffset: scrub.frameOffset or 2\n        scrubDuration: if instant then 0 else scrub.duration\n    note.event.time = scrub.toTime if scrub.toTime?\n    note.event.ratio = scrub.toRatio if scrub.toRatio?\n    return note\n","CocoClass = require 'core/CocoClass'\nCocoView = require 'views/core/CocoView'\n{scriptMatchesEventPrereqs} = require './../world/script_event_prereqs'\n\nallScriptModules = []\nallScriptModules.push(require './SpriteScriptModule')\nallScriptModules.push(require './DOMScriptModule')\nallScriptModules.push(require './SurfaceScriptModule')\nallScriptModules.push(require './PlaybackScriptModule')\nallScriptModules.push(require './SoundScriptModule')\n\n\nDEFAULT_BOT_MOVE_DURATION = 500\nDEFAULT_SCRUB_DURATION = 1000\n\nmodule.exports = ScriptManager = class ScriptManager extends CocoClass\n  scriptInProgress: false\n  currentNoteGroup: null\n  currentTimeouts: []\n  worldLoading: true\n  ignoreEvents: false\n  quiet: false\n\n  triggered: []\n  ended: []\n  noteGroupQueue: []\n  originalScripts: [] # use these later when you want to revert to an original state\n\n  subscriptions:\n    'script:end-current-script': 'onEndNoteGroup'\n    'level:loading-view-unveiling': -> @setWorldLoading(false)\n    'level:restarted': 'onLevelRestarted'\n    'level:shift-space-pressed': 'onEndNoteGroup'\n    'level:escape-pressed': 'onEndAll'\n\n  shortcuts:\n    '⇧+space, space, enter': -> Backbone.Mediator.publish 'level:shift-space-pressed', {}\n    'escape': -> Backbone.Mediator.publish 'level:escape-pressed', {}\n\n  # SETUP / TEARDOWN\n\n  constructor: (options) ->\n    super(options)\n    @originalScripts = options.scripts\n    @session = options.session\n    @levelID = options.levelID\n    @debugScripts = application.isIPadApp or CocoView.getQueryVariable 'dev'\n    @initProperties()\n    @addScriptSubscriptions()\n    @beginTicking()\n\n  setScripts: (@originalScripts) ->\n    @quiet = true\n    @initProperties()\n    @loadFromSession()\n    @quiet = false\n    @addScriptSubscriptions()\n    @run()\n\n  initProperties: ->\n    @endAll({force:true}) if @scriptInProgress\n    @triggered = []\n    @ended = []\n    @noteGroupQueue = []\n    @scripts = $.extend(true, [], @originalScripts)\n\n  addScriptSubscriptions: ->\n    idNum = 0\n    makeCallback = (channel) => (event) => @onNote(channel, event)\n    for script in @scripts\n      script.id = (idNum++).toString() unless script.id\n      callback = makeCallback(script.channel) # curry in the channel argument\n      @addNewSubscription(script.channel, callback)\n\n  beginTicking: ->\n    @tickInterval = setInterval @tick, 5000\n\n  tick: =>\n    scriptStates = {}\n    now = new Date()\n    for script in @scripts\n      scriptStates[script.id] =\n        timeSinceLastEnded: (if script.lastEnded then now - script.lastEnded else 0) / 1000\n        timeSinceLastTriggered: (if script.lastTriggered then now - script.lastTriggered else 0) / 1000\n\n    stateEvent =\n      scriptRunning: @currentNoteGroup?.scriptID or ''\n      noteGroupRunning: @currentNoteGroup?.name or ''\n      scriptStates: scriptStates\n      timeSinceLastScriptEnded: (if @lastScriptEnded then now - @lastScriptEnded else 0) / 1000\n\n    Backbone.Mediator.publish 'script:tick', stateEvent  # Used to trigger level scripts.\n\n  loadFromSession: ->\n    # load the queue with note groups to skip through\n    @addEndedScriptsFromSession()\n    @addPartiallyEndedScriptFromSession()\n    for noteGroup in @noteGroupQueue\n      @processNoteGroup(noteGroup)\n\n  addPartiallyEndedScriptFromSession: ->\n    scripts = @session.get('state').scripts\n    return unless scripts?.currentScript\n    script = _.find @scripts, {id: scripts.currentScript}\n    return unless script\n    @triggered.push(script.id)\n    noteChain = @processScript(script)\n    return unless noteChain\n    if scripts.currentScriptOffset\n      noteGroup.skipMe = true for noteGroup in noteChain[..scripts.currentScriptOffset-1]\n    @addNoteChain(noteChain, false)\n\n  addEndedScriptsFromSession: ->\n    scripts = @session.get('state').scripts\n    return unless scripts\n    endedObj = scripts['ended'] or {}\n    sortedPairs = _.sortBy(_.pairs(endedObj), (pair) -> pair[1])\n    scriptsToSkip = (p[0] for p in sortedPairs)\n    for scriptID in scriptsToSkip\n      script = _.find @scripts, {id: scriptID}\n      unless script\n        console.warn 'Couldn\\'t find script for', scriptID, 'from scripts', @scripts, 'when restoring session scripts.'\n        continue\n      continue if script.repeats # repeating scripts are not 'rerun'\n      @triggered.push(scriptID)\n      @ended.push(scriptID)\n      noteChain = @processScript(script)\n      return unless noteChain\n      noteGroup.skipMe = true for noteGroup in noteChain\n      @addNoteChain(noteChain, false)\n\n  setWorldLoading: (@worldLoading) ->\n    @run() unless @worldLoading\n\n  initializeCamera: ->\n    # Fire off the first bounds-setting script now, before we're actually running any other ones.\n    for script in @scripts\n      for note in script.noteChain or []\n        if note.surface?.focus?\n          surfaceModule = _.find note.modules or [], (module) -> module.surfaceCameraNote\n          cameraNote = surfaceModule.surfaceCameraNote true\n          @publishNote cameraNote\n          return\n\n  destroy: ->\n    @onEndAll()\n    clearInterval @tickInterval\n    super()\n\n  # TRIGGERERING NOTES\n\n  onNote: (channel, event) ->\n    return if @ignoreEvents\n    for script in @scripts\n      alreadyTriggered = script.id in @triggered\n      continue unless script.channel is channel\n      continue if alreadyTriggered and not script.repeats\n      continue if script.lastTriggered? and script.repeats is 'session'\n      continue if script.lastTriggered? and new Date().getTime() - script.lastTriggered < 1\n      continue if script.neverRun\n\n      if script.notAfter\n        for scriptID in script.notAfter\n          if scriptID in @triggered\n            script.neverRun = true\n            break\n        continue if script.neverRun\n\n      continue unless @scriptPrereqsSatisfied(script)\n      continue unless scriptMatchesEventPrereqs(script, event)\n      # everything passed!\n      console.debug \"SCRIPT: Running script '#{script.id}'\" if @debugScripts\n      script.lastTriggered = new Date().getTime()\n      @triggered.push(script.id) unless alreadyTriggered\n      noteChain = @processScript(script)\n      if not noteChain then return @trackScriptCompletions (script.id)\n      @addNoteChain(noteChain)\n      @run()\n\n  scriptPrereqsSatisfied: (script) ->\n    _.every(script.scriptPrereqs or [], (prereq) => prereq in @triggered)\n\n  processScript: (script) ->\n    noteChain = script.noteChain\n    return null unless noteChain?.length\n    noteGroup.scriptID = script.id for noteGroup in noteChain\n    lastNoteGroup = noteChain[noteChain.length - 1]\n    lastNoteGroup.isLast = true\n    return noteChain\n\n  addNoteChain: (noteChain, clearYields=true) ->\n    @processNoteGroup(noteGroup) for noteGroup in noteChain\n    noteGroup.index = i for noteGroup, i in noteChain\n    if clearYields\n      noteGroup.skipMe = true for noteGroup in @noteGroupQueue when noteGroup.script.yields\n    @noteGroupQueue.push noteGroup for noteGroup in noteChain\n    @endYieldingNote()\n\n  processNoteGroup: (noteGroup) ->\n    return if noteGroup.modules?\n    if noteGroup.playback?.scrub?\n      noteGroup.playback.scrub.duration ?= DEFAULT_SCRUB_DURATION\n    noteGroup.sprites ?= []\n    for sprite in noteGroup.sprites\n      if sprite.move?\n        sprite.move.duration ?= DEFAULT_BOT_MOVE_DURATION\n      sprite.id ?= 'Hero Placeholder'\n    noteGroup.script ?= {}\n    noteGroup.script.yields ?= true\n    noteGroup.script.skippable ?= true\n    noteGroup.modules = (new Module(noteGroup) for Module in allScriptModules when Module.neededFor(noteGroup))\n\n  endYieldingNote: ->\n    if @scriptInProgress and @currentNoteGroup?.script.yields\n      @endNoteGroup()\n      return true\n\n  # STARTING NOTES\n\n  run: ->\n    # catch all for analyzing the current state and doing whatever needs to happen next\n    return if @scriptInProgress\n    @skipAhead()\n    return unless @noteGroupQueue.length\n    nextNoteGroup = @noteGroupQueue[0]\n    return if @worldLoading and nextNoteGroup.skipMe\n    return if @worldLoading and not nextNoteGroup.script?.beforeLoad\n    @noteGroupQueue = @noteGroupQueue[1..]\n    @currentNoteGroup = nextNoteGroup\n    @notifyScriptStateChanged()\n    @scriptInProgress = true\n    @currentTimeouts = []\n    scriptLabel = \"#{nextNoteGroup.scriptID} - #{nextNoteGroup.name}\"\n    application.tracker?.trackEvent 'Script Started', {levelID: @levelID, label: scriptLabel, ls: @session?.get('_id')}, ['Google Analytics']\n    console.debug \"SCRIPT: Starting note group '#{nextNoteGroup.name}'\" if @debugScripts\n    for module in nextNoteGroup.modules\n      @processNote(note, nextNoteGroup) for note in module.startNotes()\n    if nextNoteGroup.script.duration\n      f = => @onNoteGroupTimeout? nextNoteGroup\n      setTimeout(f, nextNoteGroup.script.duration)\n    Backbone.Mediator.publish 'script:note-group-started', {}\n\n  skipAhead: ->\n    return if @worldLoading\n    return unless @noteGroupQueue[0]?.skipMe\n    @ignoreEvents = true\n    for noteGroup, i in @noteGroupQueue\n      break unless noteGroup.skipMe\n      console.debug \"SCRIPT: Skipping note group '#{noteGroup.name}'\" if @debugScripts\n      @processNoteGroup(noteGroup)\n      for module in noteGroup.modules\n        notes = module.skipNotes()\n        @processNote(note, noteGroup) for note in notes\n      @trackScriptCompletionsFromNoteGroup(noteGroup)\n    @noteGroupQueue = @noteGroupQueue[i..]\n    @ignoreEvents = false\n\n  processNote: (note, noteGroup) ->\n    note.event ?= {}\n    if note.delay\n      f = => @sendDelayedNote noteGroup, note\n      @currentTimeouts.push setTimeout(f, note.delay)\n    else\n      @publishNote(note)\n\n  sendDelayedNote: (noteGroup, note) ->\n    # some events should only happen after the bot has moved into position\n    return unless noteGroup is @currentNoteGroup\n    @publishNote(note)\n\n  publishNote: (note) ->\n    Backbone.Mediator.publish note.channel, note.event ? {}\n\n  # ENDING NOTES\n\n  onLevelRestarted: ->\n    @quiet = true\n    @endAll({force:true})\n    @initProperties()\n    @resetThings()\n    Backbone.Mediator.publish 'script:reset', {}\n    @quiet = false\n    @run()\n\n  onEndNoteGroup: (e) ->\n    # press enter\n    return unless @currentNoteGroup?.script.skippable\n    @endNoteGroup()\n    @run()\n\n  endNoteGroup: ->\n    return if @ending # kill infinite loops right here\n    @ending = true\n    return unless @currentNoteGroup?\n    scriptLabel = \"#{@currentNoteGroup.scriptID} - #{@currentNoteGroup.name}\"\n    application.tracker?.trackEvent 'Script Ended', {levelID: @levelID, label: scriptLabel, ls: @session?.get('_id')}, ['Google Analytics']\n    console.debug \"SCRIPT: Ending note group '#{@currentNoteGroup.name}'\" if @debugScripts\n    clearTimeout(timeout) for timeout in @currentTimeouts\n    for module in @currentNoteGroup.modules\n      @processNote(note, @currentNoteGroup) for note in module.endNotes()\n    Backbone.Mediator.publish 'script:note-group-ended', {} unless @quiet\n    @scriptInProgress = false\n    @trackScriptCompletionsFromNoteGroup(@currentNoteGroup)\n    @currentNoteGroup = null\n    unless @noteGroupQueue.length\n      @notifyScriptStateChanged()\n      @resetThings()\n    @ending = false\n\n  onEndAll: (e) ->\n    # Escape was pressed.\n    @endAll()\n\n  endAll: (options) ->\n    options ?= {}\n    if @scriptInProgress\n      return if (not @currentNoteGroup.script.skippable) and (not options.force)\n      @endNoteGroup()\n\n    for noteGroup, i in @noteGroupQueue\n      if ((noteGroup.script?.skippable) is false) and not options.force\n        @noteGroupQueue = @noteGroupQueue[i..]\n        @run()\n        @notifyScriptStateChanged()\n        return\n\n      @processNoteGroup(noteGroup)\n      for module in noteGroup.modules\n        notes = module.skipNotes()\n        @processNote(note, noteGroup) for note in notes unless @quiet\n      @trackScriptCompletionsFromNoteGroup(noteGroup) unless @quiet\n\n    @noteGroupQueue = []\n\n    @resetThings()\n    @notifyScriptStateChanged()\n\n  onNoteGroupTimeout: (noteGroup) ->\n    return unless noteGroup is @currentNoteGroup\n    @endNoteGroup()\n    @run()\n\n  resetThings: ->\n    Backbone.Mediator.publish 'level:enable-controls', {}\n    Backbone.Mediator.publish 'level:set-letterbox', { on: false }\n\n  trackScriptCompletionsFromNoteGroup: (noteGroup) ->\n    return unless noteGroup.isLast\n    @trackScriptCompletions(noteGroup.scriptID)\n\n  trackScriptCompletions: (scriptID) ->\n    return if @quiet\n    @ended.push(scriptID) unless scriptID in @ended\n    for script in @scripts\n      if script.id is scriptID\n        script.lastEnded = new Date()\n    @lastScriptEnded = new Date()\n    Backbone.Mediator.publish 'script:ended', {scriptID: scriptID}\n\n  notifyScriptStateChanged: ->\n    return if @quiet\n    event =\n      currentScript: @currentNoteGroup?.scriptID or null\n      currentScriptOffset: @currentNoteGroup?.index or 0\n    Backbone.Mediator.publish 'script:state-changed', event\n","CocoClass = require 'core/CocoClass'\n\nmodule.exports = class ScriptModule extends CocoClass\n\n  scrubbingTime = 0\n  movementTime = 0\n\n  constructor: (@noteGroup) ->\n    super()\n    if not @noteGroup.prepared\n      @analyzeNoteGroup(@noteGroup)\n      @noteGroup.notes ?= []\n      @noteGroup.prepared = true\n\n  # subclass should overwrite these\n\n  @neededFor: -> false\n  startNotes: -> []\n  endNotes: -> []\n  skipNotes: -> @endNotes()\n\n  # common logic\n\n  analyzeNoteGroup: ->\n    # some notes need to happen after others. Calculate the delays\n    @movementTime = @calculateMovementMax(@noteGroup)\n    @scrubbingTime = @noteGroup.playback?.scrub?.duration or 0\n\n  calculateMovementMax: ->\n    sums = {}\n    for sprite in @noteGroup.sprites\n      continue unless sprite.move?\n      sums[sprite.id] ?= 0\n      sums[sprite.id] += sprite.move.duration\n    sums = (sums[k] for k of sums)\n    Math.max(0, sums...)\n\n  maybeApplyDelayToNote: (note) ->\n    note.delay = (@scrubbingTime + @movementTime) or 0\n","ScriptModule = require './ScriptModule'\n\ncurrentMusic = null\nstandingBy = null\n\n{me} = require('core/auth')\n\nmodule.exports = class SoundScriptModule extends ScriptModule\n  @neededFor: (noteGroup) ->\n    return noteGroup.sound?\n\n  startNotes: ->\n    notes = []\n    notes.push(@addSuppressSelectionSoundsNote()) if @noteGroup.sound.suppressSelectionSounds?\n    notes.push(@addMusicNote()) if @noteGroup.sound.music?\n    return notes\n\n  endNotes: ->\n    return []\n\n  skipNotes: ->\n    return @startNotes()\n\n  addSuppressSelectionSoundsNote: ->\n    note =\n      channel: 'level:suppress-selection-sounds'\n      event: {suppress: @noteGroup.sound.suppressSelectionSounds}\n    return note\n\n  addMusicNote: ->\n    note =\n      channel: 'music-player:play-music'\n      event: @noteGroup.sound.music\n    return note\n","ScriptModule = require './ScriptModule'\n{me} = require 'core/auth'\nutils = require 'core/utils'\n\nmodule.exports = class SpritesScriptModule extends ScriptModule\n  @neededFor: (noteGroup) ->\n    return noteGroup.sprites?.length\n\n  startNotes: ->\n    notes = []\n    @moveSums = {}\n    @speakingSprites = {}\n    for sprite in @noteGroup.sprites or []\n      notes.push(@spriteMoveNote sprite) if sprite.move?\n    for sprite in @noteGroup.sprites or []\n      notes.push(@spriteSayNote(sprite, @noteGroup.script)) if sprite.say?\n      notes.push(@spriteSelectNote sprite) if sprite.select?\n    return (n for n in notes when n)\n\n  spriteMoveNote: (sprite, instant=false) ->\n    duration = if instant then 0 else sprite.move.duration\n    note =\n      channel: 'sprite:move'\n      event:\n        pos: sprite.move.target\n        duration: duration\n        spriteID: sprite.id\n    if duration\n      @moveSums[sprite.id] ?= 0\n      note.delay = @scrubbingTime + @moveSums[sprite.id]\n      @moveSums[sprite.id] += sprite.move.duration\n    return note\n\n  spriteSayNote: (sprite, script) ->\n    return if @speakingSprites[sprite.id]\n    responses = sprite.say.responses\n    responses = [] unless script.skippable or responses\n    for response in responses ? []\n      response.text = utils.i18n response, 'text'\n    text = utils.i18n sprite.say, 'text'\n    blurb = utils.i18n sprite.say, 'blurb'\n    sound = utils.i18n sprite.say, 'sound'\n    note =\n      channel: 'level:sprite-dialogue'\n      event:\n        message: text\n        blurb: blurb\n        mood: sprite.say.mood or 'explain'\n        responses: responses\n        spriteID: sprite.id\n        sound: sound\n    @maybeApplyDelayToNote note\n    return note\n\n  spriteSelectNote: (sprite) ->\n    note =\n      channel: 'level:select-sprite'\n      event:\n        thangID: if sprite.select then sprite.id else null\n    return note\n\n  endNotes: ->\n    notes = {}\n    for sprite in @noteGroup.sprites or []\n      notes[sprite.id] ?= {}\n      notes[sprite.id]['move'] = (@spriteMoveNote sprite, true) if sprite.move?\n      notes[sprite.id]['say'] = { channel: 'level:sprite-clear-dialogue' } if sprite.say?\n    noteArray = []\n    for spriteID of notes\n      for type of notes[spriteID]\n        noteArray.push(notes[spriteID][type])\n    noteArray\n","ScriptModule = require './ScriptModule'\n\nmodule.exports = class SurfaceScriptModule extends ScriptModule\n  @neededFor: (noteGroup) ->\n    return noteGroup.surface?\n\n  startNotes: ->\n    notes = []\n    notes.push(@surfaceCameraNote()) if @noteGroup.surface.focus?\n    notes.push(@surfaceHighlightNote()) if @noteGroup.surface.highlight?\n    notes.push(@surfaceLockSelectNote()) if @noteGroup.surface.lockSelect?\n    return notes\n\n  endNotes: ->\n    notes = []\n    notes.push({channel:'sprite:highlight-sprites', event: {thangIDs: []}}) if @noteGroup.surface.highlight?\n    notes.push(@surfaceCameraNote(true)) if @noteGroup.surface.focus?\n    notes.push(@surfaceLockSelectNote()) if @noteGroup.surface.lockSelect?\n    return notes\n\n  skipNotes: ->\n    notes = []\n    notes.push(@surfaceCameraNote(true)) if @noteGroup.surface.focus?\n    notes.push(@surfaceLockSelectNote()) if @noteGroup.surface.lockSelect?\n    return notes\n\n  surfaceCameraNote: (instant=false) ->\n    focus = @noteGroup.surface.focus\n    e = {}\n    e.pos = focus.target if _.isPlainObject focus.target\n    e.thangID = focus.target if _.isString focus.target\n    e.zoom = focus.zoom or 2.0  # TODO: test only doing this if e.pos, e.thangID, or focus.zoom?\n    e.duration = if focus.duration? then focus.duration else 1500\n    e.duration = 0 if instant\n    e.bounds = focus.bounds if focus.bounds?\n    return { channel: 'camera:set-camera', event: e }\n\n  surfaceHighlightNote: ->\n    highlight = @noteGroup.surface.highlight\n    note =\n      channel: 'sprite:highlight-sprites'\n      event:\n        thangIDs: highlight.targets\n        delay: highlight.delay\n    @maybeApplyDelayToNote note, @noteGroup\n    return note\n\n  surfaceLockSelectNote: ->\n    return { channel: 'level:lock-select', event: {lock: @noteGroup.surface.lockSelect} }\n","SuperModel = require 'models/SuperModel'\nCocoClass = require 'core/CocoClass'\nLevelLoader = require 'lib/LevelLoader'\nGoalManager = require 'lib/world/GoalManager'\nGod = require 'lib/God'\n{createAetherOptions} = require 'lib/aether_utils'\n\nSIMULATOR_VERSION = 4\n\nsimulatorInfo = {}\nif $.browser\n  simulatorInfo['desktop'] = $.browser.desktop if $.browser.desktop\n  simulatorInfo['name'] = $.browser.name if $.browser.name\n  simulatorInfo['platform'] = $.browser.platform if $.browser.platform\n  simulatorInfo['version'] = $.browser.versionNumber if $.browser.versionNumber\n\nmodule.exports = class Simulator extends CocoClass\n  constructor: (@options) ->\n    @options ?= {}\n    simulatorType = if @options.headlessClient then 'headless' else 'browser'\n    @simulator =\n      type: simulatorType\n      version: SIMULATOR_VERSION\n      info: simulatorInfo\n    _.extend @, Backbone.Events\n    @trigger 'statusUpdate', 'Starting simulation!'\n    @retryDelayInSeconds = 2\n    @taskURL = '/queue/scoring'\n    @simulatedByYou = 0\n    @god = new God maxAngels: 1, workerCode: @options.workerCode, headless: true  # Start loading worker.\n\n  destroy: ->\n    @off()\n    @cleanupSimulation()\n    @god?.destroy()\n    super()\n\n  fetchAndSimulateOneGame: (humanGameID, ogresGameID) =>\n    return if @destroyed\n    $.ajax\n      url: '/queue/scoring/getTwoGames'\n      type: 'POST'\n      parse: true\n      data:\n        humansGameID: humanGameID\n        ogresGameID: ogresGameID\n        simulator: @simulator\n        background: Boolean(@options.background)\n        levelID: @options.levelID\n        leagueID: @options.leagueID\n      error: (errorData) ->\n        console.warn \"There was an error fetching two games! #{JSON.stringify errorData}\"\n        if errorData?.responseText?.indexOf(\"Old simulator\") isnt -1\n          noty {\n            text: errorData.responseText\n            layout: 'center'\n            type: 'error'\n          }\n      success: (taskData) =>\n        return if @destroyed\n        unless taskData\n          @retryDelayInSeconds = 10\n          @trigger 'statusUpdate', \"No games to simulate. Trying another game in #{@retryDelayInSeconds} seconds.\"\n          @simulateAnotherTaskAfterDelay()\n          return\n        @trigger 'statusUpdate', 'Setting up simulation...'\n        #refactor this\n        @task = new SimulationTask(taskData)\n\n        @supermodel ?= new SuperModel()\n        @supermodel.resetProgress()\n        @stopListening @supermodel, 'loaded-all'\n        @levelLoader = new LevelLoader supermodel: @supermodel, levelID: @task.getLevelName(), sessionID: @task.getFirstSessionID(), opponentSessionID: @task.getSecondSessionID(), headless: true\n\n        if @supermodel.finished()\n          @simulateSingleGame()\n        else\n          @listenToOnce @supermodel, 'loaded-all', @simulateSingleGame\n\n  simulateSingleGame: ->\n    return if @destroyed\n    @assignWorldAndLevelFromLevelLoaderAndDestroyIt()\n    @trigger 'statusUpdate', 'Simulating...'\n    @setupGod()\n    try\n      @commenceSingleSimulation()\n    catch error\n      @handleSingleSimulationError error\n\n  commenceSingleSimulation: ->\n    @listenToOnce @god, 'infinite-loop', @handleSingleSimulationInfiniteLoop\n    @listenToOnce @god, 'goals-calculated', @processSingleGameResults\n    @god.createWorld @generateSpellsObject()\n\n  handleSingleSimulationError: (error) ->\n    console.error 'There was an error simulating a single game!', error\n    return if @destroyed\n    if @options.headlessClient and @options.simulateOnlyOneGame\n      console.log 'GAMERESULT:tie'\n      process.exit(0)\n    @cleanupAndSimulateAnotherTask()\n\n  handleSingleSimulationInfiniteLoop: (e) ->\n    console.log 'There was an infinite loop in the single game!'\n    return if @destroyed\n    if @options.headlessClient and @options.simulateOnlyOneGame\n      console.log 'GAMERESULT:tie'\n      process.exit(0)\n    @cleanupAndSimulateAnotherTask()\n\n  processSingleGameResults: (simulationResults) ->\n    try\n      taskResults = @formTaskResultsObject simulationResults\n    catch error\n      console.log \"Failed to form task results:\", error\n      return @cleanupAndSimulateAnotherTask()\n    humanSessionRank = taskResults.sessions[0].metrics.rank\n    ogreSessionRank = taskResults.sessions[1].metrics.rank\n    if @options.headlessClient and @options.simulateOnlyOneGame\n      if humanSessionRank is ogreSessionRank\n        console.log 'GAMERESULT:tie'\n      else if humanSessionRank < ogreSessionRank\n        console.log 'GAMERESULT:humans'\n      else if ogreSessionRank < humanSessionRank\n        console.log 'GAMERESULT:ogres'\n      process.exit(0)\n    else\n      @sendSingleGameBackToServer(taskResults)\n\n  sendSingleGameBackToServer: (results) ->\n    @trigger 'statusUpdate', 'Simulation completed, sending results back to server!'\n\n    $.ajax\n      url: '/queue/scoring/recordTwoGames'\n      data: results\n      type: 'PUT'\n      parse: true\n      success: @handleTaskResultsTransferSuccess\n      error: @handleTaskResultsTransferError\n      complete: @cleanupAndSimulateAnotherTask\n\n  fetchAndSimulateTask: =>\n    return if @destroyed\n    # Because there's some bug where the chained rankings don't work, let's just do getTwoGames until we fix it.\n    return @fetchAndSimulateOneGame()\n\n    if @options.headlessClient\n      if @dumpThisTime # The first heapdump would be useless to find leaks.\n        console.log 'Writing snapshot.'\n        @options.heapdump.writeSnapshot()\n      @dumpThisTime = true if @options.heapdump\n\n      if @options.testing\n        _.delay @setupSimulationAndLoadLevel, 0, @options.testFile, 'Testing...', status: 400\n        return\n\n    @trigger 'statusUpdate', 'Fetching simulation data!'\n    $.ajax\n      url: @taskURL\n      type: 'GET'\n      parse: true\n      error: @handleFetchTaskError\n      success: @setupSimulationAndLoadLevel\n      cache: false\n\n  handleFetchTaskError: (errorData) =>\n    console.error \"There was a horrible Error: #{JSON.stringify errorData}\"\n    @trigger 'statusUpdate', 'There was an error fetching games to simulate. Retrying in 10 seconds.'\n    @simulateAnotherTaskAfterDelay()\n\n  handleNoGamesResponse: ->\n    @noTasks = true\n    info = 'Finding game to simulate...'\n    console.log info\n    @trigger 'statusUpdate', info\n    @fetchAndSimulateOneGame()\n\n  simulateAnotherTaskAfterDelay: =>\n    console.log \"Retrying in #{@retryDelayInSeconds}\"\n    retryDelayInMilliseconds = @retryDelayInSeconds * 1000\n    _.delay @fetchAndSimulateTask, retryDelayInMilliseconds\n\n  setupSimulationAndLoadLevel: (taskData, textStatus, jqXHR) =>\n    return @handleNoGamesResponse() if jqXHR.status is 204\n    @trigger 'statusUpdate', 'Setting up simulation!'\n    @task = new SimulationTask(taskData)\n    try\n      levelID = @task.getLevelName()\n    catch err\n      console.error err\n      @trigger 'statusUpdate', \"Error simulating game: #{err}. Trying another game in #{@retryDelayInSeconds} seconds.\"\n      @simulateAnotherTaskAfterDelay()\n      return\n\n    @supermodel ?= new SuperModel()\n    @supermodel.resetProgress()\n    @stopListening @supermodel, 'loaded-all'\n    @levelLoader = new LevelLoader supermodel: @supermodel, levelID: levelID, sessionID: @task.getFirstSessionID(), opponentSessionID: @task.getSecondSessionID(), headless: true\n    if @supermodel.finished()\n      @simulateGame()\n    else\n      @listenToOnce @supermodel, 'loaded-all', @simulateGame\n\n  simulateGame: ->\n    return if @destroyed\n    info = 'All resources loaded, simulating!'\n    console.log info\n    @assignWorldAndLevelFromLevelLoaderAndDestroyIt()\n    @trigger 'statusUpdate', info, @task.getSessions()\n    @setupGod()\n\n    try\n      @commenceSimulationAndSetupCallback()\n    catch err\n      console.error 'There was an error in simulation:', err, err.stack, \"-- trying again in #{@retryDelayInSeconds} seconds\"\n      @simulateAnotherTaskAfterDelay()\n\n  assignWorldAndLevelFromLevelLoaderAndDestroyIt: ->\n    @world = @levelLoader.world\n    @task.setWorld(@world)\n    @level = @levelLoader.level\n    @session = @levelLoader.session\n    @otherSession = @levelLoader.opponentSession\n    @levelLoader.destroy()\n    @levelLoader = null\n\n  setupGod: ->\n    @god.setLevel @level.serialize {@supermodel, @session, @otherSession, headless: true, sessionless: false}\n    @god.setLevelSessionIDs (session.sessionID for session in @task.getSessions())\n    @god.setWorldClassMap @world.classMap\n    @god.setGoalManager new GoalManager @world, @level.get('goals'), null, {headless: true}\n    humanFlagHistory = _.filter @session.get('state')?.flagHistory ? [], (event) => event.source isnt 'code' and event.team is (@session.get('team') ? 'humans')\n    ogreFlagHistory = _.filter @otherSession.get('state')?.flagHistory ? [], (event) => event.source isnt 'code' and event.team is (@otherSession.get('team') ? 'ogres')\n    @god.lastFlagHistory = humanFlagHistory.concat ogreFlagHistory\n    #console.log 'got flag history', @god.lastFlagHistory, 'from', humanFlagHistory, ogreFlagHistory, @session.get('state'), @otherSession.get('state')\n    @god.lastSubmissionCount = 0  # TODO: figure out how to combine submissionCounts from both players so we can use submissionCount random seeds again.\n    @god.lastDifficulty = 0\n\n  commenceSimulationAndSetupCallback: ->\n    @listenToOnce @god, 'infinite-loop', @onInfiniteLoop\n    @listenToOnce @god, 'goals-calculated', @processResults\n    @god.createWorld @generateSpellsObject()\n\n    # Search for leaks, headless-client only.\n    if @options.headlessClient and @options.leakTest and not @memwatch?\n      leakcount = 0\n      maxleakcount = 0\n      console.log 'Setting leak callbacks.'\n      @memwatch = require 'memwatch'\n\n      @memwatch.on 'leak', (info) =>\n        console.warn \"LEAK!!\\n\" + JSON.stringify(info)\n\n        unless @hd?\n          if (leakcount++ is maxleakcount)\n            @hd = new @memwatch.HeapDiff()\n\n            @memwatch.on 'stats', (stats) =>\n              console.warn 'stats callback: ' + stats\n              diff = @hd.end()\n              console.warn \"HeapDiff:\\n\" + JSON.stringify(diff)\n\n              if @options.exitOnLeak\n                console.warn 'Exiting because of Leak.'\n                process.exit()\n              @hd = new @memwatch.HeapDiff()\n\n  onInfiniteLoop: (e) ->\n    return if @destroyed\n    console.warn 'Skipping infinitely looping game.'\n    @trigger 'statusUpdate', \"Infinite loop detected; grabbing a new game in #{@retryDelayInSeconds} seconds.\"\n    _.delay @cleanupAndSimulateAnotherTask, @retryDelayInSeconds * 1000\n\n  processResults: (simulationResults) ->\n    try\n      taskResults = @formTaskResultsObject simulationResults\n    catch error\n      console.log \"Failed to form task results:\", error\n      return @cleanupAndSimulateAnotherTask()\n    unless taskResults.taskID\n      console.error \"*** Error: taskResults has no taskID ***\\ntaskResults:\", taskResults\n      @cleanupAndSimulateAnotherTask()\n    else\n      @sendResultsBackToServer taskResults\n\n  sendResultsBackToServer: (results) ->\n    status = 'Recording:'\n    for session in results.sessions\n      states = ['wins', if _.find(results.sessions, (s) -> s.metrics.rank is 0) then 'loses' else 'draws']\n      status += \" #{session.name} #{states[session.metrics.rank]}\"\n    @trigger 'statusUpdate', status\n    console.log 'Sending result back to server:'\n    console.log JSON.stringify results\n\n    if @options.headlessClient and @options.testing\n      return @fetchAndSimulateTask()\n\n    $.ajax\n      url: '/queue/scoring'\n      data: results\n      type: 'PUT'\n      parse: true\n      success: @handleTaskResultsTransferSuccess\n      error: @handleTaskResultsTransferError\n      complete: @cleanupAndSimulateAnotherTask\n\n  handleTaskResultsTransferSuccess: (result) =>\n    return if @destroyed\n    console.log \"Task registration result: #{JSON.stringify result}\"\n    @trigger 'statusUpdate', 'Results were successfully sent back to server!'\n    @simulatedByYou++\n    unless @options.headlessClient\n      simulatedBy = parseInt($('#simulated-by-you').text(), 10) + 1\n      $('#simulated-by-you').text(simulatedBy)\n\n  handleTaskResultsTransferError: (error) =>\n    return if @destroyed\n    @trigger 'statusUpdate', 'There was an error sending the results back to the server.'\n    console.log \"Task registration error: #{JSON.stringify error}\"\n\n  cleanupAndSimulateAnotherTask: =>\n    return if @destroyed\n    @cleanupSimulation()\n    if @options.background or @noTasks\n      @fetchAndSimulateOneGame()\n    else\n      @fetchAndSimulateTask()\n\n  cleanupSimulation: ->\n    @stopListening @god\n    @world = null\n    @level = null\n\n  formTaskResultsObject: (simulationResults) ->\n    taskResults =\n      taskID: @task.getTaskID()\n      receiptHandle: @task.getReceiptHandle()\n      originalSessionID: @task.getFirstSessionID()\n      originalSessionRank: -1\n      calculationTime: 500\n      sessions: []\n      simulator: @simulator\n      randomSeed: @task.world.randomSeed\n\n    for session in @task.getSessions()\n      sessionResult =\n        sessionID: session.sessionID\n        submitDate: session.submitDate\n        creator: session.creator\n        name: session.creatorName\n        totalScore: session.totalScore\n        metrics:\n          rank: @calculateSessionRank session.sessionID, simulationResults.goalStates, @task.generateTeamToSessionMap()\n        shouldUpdateLastOpponentSubmitDateForLeague: session.shouldUpdateLastOpponentSubmitDateForLeague\n      if session.sessionID is taskResults.originalSessionID\n        taskResults.originalSessionRank = sessionResult.metrics.rank\n        taskResults.originalSessionTeam = session.team\n      taskResults.sessions.push sessionResult\n\n    return taskResults\n\n  calculateSessionRank: (sessionID, goalStates, teamSessionMap) ->\n    ogreGoals = (goalState for key, goalState of goalStates when goalState.team is 'ogres')\n    humanGoals = (goalState for key, goalState of goalStates when goalState.team is 'humans')\n    ogresWon = _.all ogreGoals, {status: 'success'}\n    humansWon = _.all humanGoals, {status: 'success'}\n    if ogresWon is humansWon\n      return 0\n    else if ogresWon and teamSessionMap['ogres'] is sessionID\n      return 0\n    else if ogresWon and teamSessionMap['ogres'] isnt sessionID\n      return 1\n    else if humansWon and teamSessionMap['humans'] is sessionID\n      return 0\n    else\n      return 1\n\n  generateSpellsObject: ->\n    spells = {}\n    for {hero, team} in [{hero: 'Hero Placeholder', team: 'humans'}, {hero: 'Hero Placeholder 1', team: 'ogres'}]\n      sessionInfo = _.filter(@task.getSessions(), {team: team})[0]\n      fullSpellName = _.string.slugify(hero) + '/plan'\n      submittedCodeLanguage = sessionInfo?.submittedCodeLanguage ? 'javascript'\n      submittedCodeLanguage = 'javascript' if submittedCodeLanguage in ['clojure', 'io']  # No longer supported\n      submittedCode = LZString.decompressFromUTF16 sessionInfo?.submittedCode?[_.string.slugify(hero)]?.plan ? ''\n      aether = new Aether createAetherOptions functionName: 'plan', codeLanguage: submittedCodeLanguage, skipProtectAPI: false\n      try\n        aether.transpile submittedCode\n      catch e\n        console.log \"Couldn't transpile #{fullSpellName}:\\n#{submittedCode}\\n\", e\n        aether.transpile ''\n      spells[fullSpellName] = name: 'plan', team: team, thang: {thang: {id: hero}, aether: aether}\n    spells\n\n\nclass SimulationTask\n  constructor: (@rawData) ->\n\n  getLevelName: ->\n    levelName = @rawData.sessions?[0]?.levelID\n    return levelName if levelName?\n    @throwMalformedTaskError 'The level name couldn\\'t be deduced from the task.'\n\n  generateTeamToSessionMap: ->\n    teamSessionMap = {}\n    for session in @rawData.sessions\n      @throwMalformedTaskError 'Two players share the same team' if teamSessionMap[session.team]?\n      teamSessionMap[session.team] = session.sessionID\n\n    teamSessionMap\n\n  throwMalformedTaskError: (errorString) ->\n    throw new Error \"The task was malformed, reason: #{errorString}\"\n\n  getFirstSessionID: -> @rawData.sessions[0].sessionID\n\n  getSecondSessionID: -> @rawData.sessions[1].sessionID\n\n  getTaskID: -> @rawData.taskID\n\n  getReceiptHandle: -> @rawData.receiptHandle\n\n  getSessions: -> @rawData.sessions\n\n  setWorld: (@world) ->\n","{hexToHSL, hslToHex} = require 'core/utils'\n\nmodule.exports = class SpriteBuilder\n  constructor: (@thangType, @options) ->\n    @options ?= {}\n    raw = @thangType.get('raw') or {}\n    @shapeStore = raw.shapes\n    @containerStore = raw.containers\n    @animationStore = raw.animations\n    @buildColorMaps()\n\n  setOptions: (@options) ->\n\n  buildMovieClip: (animationName, mode, startPosition, loops, labels) ->\n    animData = @animationStore[animationName]\n    unless animData\n      console.error 'couldn\\'t find animData from', @animationStore, 'for', animationName\n      return null\n    locals = {}\n    _.extend locals, @buildMovieClipShapes(animData.shapes)\n    _.extend locals, @buildMovieClipContainers(animData.containers)\n    _.extend locals, @buildMovieClipAnimations(animData.animations)\n    _.extend locals, @buildMovieClipGraphics(animData.graphics)\n    anim = new createjs.MovieClip()\n    if not labels\n      labels = {}\n      labels[animationName] = 0\n    anim.initialize(mode ? createjs.MovieClip.INDEPENDENT, startPosition ? 0, loops ? true, labels)\n    for tweenData in animData.tweens\n      tween = createjs.Tween\n      stopped = false\n      for func in tweenData\n        args = _.cloneDeep(func.a)\n        @dereferenceArgs(args, locals)\n        if tween[func.n]\n          tween = tween[func.n](args...)\n        else\n          # If we, say, skipped a shadow get(), then the wait() may not be present\n          stopped = true\n          break\n      anim.timeline.addTween(tween) unless stopped\n\n    anim.nominalBounds = new createjs.Rectangle(animData.bounds...)\n    if animData.frameBounds\n      anim.frameBounds = (new createjs.Rectangle(bounds...) for bounds in animData.frameBounds)\n    anim\n\n  dereferenceArgs: (args, locals) ->\n    for key, val of args\n      if locals[val]\n        args[key] = locals[val]\n      else if val is null\n        args[key] = {}\n      else if _.isString(val) and val.indexOf('createjs.') is 0\n        args[key] = eval(val) # TODO: Security risk\n      else if _.isObject(val) or _.isArray(val)\n        @dereferenceArgs(val, locals)\n    args\n\n  buildMovieClipShapes: (localShapes) ->\n    map = {}\n    for localShape in localShapes\n      if localShape.im\n        shape = new createjs.Shape()\n        shape._off = true\n      else\n        shape = @buildShapeFromStore(localShape.gn)\n        if localShape.m\n          shape.mask = map[localShape.m]\n      map[localShape.bn] = shape\n    map\n\n  buildMovieClipContainers: (localContainers) ->\n    map = {}\n    for localContainer in localContainers\n      container = @buildContainerFromStore(localContainer.gn)\n      container.setTransform(localContainer.t...)\n      container._off = localContainer.o if localContainer.o?\n      container.alpha = localContainer.al if localContainer.al?\n      map[localContainer.bn] = container\n    map\n\n  buildMovieClipAnimations: (localAnimations) ->\n    map = {}\n    for localAnimation in localAnimations\n      animation = @buildMovieClip(localAnimation.gn, localAnimation.a...)\n      animation.setTransform(localAnimation.t...)\n      map[localAnimation.bn] = animation\n    map\n\n  buildMovieClipGraphics: (localGraphics) ->\n    map = {}\n    for localGraphic in localGraphics\n      graphic = new createjs.Graphics().p(localGraphic.p)\n      map[localGraphic.bn] = graphic\n    map\n\n  buildShapeFromStore: (shapeKey, debug=false) ->\n    shapeData = @shapeStore[shapeKey]\n    shape = new createjs.Shape()\n    if shapeData.lf?\n      shape.graphics.lf shapeData.lf...\n    else if shapeData.fc?\n      shape.graphics.f @colorMap[shapeKey] or shapeData.fc\n    else if shapeData.rf?\n      shape.graphics.rf shapeData.rf...\n    if shapeData.ls?\n      shape.graphics.ls shapeData.ls...\n    else if shapeData.sc?\n      shape.graphics.s shapeData.sc\n    shape.graphics.ss shapeData.ss... if shapeData.ss?\n    shape.graphics.de shapeData.de... if shapeData.de?\n    shape.graphics.p shapeData.p if shapeData.p?\n    shape.setTransform shapeData.t...\n    shape\n\n  buildContainerFromStore: (containerKey) ->\n    console.error 'Yo we don\\'t have no containerKey' unless containerKey\n    contData = @containerStore[containerKey]\n    cont = new createjs.Container()\n    cont.initialize()\n    for childData in contData.c\n      if _.isString(childData)\n        child = @buildShapeFromStore(childData)\n      else\n        continue if not childData.gn\n        child = @buildContainerFromStore(childData.gn)\n        child.setTransform(childData.t...)\n      cont.addChild(child)\n    cont.bounds = new createjs.Rectangle(contData.b...)\n    cont\n\n  buildColorMaps: ->\n    @colorMap = {}\n    colorGroups = @thangType.get('colorGroups')\n    return if _.isEmpty colorGroups\n    return unless _.size @shapeStore  # We don't have the shapes loaded because we are doing a prerendered spritesheet approach\n    colorConfig = @options.colorConfig\n#    colorConfig ?= {team: {hue:0.4, saturation: -0.5, lightness: -0.5}} # test config\n    return if not colorConfig\n\n    for group, config of colorConfig\n      continue unless colorGroups[group] # color group not found...\n      @buildColorMapForGroup(colorGroups[group], config)\n\n  buildColorMapForGroup: (shapes, config) ->\n    return unless shapes.length\n    colors = @initColorMap(shapes)\n    @adjustHuesForColorMap(colors, config.hue)\n    @adjustValueForColorMap(colors, 1, config.saturation)\n    @adjustValueForColorMap(colors, 2, config.lightness)\n    @applyColorMap(shapes, colors)\n\n  initColorMap: (shapes) ->\n    colors = {}\n    for shapeKey in shapes\n      shape = @shapeStore[shapeKey]\n      continue if (not shape.fc?) or colors[shape.fc]\n      hsl = hexToHSL(shape.fc)\n      colors[shape.fc] = hsl\n    colors\n\n  adjustHuesForColorMap: (colors, targetHue) ->\n    hues = (hsl[0] for hex, hsl of colors)\n\n    # 'rotate' the hue spectrum so averaging works\n    if Math.max(hues) - Math.min(hues) > 0.5\n      hues = (if h < 0.5 then h + 1.0 else h for h in hues)\n    averageHue = sum(hues) / hues.length\n    averageHue %= 1\n    # end result should be something like a hue array of [0.9, 0.3] gets an average of 0.1\n\n    targetHue ?= 0\n    diff = targetHue - averageHue\n    hsl[0] = (hsl[0] + diff + 1) % 1 for hex, hsl of colors\n\n  adjustValueForColorMap: (colors, index, targetValue) ->\n    values = (hsl[index] for hex, hsl of colors)\n    averageValue = sum(values) / values.length\n    targetValue ?= 0.5\n    diff = targetValue - averageValue\n    for hex, hsl of colors\n      hsl[index] = Math.max(0, Math.min(1, hsl[index] + diff))\n\n  applyColorMap: (shapes, colors) ->\n    for shapeKey in shapes\n      shape = @shapeStore[shapeKey]\n      continue if (not shape.fc?) or not(colors[shape.fc])\n      @colorMap[shapeKey] = hslToHex(colors[shape.fc])\n\nsum = (nums) -> _.reduce(nums, (s, num) -> s + num)\n","SpriteBuilder = require('./SpriteBuilder')\nThangType = require('models/ThangType')\nCocoClass = require('core/CocoClass')\n\n\nclass SpriteExporter extends CocoClass\n  '''\n  To be used by the ThangTypeEditView to export ThangTypes to single sprite sheets which can be uploaded to\n  GridFS and used in gameplay, avoiding rendering vector images.\n\n  Code has been copied and reworked and simplified from LayerAdapter. Some shared code has been refactored into\n  ThangType, but more work could be done to rethink and reorganize Sprite rendering.\n  '''\n\n  constructor: (thangType, options) ->\n    @thangType = thangType\n    options ?= {}\n    @colorConfig = options.colorConfig or {}\n    @resolutionFactor = options.resolutionFactor or 1\n    @actionNames = options.actionNames or (action.name for action in @thangType.getDefaultActions())\n    @spriteType = options.spriteType or @thangType.get('spriteType') or 'segmented'\n    super()\n\n  build: ->\n    spriteSheetBuilder = new createjs.SpriteSheetBuilder()\n    if @spriteType is 'segmented'\n      @renderSegmentedThangType(spriteSheetBuilder)\n    else\n      @renderSingularThangType(spriteSheetBuilder)\n    try\n      spriteSheetBuilder.buildAsync()\n    catch e\n      @resolutionFactor *= 0.9\n      return @build()\n    spriteSheetBuilder.on 'complete', @onBuildSpriteSheetComplete, @, true, spriteSheetBuilder\n    @asyncBuilder = spriteSheetBuilder\n\n  renderSegmentedThangType: (spriteSheetBuilder) ->\n    containersToRender = @thangType.getContainersForActions(@actionNames)\n    spriteBuilder = new SpriteBuilder(@thangType, {colorConfig: @colorConfig})\n    for containerGlobalName in containersToRender\n      container = spriteBuilder.buildContainerFromStore(containerGlobalName)\n      frame = spriteSheetBuilder.addFrame(container, null, @resolutionFactor * (@thangType.get('scale') or 1))\n      spriteSheetBuilder.addAnimation(containerGlobalName, [frame], false)\n\n  renderSingularThangType: (spriteSheetBuilder) ->\n    actionObjects = _.values(@thangType.getActions())\n    animationActions = []\n    for a in actionObjects\n      continue unless a.animation\n      continue unless a.name in @actionNames\n      animationActions.push(a)\n\n    spriteBuilder = new SpriteBuilder(@thangType, {colorConfig: @colorConfig})\n\n    animationGroups = _.groupBy animationActions, (action) -> action.animation\n    for animationName, actions of animationGroups\n      scale = actions[0].scale or @thangType.get('scale') or 1\n      mc = spriteBuilder.buildMovieClip(animationName, null, null, null, {'temp':0})\n      spriteSheetBuilder.addMovieClip(mc, null, scale * @resolutionFactor)\n      frames = spriteSheetBuilder._animations['temp'].frames\n      framesMap = _.zipObject _.range(frames.length), frames\n      for action in actions\n        if action.frames\n          frames = (framesMap[parseInt(frame)] for frame in action.frames.split(','))\n        else\n          frames = _.sortBy(_.values(framesMap))\n        next = @thangType.nextForAction(action)\n        spriteSheetBuilder.addAnimation(action.name, frames, next)\n\n    containerActions = []\n    for a in actionObjects\n      continue unless a.container\n      continue unless a.name in @actionNames\n      containerActions.push(a)\n\n    containerGroups = _.groupBy containerActions, (action) -> action.container\n    for containerName, actions of containerGroups\n      container = spriteBuilder.buildContainerFromStore(containerName)\n      scale = actions[0].scale or @thangType.get('scale') or 1\n      frame = spriteSheetBuilder.addFrame(container, null, scale * @resolutionFactor)\n      for action in actions\n        spriteSheetBuilder.addAnimation(action.name, [frame], false)\n\n  onBuildSpriteSheetComplete: (e, builder) ->\n    if builder.spriteSheet._images.length > 1\n      total = 0\n      # get a rough estimate of how much smaller the spritesheet needs to be\n      for image, index in builder.spriteSheet._images\n        total += image.height / builder.maxHeight\n      @resolutionFactor /= (Math.max(1.1, Math.sqrt(total)))\n      @_renderNewSpriteSheet(e.async)\n      return\n\n    @trigger 'build', { spriteSheet: builder.spriteSheet }\n\n\n\nmodule.exports = SpriteExporter","module.exports = class SpriteParser\n  constructor: (@thangTypeModel) ->\n    # Create a new ThangType, or work with one we've been building\n    @thangType = $.extend(true, {}, @thangTypeModel.attributes.raw)\n    @thangType ?= {}\n    @thangType.shapes ?= {}\n    @thangType.containers ?= {}\n    @thangType.animations ?= {}\n\n    # Internal parser state\n    @shapeLongKeys = {}\n    @containerLongKeys = {}\n    @containerRenamings = {}\n    @animationLongKeys = {}\n    @animationRenamings = {}\n    @populateLongKeys()\n\n  populateLongKeys: ->\n    for shortKey, shape of @thangType.shapes\n      longKey = JSON.stringify(_.values(shape))\n      @shapeLongKeys[longKey] = shortKey\n    for shortKey, container of @thangType.containers\n      longKey = JSON.stringify(_.values(container))\n      @containerLongKeys[longKey] = shortKey\n    for shortKey, animation of @thangType.animations\n      longKey = JSON.stringify(_.values(animation))\n      @animationLongKeys[longKey] = shortKey\n\n  parse: (source) ->\n    # Grab the library properties' width/height so we can subtract half of each from frame bounds\n    properties = source.match(/.*lib\\.properties = \\{\\n.*?width: (\\d+),\\n.*?height: (\\d+)/im)\n    @width = parseInt(properties?[1] ? '0', 10)\n    @height = parseInt(properties?[2] ? '0', 10)\n\n    # Remove webfontAvailable line, not relevant\n    source = source.replace /lib\\.webfontAvailable = (.|\\n)+?};/, ''\n\n    options = {loc: false, range: true}\n    ast = esprima.parse source, options\n    blocks = @findBlocks ast, source\n    containers = _.filter blocks, {kind: 'Container'}\n    movieClips = _.filter blocks, {kind: 'MovieClip'}\n\n    mainClip = _.last(movieClips) ? _.last(containers)\n    @animationName = mainClip.name\n    for container, index in containers\n      if index is containers.length - 1 and not movieClips.length and container.bounds?.length\n        container.bounds[0] -= @width / 2\n        container.bounds[1] -= @height / 2\n      [shapeKeys, localShapes] = @getShapesFromBlock container, source\n      localContainers = @getContainersFromMovieClip container, source, true # Added true because anya attack was breaking, but might break other imports\n      addChildArgs = @getAddChildCallArguments container, source\n      instructions = []\n      for bn in addChildArgs\n        gotIt = false\n        for shape in localShapes\n          if shape.bn is bn\n            instructions.push shape.gn\n            gotIt = true\n            break\n        continue if gotIt\n        for c in localContainers\n          if c.bn is bn\n            instructions.push {t: c.t, gn: c.gn}\n            break\n      continue unless container.bounds and instructions.length\n      @addContainer {c: instructions, b: container.bounds}, container.name\n\n    childrenMovieClips = []\n\n    for movieClip, index in movieClips\n      lastBounds = null\n      # fill in bounds which are null...\n      for bounds, boundsIndex in movieClip.frameBounds\n        if not bounds\n          movieClip.frameBounds[boundsIndex] = _.clone(lastBounds)\n        else\n          lastBounds = bounds\n\n      localGraphics = @getGraphicsFromBlock(movieClip, source)\n      [shapeKeys, localShapes] = @getShapesFromBlock movieClip, source\n      localContainers = @getContainersFromMovieClip movieClip, source, true\n      localAnimations = @getAnimationsFromMovieClip movieClip, source, true\n      for animation in localAnimations\n        childrenMovieClips.push(animation.gn)\n      localTweens = @getTweensFromMovieClip movieClip, source, localShapes, localContainers, localAnimations\n      @addAnimation {\n        shapes: localShapes\n        containers: localContainers\n        animations: localAnimations\n        tweens: localTweens\n        graphics: localGraphics\n        bounds: movieClip.bounds\n        frameBounds: movieClip.frameBounds\n      }, movieClip.name\n\n    for movieClip in movieClips\n      if movieClip.name not in childrenMovieClips\n        for bounds in movieClip.frameBounds\n          bounds[0] -= @width / 2\n          bounds[1] -= @height / 2\n        movieClip.bounds[0] -= @width / 2\n        movieClip.bounds[1] -= @height / 2\n\n    @saveToModel()\n    return movieClips[0]?.name\n\n  saveToModel: ->\n    @thangTypeModel.set('raw', @thangType)\n\n  addShape: (shape) ->\n    longKey = JSON.stringify(_.values(shape))\n    shortKey = @shapeLongKeys[longKey]\n    unless shortKey?\n      shortKey = '' + _.size @thangType.shapes\n      shortKey += '+' while @thangType.shapes[shortKey]\n      @thangType.shapes[shortKey] = shape\n      @shapeLongKeys[longKey] = shortKey\n    return shortKey\n\n  addContainer: (container, name) ->\n    longKey = JSON.stringify(_.values(container))\n    shortKey = @containerLongKeys[longKey]\n    if not shortKey?\n      shortKey = name\n      if @thangType.containers[shortKey]?\n        shortKey = @animationName + ':' + name\n      @thangType.containers[shortKey] = container\n      @containerLongKeys[longKey] = shortKey\n    @containerRenamings[name] = shortKey\n    return shortKey\n\n  addAnimation: (animation, name) ->\n    longKey = JSON.stringify(_.values(animation))\n    shortKey = @animationLongKeys[longKey]\n    if shortKey?\n      @animationRenamings[shortKey] = name\n    else\n      shortKey = name\n      if @thangType.animations[shortKey]?\n        shortKey = @animationName + ':' + name\n      @thangType.animations[shortKey] = animation\n      @animationLongKeys[longKey] = shortKey\n      @animationRenamings[name] = shortKey\n    return shortKey\n\n  walk: (node, parent, fn) ->\n    node.parent = parent\n    for key, child of node\n      continue if key is 'parent'\n      if _.isArray child\n        for grandchild in child\n          @walk grandchild, node, fn if _.isString grandchild?.type\n      else if _.isString child?.type\n        node.parent = parent\n        @walk child, node, fn\n    fn node\n\n  orphanify: (node) ->\n    delete node.parent if node.parent\n    for key, child of node\n      continue if key is 'parent'\n      if _.isArray child\n        for grandchild in child\n          @orphanify grandchild if _.isString grandchild?.type\n      else if _.isString child?.type\n        delete node.parent if node.parent\n        @orphanify child\n\n  subSourceFromRange: (range, source) ->\n    source[range[0] ... range[1]]\n\n  grabFunctionArguments: (source, literal=false) ->\n    # Replace first and last parens with brackets to turn args into array\n    args = source.replace(/.*?\\(/, '[').replace(/\\)[^)]*?$/, ']')\n    if literal then eval(args) else args\n\n  findBlocks: (ast, source) ->\n    functionExpressions = []\n    rectangles = []\n    gatherFunctionExpressions = (node) =>\n      if node.type is 'FunctionExpression'\n        name = node.parent?.left?.property?.name\n        if name\n          expression = node.parent.parent\n          unless expression.parent?.right?.right\n            if /frame_[\\d]+/.test name  # Skip some useless KR function things\n              return\n          kind = expression.parent.right.right.callee.property.name\n          statement = node.parent.parent.parent.parent\n          statementIndex = _.indexOf statement.parent.body, statement\n          nominalBoundsStatement = statement.parent.body[statementIndex + 1]\n          nominalBoundsRange = nominalBoundsStatement.expression.right.range\n          nominalBoundsSource = @subSourceFromRange nominalBoundsRange, source\n          nominalBounds = @grabFunctionArguments nominalBoundsSource, true\n\n          frameBoundsStatement = statement.parent.body[statementIndex + 2]\n          if frameBoundsStatement\n            frameBoundsRange = frameBoundsStatement.expression.right.range\n            frameBoundsSource = @subSourceFromRange frameBoundsRange, source\n            if frameBoundsSource.search(/\\[rect/) is -1  # some other statement; we don't have multiframe bounds\n              console.log 'Didn\\'t have multiframe bounds for this movie clip.'\n              frameBounds = [_.clone(nominalBounds)]\n            else\n              lastRect = nominalBounds\n              frameBounds = []\n              for arg, i in frameBoundsStatement.expression.right.elements\n                bounds = null\n                argSource = @subSourceFromRange arg.range, source\n                if arg.type is 'Identifier'\n                  bounds = lastRect\n                else if arg.type is 'NewExpression'\n                  bounds = @grabFunctionArguments argSource, true\n                else if arg.type is 'AssignmentExpression'\n                  bounds = @grabFunctionArguments argSource.replace('rect=', ''), true\n                  lastRect = bounds\n                else if arg.type is 'Literal' and arg.value is null\n                  bounds = [0, 0, 1, 1]  # Let's try this.\n                frameBounds.push _.clone bounds\n          else\n            frameBounds = [_.clone(nominalBounds)]\n\n          functionExpressions.push {name: name, bounds: nominalBounds, frameBounds: frameBounds, expression: node.parent.parent, kind: kind}\n    @walk ast, null, gatherFunctionExpressions\n    functionExpressions\n\n  ###\n    this.shape_1.graphics.f('#605E4A').s().p('AAOD/IgOgaIAEhkIgmgdIgMgBIgPgFIgVgJQA1h9g8jXQAQAHAOASQAQAUAKAeQARAuAJBJQAHA/gBA5IAAADIACAfIAFARIACAGIAEAHIAHAHQAVAXAQAUQAUAaANAUIABACIgsgdIgggXIAAAnIABAwIgBgBg');\n    this.shape_1.sett(23.2,30.1);\n\n    this.shape.graphics.f().s('#000000').ss(0.1,1,1).p('AAAAAQAAAAAAAA');\n    this.shape.sett(3.8,22.4);\n  ###\n\n  getGraphicsFromBlock: (block, source) ->\n    block = block.expression.object.right.body\n    localGraphics = []\n    gatherShapeDefinitions = (node) =>\n      return unless node.type is 'NewExpression' and node.callee.property.name is 'Graphics'\n      blockName = node.parent.parent.parent.id.name\n      graphicsString = node.parent.parent.arguments[0].value\n      localGraphics.push {p:graphicsString, bn:blockName}\n\n    @walk block, null, gatherShapeDefinitions\n    return localGraphics\n\n  getShapesFromBlock: (block, source) ->\n    block = block.expression.object.right.body\n    shapeKeys = []\n    localShapes = []\n    gatherShapeDefinitions = (node) =>\n      return unless node.type is 'MemberExpression'\n      name = node.object?.object?.property?.name\n      if not name\n        name = node.parent?.parent?.id?.name\n        return unless name and name.indexOf('mask') is 0 and node.property?.name is 'Shape'\n        shape = {bn: name, im: true}\n        localShapes.push shape\n        return\n      return unless name.search('shape') is 0 and node.object.property?.name is 'graphics'\n      fillCall = node.parent\n      if fillCall.callee.property.name is 'lf'\n        linearGradientFillSource = @subSourceFromRange fillCall.parent.range, source\n        linearGradientFill = @grabFunctionArguments linearGradientFillSource.replace(/.*?lf\\(/, 'lf('), true\n      else if fillCall.callee.property.name is 'rf'\n        radialGradientFillSource = @subSourceFromRange fillCall.parent.range, source\n        radialGradientFill = @grabFunctionArguments radialGradientFillSource.replace(/.*?lf\\(/, 'lf('), true\n      else\n        fillColor = fillCall.arguments[0]?.value ? null\n        callName = fillCall.callee.property.name\n        console.error 'What is this?! Not a fill!', callName unless callName is 'f'\n      strokeCall = node.parent.parent.parent.parent\n      if strokeCall.object.callee.property.name is 'ls'\n        linearGradientStrokeSource = @subSourceFromRange strokeCall.parent.range, source\n        linearGradientStroke = @grabFunctionArguments linearGradientStrokeSource.replace(/.*?ls\\(/, 'ls(').replace(/\\).ss\\(.*/, ')'), true\n      else\n        strokeColor = strokeCall.object.arguments?[0]?.value ? null\n        console.error 'What is this?! Not a stroke!' unless strokeCall.object.callee.property.name is 's'\n      strokeStyle = null\n      graphicsStatement = strokeCall.parent\n      if strokeColor or linearGradientStroke\n        # There might now be an extra node, ss, for stroke style\n        strokeStyleSource = @subSourceFromRange strokeCall.parent.range, source\n        if strokeStyleSource.search(/ss\\(/) isnt -1\n          strokeStyle = @grabFunctionArguments strokeStyleSource.replace(/.*?ss\\(/, 'ss('), true\n          graphicsStatement = strokeCall.parent.parent.parent\n      if graphicsStatement.callee.property.name is 'de'\n        drawEllipseSource = @subSourceFromRange graphicsStatement.parent.range, source\n        drawEllipse = @grabFunctionArguments drawEllipseSource.replace(/.*?de\\(/, 'de('), true\n      else\n        path = graphicsStatement.arguments?[0]?.value ? null\n        console.error 'What is this?! Not a path!' unless graphicsStatement.callee.property.name is 'p'\n      body = graphicsStatement.parent.parent.body\n      graphicsStatementIndex = _.indexOf body, graphicsStatement.parent\n      t = body[graphicsStatementIndex + 1].expression\n      tSource = @subSourceFromRange t.range, source\n      if tSource.search('setTransform') is -1\n        t = [0, 0]\n      else\n        t = @grabFunctionArguments tSource, true\n\n      for statement in body.slice(graphicsStatementIndex + 2)\n        # Handle things like\n        # this.shape.mask = this.shape_1.mask = this.shape_2.mask = this.shape_3.mask = mask;\n        continue unless statement.expression?.left?.property?.name is 'mask'\n        exp = statement.expression\n        matchedName = false\n        while exp\n          matchedName = matchedName or exp.left?.object?.property?.name is name\n          mask = exp.name\n          exp = exp.right\n        continue unless matchedName\n        break\n\n      shape = {t: t}\n      shape.p = path if path\n      shape.de = drawEllipse if drawEllipse\n      shape.sc = strokeColor if strokeColor\n      shape.ss = strokeStyle if strokeStyle\n      shape.fc = fillColor if fillColor\n      shape.lf = linearGradientFill if linearGradientFill\n      shape.rf = radialGradientFill if radialGradientFill\n      shape.ls = linearGradientStroke if linearGradientStroke\n      if name.search('shape') isnt -1 and shape.fc is 'rgba(0,0,0,0.451)' and not shape.ss and not shape.sc\n        console.log 'Skipping a shadow', name, shape, 'because we\\'re doing shadows separately now.'\n        return\n      #if name.search('shape') isnt -1 and shape.fc is 'rgba(0,0,0,0.498)' and not shape.ss and not shape.sc\n      #  console.log 'Skipping a KR shadow', name, shape, 'because we\\'re doing shadows separately now.'\n      #  return\n      shapeKeys.push shapeKey = @addShape shape\n      localShape = {bn: name, gn: shapeKey}\n      localShape.m = mask if mask\n      localShapes.push localShape\n\n    @walk block, null, gatherShapeDefinitions\n    return [shapeKeys, localShapes]\n\n  getContainersFromMovieClip: (movieClip, source, possibleAnimations=false) ->\n    block = movieClip.expression.object.right.body\n    localContainers = []\n    gatherContainerDefinitions = (node) =>\n      return unless node.type is 'Identifier' and node.name is 'lib'\n      args = node.parent.parent.arguments\n      libName = node.parent.property.name\n      return if args.length and not possibleAnimations  # might be animation, not container\n      gn = @containerRenamings[libName]\n      return if possibleAnimations and not gn  # not a container we know about\n      bn = node.parent.parent.parent.left.property.name\n      expressionStatement = node.parent.parent.parent.parent\n      body = expressionStatement.parent.body\n      expressionStatementIndex = _.indexOf body, expressionStatement\n      t = body[expressionStatementIndex + 1].expression\n      tSource = @subSourceFromRange t.range, source\n      t = @grabFunctionArguments tSource, true\n      o = body[expressionStatementIndex + 2].expression\n      localContainer = {bn: bn, t: t, gn: gn}\n      if o and o.left?.object?.property?.name is bn and o.left.property?.name is '_off'\n        localContainer.o = o.right.value\n      else if o and o.left?.property?.name is 'alpha'\n        localContainer.al = o.right.value\n      localContainers.push localContainer\n\n    @walk block, null, gatherContainerDefinitions\n    return localContainers\n\n  getAnimationsFromMovieClip: (movieClip, source, possibleContainers=false) ->\n    block = movieClip.expression.object.right.body\n    localAnimations = []\n    gatherAnimationDefinitions = (node) =>\n      return unless node.type is 'Identifier' and node.name is 'lib'\n      args = node.parent.parent.arguments\n      libName = node.parent.property.name\n      return unless args.length or possibleContainers  # might be container, not animation\n      return if @containerRenamings[libName] and not @animationRenamings[libName]  # we have it as a container\n      args = @grabFunctionArguments @subSourceFromRange(node.parent.parent.range, source), true\n      bn = node.parent.parent.parent.left.property.name\n      expressionStatement = node.parent.parent.parent.parent\n      body = expressionStatement.parent.body\n      expressionStatementIndex = _.indexOf body, expressionStatement\n      t = body[expressionStatementIndex + 1].expression\n      tSource = @subSourceFromRange t.range, source\n      t = @grabFunctionArguments tSource, true\n      gn = @animationRenamings[libName] ? libName\n      localAnimation = {bn: bn, t: t, gn: gn, a: args}\n      localAnimations.push localAnimation\n\n    @walk block, null, gatherAnimationDefinitions\n    return localAnimations\n\n  getTweensFromMovieClip: (movieClip, source, localShapes, localContainers, localAnimations) ->\n    block = movieClip.expression.object.right.body\n    localTweens = []\n    gatherTweens = (node) =>\n      return unless node.property?.name is 'addTween'\n      callExpressions = []\n      tweenNode = node\n      gatherCallExpressions = (node) =>\n        return unless node.type is 'CallExpression'\n        name = node.callee.property?.name\n        return unless name in ['get', 'to', 'wait']\n        return if name is 'get' and callExpressions.length # avoid Ease calls in the tweens\n        flattenedRanges = _.flatten [(a.range for a in node.arguments)]\n        range = [_.min(flattenedRanges), _.max(flattenedRanges)]\n        # Replace 'this.<local>' references with just the 'name'\n        argsSource = @subSourceFromRange(range, source)\n        argsSource = argsSource.replace(/mask/g, 'this.mask') # so the mask thing will be handled correctly as a blockName in the next line\n        argsSource = argsSource.replace(/this\\.([a-z_0-9]+)/ig, '\"$1\"') # turns this.shape literal to 'shape' string\n        argsSource = argsSource.replace(/cjs(.+)\\)/, '\"createjs$1)\"') # turns cjs.Ease.get(0.5)\n        argsSource = '{}' if argsSource is 'this' # not sure what this should be but it looks like we don't need it for KR sprites\n\n        args = eval \"[#{argsSource}]\"\n        shadowTween = args[0]?.search?('shape') is 0 and not _.find(localShapes, bn: args[0])\n        shadowTween = shadowTween or args[0]?.state?[0]?.t?.search?('shape') is 0 and not _.find(localShapes, bn: args[0].state[0].t)\n        if shadowTween\n          console.log 'Skipping tween', name, argsSource, args, 'from localShapes', localShapes, 'presumably because it\\'s a shadow we skipped.'\n          return\n        callExpressions.push {n: name, a: args}\n      @walk node.parent.parent, null, gatherCallExpressions\n      localTweens.push callExpressions\n\n    @walk block, null, gatherTweens\n    return localTweens\n\n  getAddChildCallArguments: (block, source) ->\n    block = block.expression.object.right.body\n    localArgs = []\n    gatherAddChildCalls = (node) =>\n      return unless node.type is 'Identifier' and node.name is 'addChild'\n      args = node.parent.parent.arguments\n      args = (arg.property.name for arg in args)\n      localArgs.push arg for arg in args\n      return\n\n    @walk block, null, gatherAddChildCalls\n    return localArgs\n###\n\n  this.timeline.addTween(cjs.Tween.get(this.instance).to({scaleX:0.82,scaleY:0.79,rotation:-10.8,x:98.4,y:-86.5},4).to({scaleY:0.7,rotation:9.3,x:95.6,y:-48.8},1).to({scaleX:0.82,scaleY:0.61,rotation:29.4,x:92.8,y:-11},1).to({regX:7.3,scaleX:0.82,scaleY:0.53,rotation:49.7,x:90.1,y:26.6},1).to({regX:7.2,regY:29.8,scaleY:0.66,rotation:19.3,x:101.2,y:-27.8},2).to({regY:29.9,scaleY:0.79,rotation:-10.8,x:98.4,y:-86.5},2).to({scaleX:0.84,scaleY:0.83,rotation:-30.7,x:68.4,y:-110},2).to({regX:7.3,scaleX:0.84,scaleY:0.84,rotation:-33.9,x:63.5,y:-114},1).wait(1));\n\n###\n\n###\nsimpleSample = \"\"\"\n(function (lib, img, cjs) {\n\nvar p; // shortcut to reference prototypes\n\n// stage content:\n(lib.enemy_flying_move_side = function(mode,startPosition,loop) {\n  this.initialize(mode,startPosition,loop,{});\n\n  // D_Head\n  this.instance = new lib.Dragon_Head();\n  this.instance.setTransform(227,200.5,1,1,0,0,0,51.9,42.5);\n\n  this.timeline.addTween(cjs.Tween.get(this.instance).to({y:182.9},7).to({y:200.5},7).wait(1));\n\n  // Layer 7\n  this.shape = new cjs.Shape();\n  this.shape.graphics.f('#4F6877').s().p('AgsAxQgSgVgB');\n  this.shape.setTransform(283.1,146.1);\n\n  // Layer 7 2\n  this.shape_1 = new cjs.Shape();\n  this.shape_1.graphics.f('rgba(255,255,255,0.4)').s().p('ArTs0QSMB7EbVGQhsBhiGBHQjg1IvVkhg');\n  this.shape_1.setTransform(400.2,185.5);\n\n  this.timeline.addTween(cjs.Tween.get({}).to({state:[]}).to({state:[{t:this.shape}]},7).to({state:[]},2).wait(6));\n\n  // Wing\n  this.instance_9 = new lib.Wing_Animation('synched',0);\n  this.instance_9.setTransform(313.9,145.6,1,1,0,0,0,49,-83.5);\n\n  this.timeline.addTween(cjs.Tween.get(this.instance_9).to({y:128,startPosition:7},7).wait(1));\n\n  // Example hard one with two shapes\n  this.timeline.addTween(cjs.Tween.get({}).to({state:[]}).to({state:[{t:this.shape}]},7).to({state:[{t:this.shape_1}]},1).to({state:[]},1).wait(7));\n\n\n}).prototype = p = new cjs.MovieClip();\np.nominalBounds = new cjs.Rectangle(7.1,48.9,528.7,431.1);\n\n(lib.Dragon_Head = function() {\n  this.initialize();\n\n  // Isolation Mode\n  this.shape = new cjs.Shape();\n  this.shape.graphics.f('#1D2226').s().p('AgVAwQgUgdgN');\n  this.shape.setTransform(75,25.8);\n\n  this.shape_1 = new cjs.Shape();\n  this.shape_1.graphics.f('#1D2226').s().p('AgnBXQACABAF');\n  this.shape_1.setTransform(80.8,22);\n\n  this.addChild(this.shape_1,this.shape);\n}).prototype = p = new cjs.Container();\np.nominalBounds = new cjs.Rectangle(5.8,0,87.9,85);\n\n(lib.WingPart_01 = function() {\n  this.initialize();\n\n  // Layer 1\n  this.shape = new cjs.Shape();\n  this.shape.graphics.f('#DBDDBC').s().p('Ag3BeQgCgRA');\n  this.shape.setTransform(10.6,19.7,1.081,1.081);\n\n  this.shape_1 = new cjs.Shape();\n  this.shape_1.graphics.f('#1D2226').s().p('AB4CDQgGg');\n  this.shape_1.setTransform(19.9,17.6,1.081,1.081);\n\n  this.shape_2 = new cjs.Shape();\n  this.shape_2.graphics.f('#605E4A').s().p('AiECbQgRg');\n  this.shape_2.setTransform(19.5,18.4,1.081,1.081);\n\n  this.addChild(this.shape_2,this.shape_1,this.shape);\n}).prototype = p = new cjs.Container();\np.nominalBounds = new cjs.Rectangle(0,-3.1,40,41.6);\n\n\n(lib.Wing_Animation = function(mode,startPosition,loop) {\n  this.initialize(mode,startPosition,loop,{});\n\n  // WP_02\n  this.instance = new lib.WingPart_01();\n  this.instance.setTransform(53.6,-121.9,0.854,0.854,-40.9,0,0,7.2,29.9);\n\n  this.timeline.addTween(cjs.Tween.get(this.instance).to({scaleY:0.7,rotation:9.3,x:95.6,y:-48.8},1).wait(1));\n\n}).prototype = p = new cjs.MovieClip();\np.nominalBounds = new cjs.Rectangle(-27.7,-161.6,153.4,156.2);\n\n})(lib = lib||{}, images = images||{}, createjs = createjs||{});\nvar lib, images, createjs;\n\"\"\"\n###\n","CocoClass = require 'core/CocoClass'\nGameUIState = require 'models/GameUIState'\n\n# If I were the kind of math major who remembered his math, this would all be done with matrix transforms.\n\nr2d = (radians) -> radians * 180 / Math.PI\nd2r = (degrees) -> degrees / 180 * Math.PI\n\nMAX_ZOOM = 8\nMIN_ZOOM = 0.1\nDEFAULT_ZOOM = 2.0\nDEFAULT_TARGET = {x: 0, y: 0}\nDEFAULT_TIME = 1000\nSTANDARD_ZOOM_WIDTH = 924\nSTANDARD_ZOOM_HEIGHT = 589\n\n# You can't mutate any of the constructor parameters after construction.\n# You can only call zoomTo to change the zoom target and zoom level.\nmodule.exports = class Camera extends CocoClass\n  @PPM: 10   # pixels per meter\n  @MPP: 0.1  # meters per pixel; should match @PPM\n\n  bounds: null  # list of two surface points defining the viewable rectangle in the world\n                # or null if there are no bounds\n\n  # what the camera is pointed at right now\n  target: DEFAULT_TARGET\n  zoom: DEFAULT_ZOOM\n  canvasScaleFactorX: 1\n  canvasScaleFactorY: 1\n\n  # properties for tracking going between targets\n  oldZoom: null\n  newZoom: null\n  oldTarget: null\n  newTarget: null\n  tweenProgress: 0.0\n\n  instant: false\n\n  # INIT\n\n  subscriptions:\n    'camera:zoom-in': 'onZoomIn'\n    'camera:zoom-out': 'onZoomOut'\n    'camera:zoom-to': 'onZoomTo'\n    'level:restarted': 'onLevelRestarted'\n\n  constructor: (@canvas, @options={}) ->\n    angle=Math.asin(0.75)\n    hFOV=d2r(30)\n    super()\n    @gameUIState = @options.gameUIState or new GameUIState()\n    @listenTo @gameUIState, 'surface:stage-mouse-move', @onMouseMove\n    @listenTo @gameUIState, 'surface:stage-mouse-down', @onMouseDown\n    @listenTo @gameUIState, 'surface:stage-mouse-up', @onMouseUp\n    @listenTo @gameUIState, 'surface:mouse-scrolled', @onMouseScrolled\n    @handleEvents = @options.handleEvents ? true\n    @canvasWidth = parseInt(@canvas.attr('width'), 10)\n    @canvasHeight = parseInt(@canvas.attr('height'), 10)\n    @offset = {x: 0, y: 0}\n    @calculateViewingAngle angle\n    @calculateFieldOfView hFOV\n    @calculateAxisConversionFactors()\n    @calculateMinMaxZoom()\n    @updateViewports()\n\n  onResize: (newCanvasWidth, newCanvasHeight) ->\n    @canvasScaleFactorX = newCanvasWidth / @canvasWidth\n    @canvasScaleFactorY = newCanvasHeight / @canvasHeight\n    Backbone.Mediator.publish 'camera:zoom-updated', camera: @, zoom: @zoom, surfaceViewport: @surfaceViewport\n\n  calculateViewingAngle: (angle) ->\n    # Operate on open interval between 0 - 90 degrees to make the math easier\n    epsilon = 0.000001  # Too small and numerical instability will get us.\n    @angle = Math.max(Math.min(Math.PI / 2 - epsilon, angle), epsilon)\n    if @angle isnt angle and angle isnt 0 and angle isnt Math.PI / 2\n      console.log \"Restricted given camera angle of #{r2d(angle)} to #{r2d(@angle)}.\"\n\n  calculateFieldOfView: (hFOV) ->\n    # http://en.wikipedia.org/wiki/Field_of_view_in_video_games\n    epsilon = 0.000001  # Too small and numerical instability will get us.\n    @hFOV = Math.max(Math.min(Math.PI - epsilon, hFOV), epsilon)\n    if @hFOV isnt hFOV and hFOV isnt 0 and hFOV isnt Math.PI\n      console.log \"Restricted given horizontal field of view to #{r2d(hFOV)} to #{r2d(@hFOV)}.\"\n    @vFOV = 2 * Math.atan(Math.tan(@hFOV / 2) * @canvasHeight / @canvasWidth)\n    if @vFOV > Math.PI\n      console.log 'Vertical field of view problem: expected canvas not to be taller than it is wide with high field of view.'\n      @vFOV = Math.PI - epsilon\n\n  calculateAxisConversionFactors: ->\n    @y2x = Math.sin @angle      # 1 unit along y is equivalent to y2x units along x\n    @z2x = Math.cos @angle      # 1 unit along z is equivalent to z2x units along x\n    @z2y = @z2x / @y2x          # 1 unit along z is equivalent to z2y units along y\n    @x2y = 1 / @y2x             # 1 unit along x is equivalent to x2y units along y\n    @x2z = 1 / @z2x             # 1 unit along x is equivalent to x2z units along z\n    @y2z = 1 / @z2y             # 1 unit along y is equivalent to y2z units along z\n\n  # CONVERSIONS AND CALCULATIONS\n\n  worldToSurface: (pos) ->\n    x = pos.x * Camera.PPM\n    y = -pos.y * @y2x * Camera.PPM\n    if pos.z\n      y -= @z2y * @y2x * pos.z * Camera.PPM\n    {x: x, y: y}\n\n  surfaceToCanvas: (pos) ->\n    {x: (pos.x - @surfaceViewport.x) * @zoom, y: (pos.y - @surfaceViewport.y) * @zoom}\n\n  canvasToScreen: (pos) ->\n    {x: pos.x * @canvasScaleFactorX, y: pos.y * @canvasScaleFactorY}\n\n  screenToCanvas: (pos) ->\n    {x: pos.x / @canvasScaleFactorX, y: pos.y / @canvasScaleFactorY}\n\n  canvasToSurface: (pos) ->\n    {x: pos.x / @zoom + @surfaceViewport.x, y: pos.y / @zoom + @surfaceViewport.y}\n\n  surfaceToWorld: (pos) ->\n    {x: pos.x * Camera.MPP, y: -pos.y * Camera.MPP * @x2y, z: 0}\n\n  canvasToWorld: (pos) -> @surfaceToWorld @canvasToSurface pos\n  worldToCanvas: (pos) -> @surfaceToCanvas @worldToSurface pos\n  worldToScreen: (pos) -> @canvasToScreen @worldToCanvas pos\n  surfaceToScreen: (pos) -> @canvasToScreen @surfaceToCanvas pos\n  screenToSurface: (pos) -> @canvasToSurface @screenToCanvas pos\n  screenToWorld: (pos) -> @surfaceToWorld @screenToSurface pos\n\n  cameraWorldPos: ->\n    # I tried to figure out the math for how much of @vFOV is below the midpoint (botFOV) and how much is above (topFOV), but I failed.\n    # So I'm just making something up. This would give botFOV 20deg, topFOV 10deg at @vFOV 30deg and @angle 45deg, or an even 15/15 at @angle 90deg.\n    botFOV = @x2y * @vFOV / (@y2x + @x2y)\n    topFOV = @y2x * @vFOV / (@y2x + @x2y)\n    botDist = @worldViewport.height / 2 * Math.sin(@angle) / Math.sin(botFOV)\n    z = botDist * Math.sin(@angle + botFOV)\n    x: @worldViewport.cx, y: @worldViewport.cy - z * @z2y, z: z\n\n  distanceTo: (pos) ->\n    # Get the physical distance in meters from the camera to the given world pos.\n    cpos = @cameraWorldPos()\n    dx = pos.x - cpos.x\n    dy = pos.y - cpos.y\n    dz = (pos.z or 0) - cpos.z\n    Math.sqrt dx * dx + dy * dy + dz * dz\n\n  distanceRatioTo: (pos) ->\n    # Get the ratio of the distance to the given world pos over the distance to the center of the camera view.\n    cpos = @cameraWorldPos()\n    dy = @worldViewport.cy - cpos.y\n    camDist = Math.sqrt(dy * dy + cpos.z * cpos.z)\n    return @distanceTo(pos) / camDist\n\n    # Old method for flying things below; could re-integrate this\n    ## Because none of our maps are designed to get smaller with distance along the y-axis, we'll only use z, as if we were looking straight down, until we get high enough. Based on worldPos.z, we gradually shift over to the more-realistic scale. This is pretty hacky.\n    #ratioWithoutY = dz * dz / (cPos.z * cPos.z)\n    #zv = Math.min(Math.max(0, worldPos.z - 5), cPos.z - 5) / (cPos.z - 5)\n    #zv * ratioWithY + (1 - zv) * ratioWithoutY\n\n  # SUBSCRIPTIONS\n\n  onZoomIn: (e) -> @zoomTo @target, @zoom * 1.15, 300\n  onZoomOut: (e) -> @zoomTo @target, @zoom / 1.15, 300\n\n  onMouseDown: (e) ->\n    return if @dragDisabled\n    @lastPos = {x: e.originalEvent.rawX, y: e.originalEvent.rawY}\n    @mousePressed = true\n\n  onMouseMove: (e) ->\n    return unless @mousePressed and @gameUIState.get('canDragCamera')\n    return if @dragDisabled\n    target = @boundTarget(@target, @zoom)\n    newPos =\n      x: target.x + (@lastPos.x - e.originalEvent.rawX) / @zoom\n      y: target.y + (@lastPos.y - e.originalEvent.rawY) / @zoom\n    @zoomTo newPos, @zoom, 0\n    @lastPos = {x: e.originalEvent.rawX, y: e.originalEvent.rawY}\n    Backbone.Mediator.publish 'camera:dragged', {}\n\n  onMouseUp: (e) ->\n    @mousePressed = false\n\n  onMouseScrolled: (e) ->\n    ratio = 1 + 0.05 * Math.sqrt(Math.abs(e.deltaY))\n    ratio = 1 / ratio if e.deltaY > 0\n    newZoom = @zoom * ratio\n    if e.screenPos and not @focusedOnSprite()\n      # zoom based on mouse position, adjusting the target so the point under the mouse stays the same\n      mousePoint = @screenToSurface(e.screenPos)\n      ratioPosX = (mousePoint.x - @surfaceViewport.x) / @surfaceViewport.width\n      ratioPosY = (mousePoint.y - @surfaceViewport.y) / @surfaceViewport.height\n      newWidth = @canvasWidth / newZoom\n      newHeight = @canvasHeight / newZoom\n      newTargetX = mousePoint.x - (newWidth * ratioPosX) + (newWidth / 2)\n      newTargetY = mousePoint.y - (newHeight * ratioPosY) + (newHeight / 2)\n      target = {x: newTargetX, y: newTargetY}\n    else\n      target = @target\n    @zoomTo target, newZoom, 0\n\n  onLevelRestarted: ->\n    @setBounds(@firstBounds, false)\n\n  # COMMANDS\n\n  setBounds: (worldBounds, updateZoom=true) ->\n    # receives an array of two world points. Normalize and apply them\n    @firstBounds = worldBounds unless @firstBounds\n    @bounds = @normalizeBounds(worldBounds)\n    @calculateMinMaxZoom()\n    @updateZoom true if updateZoom\n    @target = @currentTarget unless @focusedOnSprite()\n\n  normalizeBounds: (worldBounds) ->\n    return null unless worldBounds\n    top = Math.max(worldBounds[0].y, worldBounds[1].y)\n    left = Math.min(worldBounds[0].x, worldBounds[1].x)\n    bottom = Math.min(worldBounds[0].y, worldBounds[1].y)\n    right = Math.max(worldBounds[0].x, worldBounds[1].x)\n    bottom -= 1 if top is bottom\n    right += 1 if left is right\n    p1 = @worldToSurface({x: left, y: top})\n    p2 = @worldToSurface({x: right, y: bottom})\n    {x: p1.x, y: p1.y, width: p2.x-p1.x, height: p2.y-p1.y}\n\n  calculateMinMaxZoom: ->\n    # Zoom targets are always done in Surface coordinates.\n    @maxZoom = MAX_ZOOM\n    return @minZoom = MIN_ZOOM unless @bounds\n    @minZoom = Math.max @canvasWidth / @bounds.width, @canvasHeight / @bounds.height\n    if @zoom\n      @zoom = Math.max @minZoom, @zoom\n      @zoom = Math.min @maxZoom, @zoom\n\n  zoomTo: (newTarget=null, newZoom=1.0, time=1500) ->\n    # Target is either just a {x, y} pos or a display object with {x, y} that might change; surface coordinates.\n    time = 0 if @instant\n    newTarget ?= {x: 0, y: 0}\n    newTarget = (@newTarget or @target) if @locked\n    newZoom = Math.max newZoom, @minZoom\n    newZoom = Math.min newZoom, @maxZoom\n\n    thangType = @target?.sprite?.thangType\n    if thangType\n      @offset = _.clone(thangType.get('positions')?.torso or {x: 0, y: 0})\n      scale = thangType.get('scale') or 1\n      @offset.x *= scale\n      @offset.y *= scale\n    else\n      @offset = {x: 0, y: 0}\n\n    return if @zoom is newZoom and newTarget is newTarget.x and newTarget.y is newTarget.y\n\n    @finishTween(true)\n    if time\n      @newTarget = newTarget\n      @oldTarget = @boundTarget(@target, @zoom)\n      @oldZoom = @zoom\n      @newZoom = newZoom\n      @tweenProgress = 0.01\n      createjs.Tween.get(@)\n        .to({tweenProgress: 1.0}, time, createjs.Ease.getPowOut(4))\n        .call @finishTween\n\n    else\n      @target = newTarget\n      @zoom = newZoom\n      @updateZoom true\n\n  focusedOnSprite: ->\n    return @target?.name\n\n  finishTween: (abort=false) =>\n    createjs.Tween.removeTweens(@)\n    return unless @newTarget\n    unless abort is true\n      @target = @newTarget\n      @zoom = @newZoom\n    @newZoom = @oldZoom = @newTarget = @newTarget = @tweenProgress = null\n    @updateZoom true\n\n  updateZoom: (force=false) ->\n    # Update when we're focusing on a Thang, tweening, or forcing it, unless we're locked\n    return if (not force) and (@locked or (not @newTarget and not @focusedOnSprite()))\n    if @newTarget\n      t = @tweenProgress\n      @zoom = @oldZoom + t * (@newZoom - @oldZoom)\n      [p1, p2] = [@oldTarget, @boundTarget(@newTarget, @newZoom)]\n      target = @target = x: p1.x + t * (p2.x - p1.x), y: p1.y + t * (p2.y - p1.y)\n    else\n      target = @boundTarget @target, @zoom\n      return if not force and _.isEqual target, @currentTarget\n    @currentTarget = target\n    viewportDifference = @updateViewports target\n    if viewportDifference > 0.1  # Roughly 0.1 pixel difference in what we can see\n      Backbone.Mediator.publish 'camera:zoom-updated', camera: @, zoom: @zoom, surfaceViewport: @surfaceViewport, minZoom: @minZoom\n\n  boundTarget: (pos, zoom) ->\n    # Given an {x, y} in Surface coordinates, return one that will keep our viewport on the Surface.\n    return pos unless @bounds\n    y = pos.y\n    if thang = pos.sprite?.thang\n      y = @worldToSurface(x: thang.pos.x, y: thang.pos.y).y  # ignore z\n    marginX = (@canvasWidth / zoom / 2)\n    marginY = (@canvasHeight / zoom / 2)\n    x = Math.min(Math.max(marginX + @bounds.x, pos.x + @offset.x), @bounds.x + @bounds.width - marginX)\n    y = Math.min(Math.max(marginY + @bounds.y, y + @offset.y), @bounds.y + @bounds.height - marginY)\n    {x: x, y: y}\n\n  updateViewports: (target) ->\n    target ?= @target\n    sv = width: @canvasWidth / @zoom, height: @canvasHeight / @zoom, cx: target.x, cy: target.y\n    sv.x = sv.cx - sv.width / 2\n    sv.y = sv.cy - sv.height / 2\n    if @surfaceViewport\n      # Calculate how different this viewport is. (If it's basically not different, we can avoid visualizing the update.)\n      viewportDifference = Math.abs(@surfaceViewport.x - sv.x) + 1.01 * Math.abs(@surfaceViewport.y - sv.y) + 1.02 * Math.abs(@surfaceViewport.width - sv.width)\n    else\n      viewportDifference = 9001\n    @surfaceViewport = sv\n\n    wv = @surfaceToWorld sv  # get x and y\n    wv.width = sv.width * Camera.MPP\n    wv.height = sv.height * Camera.MPP * @x2y\n    wv.cx = wv.x + wv.width / 2\n    wv.cy = wv.y + wv.height / 2\n    @worldViewport = wv\n\n    viewportDifference\n\n  lock: ->\n    @target = @currentTarget\n    @locked = true\n\n  unlock: ->\n    @locked = false\n\n  destroy: ->\n    createjs.Tween.removeTweens @\n    super()\n\n  onZoomTo: (e) ->\n    @zoomTo @worldToSurface(e.pos), @zoom, e.duration\n","module.exports = class CameraBorder extends createjs.Container\n  layerPriority: 100\n\n  subscriptions: {}\n\n  constructor: (options) ->\n    super()\n    @initialize()\n    @mouseEnabled = @mouseChildren = false\n    @updateBounds options.bounds\n    Backbone.Mediator.subscribe(channel, @[func], @) for channel, func of @subscriptions\n\n  destroy: ->\n    Backbone.Mediator.unsubscribe(channel, @[func], @) for channel, func of @subscriptions\n\n  updateBounds: (bounds) ->\n    return if _.isEqual bounds, @bounds\n    @bounds = bounds\n    if @border\n      @removeChild @border\n      @border = null\n    return unless @bounds\n    @addChild @border = new createjs.Shape()\n    width = 20\n    i = width\n    while i\n      opacity = 3 * (1 - (i/width)) / width\n      @border.graphics.setStrokeStyle(i, 'round').beginStroke(\"rgba(0,0,0,#{opacity})\").drawRect(bounds.x, bounds.y, bounds.width, bounds.height)\n      i -= 1\n    @border.cache bounds.x, bounds.y, bounds.width, bounds.height\n","module.exports = class CoordinateDisplay extends createjs.Container\n  layerPriority: -10\n  subscriptions:\n    'surface:mouse-moved': 'onMouseMove'\n    'surface:mouse-out': 'onMouseOut'\n    'surface:mouse-over': 'onMouseOver'\n    'surface:stage-mouse-down': 'onMouseDown'\n    'camera:zoom-updated': 'onZoomUpdated'\n    'level:flag-color-selected': 'onFlagColorSelected'\n\n  constructor: (options) ->\n    super()\n    @initialize()\n    @camera = options.camera\n    @layer = options.layer\n    console.error @toString(), 'needs a camera.' unless @camera\n    console.error @toString(), 'needs a layer.' unless @layer\n    @build()\n    @performShow = @show\n    @show = _.debounce @show, 125\n    Backbone.Mediator.subscribe(channel, @[func], @) for channel, func of @subscriptions\n\n  destroy: ->\n    Backbone.Mediator.unsubscribe(channel, @[func], @) for channel, func of @subscriptions\n    @show = null\n    @destroyed = true\n\n  toString: -> '<CoordinateDisplay>'\n\n  build: ->\n    @mouseEnabled = @mouseChildren = false\n    @addChild @background = new createjs.Shape()\n    @addChild @label = new createjs.Text('', 'bold 16px Arial', '#FFFFFF')\n    @addChild @pointMarker = new createjs.Shape()\n    @label.name = 'Coordinate Display Text'\n    @label.shadow = new createjs.Shadow('#000000', 1, 1, 0)\n    @background.name = 'Coordinate Display Background'\n    @pointMarker.name = 'Point Marker'\n    @layer.addChild @\n\n  onMouseOver: (e) -> @mouseInBounds = true\n  onMouseOut: (e) -> @mouseInBounds = false\n\n  onMouseMove: (e) ->\n    wop = @camera.screenToWorld x: e.x, y: e.y\n    wop.x = Math.round(wop.x)\n    wop.y = Math.round(wop.y)\n    return if wop.x is @lastPos?.x and wop.y is @lastPos?.y\n    @lastPos = wop\n    @lastScreenPos = x: e.x, y: e.y\n    @hide()\n    @show()  # debounced\n\n  onMouseDown: (e) ->\n    return unless key.shift\n    wop = @camera.screenToWorld x: e.x, y: e.y\n    wop.x = Math.round wop.x\n    wop.y = Math.round wop.y\n    Backbone.Mediator.publish 'tome:focus-editor', {}\n    Backbone.Mediator.publish 'surface:coordinate-selected', wop\n\n  onZoomUpdated: (e) ->\n    return unless @lastPos\n    wop = @camera.screenToWorld @lastScreenPos\n    @lastPos.x = Math.round wop.x\n    @lastPos.y = Math.round wop.y\n    @performShow() if @label.parent\n\n  onFlagColorSelected: (e) ->\n    @placingFlag = Boolean e.color\n\n  hide: ->\n    return unless @label.parent\n    @removeChild @label\n    @removeChild @background\n    @removeChild @pointMarker\n    @uncache()\n\n  updateSize: ->\n    margin = 3\n    contentWidth = @label.getMeasuredWidth() + (2 * margin)\n    contentHeight = @label.getMeasuredHeight() + (2 * margin)\n\n    # Shift pointmarker up so it centers at pointer (affects container cache position)\n    @pointMarker.regY = contentHeight\n\n    pointMarkerStroke = 2\n    pointMarkerLength = 8\n    fullPointMarkerLength = pointMarkerLength + (pointMarkerStroke / 2)\n    contributionsToTotalSize = []\n    contributionsToTotalSize = contributionsToTotalSize.concat @updateCoordinates contentWidth, contentHeight, fullPointMarkerLength\n    contributionsToTotalSize = contributionsToTotalSize.concat @updatePointMarker 0, contentHeight, pointMarkerLength, pointMarkerStroke\n\n    totalWidth = contentWidth + contributionsToTotalSize.reduce (a, b) -> a + b\n    totalHeight = contentHeight + contributionsToTotalSize.reduce (a, b) -> a + b\n\n    if @isNearTopEdge()\n      verticalEdge =\n        startPos: -fullPointMarkerLength\n        posShift: -contentHeight + 4\n    else\n      verticalEdge =\n        startPos: -totalHeight + fullPointMarkerLength\n        posShift: contentHeight\n\n    if @isNearRightEdge()\n      horizontalEdge =\n        startPos: -totalWidth + fullPointMarkerLength\n        posShift: totalWidth\n    else\n      horizontalEdge =\n        startPos: -fullPointMarkerLength\n        posShift: 0\n\n    @orient verticalEdge, horizontalEdge, totalHeight, totalWidth\n\n  isNearTopEdge: ->\n    yRatio = 1 - (@camera.worldViewport.y - @lastPos.y) / @camera.worldViewport.height\n    yRatio > 0.9\n\n  isNearRightEdge: ->\n    xRatio = (@lastPos.x - @camera.worldViewport.x) / @camera.worldViewport.width\n    xRatio > 0.85\n\n  orient: (verticalEdge, horizontalEdge, totalHeight, totalWidth) ->\n    @label.regY = @background.regY = verticalEdge.posShift\n    @label.regX = @background.regX = horizontalEdge.posShift\n    @cache horizontalEdge.startPos, verticalEdge.startPos, totalWidth, totalHeight\n\n  updateCoordinates: (contentWidth, contentHeight, offset) ->\n    # Center label horizontally and vertically\n    @label.x = contentWidth / 2 - (@label.getMeasuredWidth() / 2) + offset\n    @label.y = contentHeight / 2 - (@label.getMeasuredHeight() / 2) - offset\n\n    @background.graphics\n      .clear()\n      .beginFill('rgba(0,0,0,0.4)')\n      .beginStroke('rgba(0,0,0,0.6)')\n      .setStrokeStyle(backgroundStroke = 1)\n      .drawRoundRect(offset, -offset, contentWidth, contentHeight, radius = 2.5)\n      .endFill()\n      .endStroke()\n    contributionsToTotalSize = [offset, backgroundStroke]\n\n  updatePointMarker: (centerX, centerY, length, strokeSize) ->\n    strokeStyle = 'square'\n    @pointMarker.graphics\n      .beginStroke('rgb(255, 255, 255)')\n      .setStrokeStyle(strokeSize, strokeStyle)\n      .moveTo(centerX, centerY - length)\n      .lineTo(centerX, centerY + length)\n      .moveTo(centerX - length, centerY)\n      .lineTo(centerX + length, centerY)\n      .endStroke()\n    contributionsToTotalSize = [strokeSize, length]\n\n  show: =>\n    return unless @mouseInBounds and @lastPos and not @destroyed\n    @label.text = \"{x: #{@lastPos.x}, y: #{@lastPos.y}}\"\n    @updateSize()\n    sup = @camera.worldToSurface @lastPos\n    @x = sup.x\n    @y = sup.y\n    @addChild @background\n    @addChild @label\n    @addChild @pointMarker unless @placingFlag\n    @updateCache()\n    Backbone.Mediator.publish 'surface:coordinates-shown', {}\n","CocoClass = require 'core/CocoClass'\n\nmodule.exports = class CoordinateGrid extends CocoClass\n  subscriptions:\n    'level:toggle-grid': 'onToggleGrid'\n\n  shortcuts:\n    'ctrl+g, ⌘+g': 'onToggleGrid'\n\n  constructor: (options, worldSize) ->\n    super()\n    options ?= {}\n    @camera = options.camera\n    @layer = options.layer\n    @textLayer = options.textLayer\n    console.error @toString(), 'needs a camera.' unless @camera\n    console.error @toString(), 'needs a layer.' unless @layer\n    console.error @toString(), 'needs a textLayer.' unless @textLayer\n    @build worldSize\n\n  destroy: ->\n    super()\n\n  toString: -> '<CoordinateGrid>'\n\n  build: (worldSize) ->\n    worldWidth = worldSize[0] or 80\n    worldHeight = worldSize[1] or 68\n    @gridContainer = new createjs.Container()\n    @gridShape = new createjs.Shape()\n    @gridContainer.addChild @gridShape\n    @gridContainer.mouseEnabled = false\n    @gridShape.alpha = 0.125\n    @gridShape.graphics.setStrokeStyle 1\n    @gridShape.graphics.beginStroke 'blue'\n    gridSize = Math.round(worldWidth / 20)\n    wopStart = x: 0, y: 0\n    wopEnd = x: worldWidth, y: worldHeight\n    supStart = @camera.worldToSurface wopStart\n    supEnd = @camera.worldToSurface wopEnd\n    wop = x: wopStart.x, y: wopStart.y\n    @labels = []\n    linesDrawn = 0\n    while wop.x <= wopEnd.x\n      sup = @camera.worldToSurface wop\n      @gridShape.graphics.mt(sup.x, supStart.y).lt(sup.x, supEnd.y)\n      if ++linesDrawn % 2\n        t = new createjs.Text(wop.x.toFixed(0), '16px Arial', 'blue')\n        t.textAlign = 'center'\n        t.textBaseline = 'bottom'\n        t.x = sup.x\n        t.y = supStart.y\n        t.alpha = 0.75\n        @labels.push t\n      wop.x += gridSize\n      if wopEnd.x < wop.x <= wopEnd.x - gridSize / 2\n        wop.x = wopEnd.x\n    linesDrawn = 0\n    while wop.y <= wopEnd.y\n      sup = @camera.worldToSurface wop\n      @gridShape.graphics.mt(supStart.x, sup.y).lt(supEnd.x, sup.y)\n      if ++linesDrawn % 2\n        t = new createjs.Text(wop.y.toFixed(0), '16px Arial', 'blue')\n        t.textAlign = 'left'\n        t.textBaseline = 'middle'\n        t.x = 0\n        t.y = sup.y\n        t.alpha = 0.75\n        @labels.push t\n      wop.y += gridSize\n      if wopEnd.y < wop.y <= wopEnd.y - gridSize / 2\n        wop.y = wopEnd.y\n    @gridShape.graphics.endStroke()\n    bounds = x: supStart.x, y: supEnd.y, width: supEnd.x - supStart.x, height: supStart.y - supEnd.y\n    return unless bounds?.width and bounds.height\n    @gridContainer.cache bounds.x, bounds.y, bounds.width, bounds.height\n\n  showGrid: ->\n    return if @gridShowing()\n    @layer.addChild @gridContainer\n    @textLayer.addChild label for label in @labels\n\n  hideGrid: ->\n    return unless @gridShowing()\n    @layer.removeChild @gridContainer\n    @textLayer.removeChild label for label in @labels\n\n  gridShowing: ->\n    @gridContainer?.parent?\n\n  onToggleGrid: (e) ->\n    e?.preventDefault?()\n    if @gridShowing() then @hideGrid() else @showGrid()\n\n","CocoClass = require 'core/CocoClass'\n\nmodule.exports = class CountdownScreen extends CocoClass\n  subscriptions:\n    'playback:real-time-playback-started': 'onRealTimePlaybackStarted'\n    'playback:real-time-playback-ended': 'onRealTimePlaybackEnded'\n\n  constructor: (options) ->\n    super()\n    options ?= {}\n    @camera = options.camera\n    @layer = options.layer\n    @showsCountdown = options.showsCountdown\n    console.error @toString(), 'needs a camera.' unless @camera\n    console.error @toString(), 'needs a layer.' unless @layer\n    @build()\n\n  destroy: ->\n    clearInterval @countdownInterval if @countdownInterval\n    super()\n\n  onCastingBegins: (e) -> @show() unless e.preload\n  onCastingEnds: (e) -> @hide()\n\n  toString: -> '<CountdownScreen>'\n\n  build: ->\n    @dimLayer = new createjs.Container()\n    @dimLayer.mouseEnabled = @dimLayer.mouseChildren = false\n    @dimLayer.addChild @dimScreen = new createjs.Shape()\n    @dimScreen.graphics.beginFill('rgba(0,0,0,0.5)').rect 0, 0, @camera.canvasWidth, @camera.canvasHeight\n    @dimLayer.alpha = 0\n    @dimLayer.addChild @makeCountdownText()\n\n  makeCountdownText: ->\n    size = Math.ceil @camera.canvasHeight / 2\n    text = new createjs.Text '3...', \"#{size}px Open Sans Condensed\", '#F7B42C'\n    text.shadow = new createjs.Shadow '#000', Math.ceil(@camera.canvasHeight / 300), Math.ceil(@camera.canvasHeight / 300), Math.ceil(@camera.canvasHeight / 120)\n    text.textAlign = 'center'\n    text.textBaseline = 'middle'\n    text.x = @camera.canvasWidth / 2\n    text.y = @camera.canvasHeight / 2\n    @text = text\n    return text\n\n  show: ->\n    return if @showing\n    createjs.Tween.removeTweens @dimLayer\n    if @showsCountdown\n      @dimLayer.alpha = 0\n      @showing = true\n      createjs.Tween.get(@dimLayer).to({alpha: 1}, 500)\n      @secondsRemaining = 3\n      @countdownInterval = setInterval @decrementCountdown, 1000\n      @updateText()\n      @layer.addChild @dimLayer\n    else\n      @endCountdown()\n\n  hide: (duration=500) ->\n    return unless @showing\n    @showing = false\n    createjs.Tween.removeTweens @dimLayer\n    createjs.Tween.get(@dimLayer).to({alpha: 0}, duration).call => @layer.removeChild @dimLayer unless @destroyed\n\n  decrementCountdown: =>\n    return if @destroyed\n    --@secondsRemaining\n    @updateText()\n    unless @secondsRemaining\n      @endCountdown()\n\n  updateText: ->\n    @text.text = if @secondsRemaining then \"#{@secondsRemaining}...\" else '0!'\n\n  endCountdown: ->\n    console.log 'should actually start in 1s'\n    clearInterval @countdownInterval if @countdownInterval\n    @countdownInterval = null\n    @hide()\n\n  onRealTimePlaybackStarted: (e) ->\n    @show()\n\n  onRealTimePlaybackEnded: (e) ->\n    clearInterval @countdownInterval if @countdownInterval\n    @countdownInterval = null\n    @hide Math.max(500, 1000 * (@secondsRemaining or 0))\n","module.exports = class DebugDisplay extends createjs.Container\n  layerPriority: 20\n  subscriptions:\n    'level:set-debug': 'onSetDebug'\n\n  constructor: (options) ->\n    super()\n    @initialize()\n    @canvasWidth = options.canvasWidth\n    @canvasHeight = options.canvasHeight\n    console.error 'DebugDisplay needs canvasWidth/Height.' unless @canvasWidth and @canvasHeight\n    @build()\n    @onSetDebug debug: true\n    Backbone.Mediator.subscribe(channel, @[func], @) for channel, func of @subscriptions\n\n  destroy: ->\n    Backbone.Mediator.unsubscribe(channel, @[func], @) for channel, func of @subscriptions\n\n  onSetDebug: (e) ->\n    return if e.debug is @on\n    @visible = @on = e.debug\n    @fps = null\n    @framesRenderedThisSecond = 0\n    @lastFrameSecondStart = Date.now()\n\n  build: ->\n    @mouseEnabled = @mouseChildren = false\n    @addChild @frameText = new createjs.Text '...', '20px Arial', '#FFF'\n    @frameText.name = 'frame text'\n    @frameText.x = @canvasWidth - 50\n    @frameText.y = @canvasHeight - 25\n    @frameText.alpha = 0.5\n\n  updateFrame: (currentFrame) ->\n    return unless @on\n    ++@framesRenderedThisSecond\n    time = Date.now()\n    diff = (time - @lastFrameSecondStart) / 1000\n    if diff > 1\n      @fps = Math.round @framesRenderedThisSecond / diff\n      @lastFrameSecondStart = time\n      @framesRenderedThisSecond = 0\n\n    @frameText.text = Math.round(currentFrame) + (if @fps? then ' - ' + @fps + ' fps' else '')\n    @frameText.x = @canvasWidth - @frameText.getMeasuredWidth() - 10\n","CocoClass = require 'core/CocoClass'\n\nmodule.exports = class Dimmer extends CocoClass\n  subscriptions:\n    'level:disable-controls': 'onDisableControls'\n    'level:enable-controls': 'onEnableControls'\n    'sprite:highlight-sprites': 'onHighlightSprites'\n    'sprite:speech-updated': 'onSpriteSpeechUpdated'\n    'surface:frame-changed': 'onFrameChanged'\n    'camera:zoom-updated': 'onZoomUpdated'\n\n  constructor: (options) ->\n    super()\n    options ?= {}\n    @camera = options.camera\n    @layer = options.layer\n    console.error @toString(), 'needs a camera.' unless @camera\n    console.error @toString(), 'needs a layer.' unless @layer\n    @build()\n    @updateDimMask = _.throttle @updateDimMask, 10\n    @highlightedThangIDs = []\n    @sprites = {}\n\n  toString: -> '<Dimmer>'\n\n  build: ->\n    @dimLayer = new createjs.Container()\n    @dimLayer.mouseEnabled = @dimLayer.mouseChildren = false\n    @dimLayer.addChild @dimScreen = new createjs.Shape()\n    @dimLayer.addChild @dimMask = new createjs.Shape()\n    @dimScreen.graphics.beginFill('rgba(0,0,0,0.5)').rect 0, 0, @camera.canvasWidth, @camera.canvasHeight\n    @dimMask.compositeOperation = 'destination-out'\n    @dimLayer.cache 0, 0, @camera.canvasWidth, @camera.canvasHeight\n\n  onDisableControls: (e) ->\n    return if @on or (e.controls and not ('surface' in e.controls))\n    @dim()\n\n  onEnableControls: (e) ->\n    return if not @on or (e.controls and not ('surface' in e.controls))\n    @undim()\n\n  onSpriteSpeechUpdated: (e) -> @updateDimMask() if @on\n  onFrameChanged: (e) -> @updateDimMask() if @on\n  onZoomUpdated: (e) -> @updateDimMask() if @on\n  onHighlightSprites: (e) ->\n    @highlightedThangIDs = e.thangIDs ? []\n    @updateDimMask() if @on\n\n  setSprites: (@sprites) ->\n\n  dim: ->\n    @on = true\n    @layer.addChild @dimLayer\n    @layer.updateLayerOrder()\n    sprite.setDimmed true for thangID, sprite of @sprites\n    @updateDimMask()\n\n  undim: ->\n    @on = false\n    @layer.removeChild @dimLayer\n    sprite.setDimmed false for thangID, sprite of @sprites\n\n  updateDimMask: =>\n    @dimMask.graphics.clear()\n    for thangID, sprite of @sprites\n      continue unless (thangID in @highlightedThangIDs) or sprite.isTalking?()\n      sup = x: sprite.sprite.x, y: sprite.sprite.y\n      cap = @camera.surfaceToCanvas sup\n      r = 50 * @camera.zoom  # TODO: find better way to get the radius based on the sprite's size\n      @dimMask.graphics.beginRadialGradientFill(['rgba(0,0,0,1)', 'rgba(0,0,0,0)'], [0.5, 1], cap.x, cap.y, 0, cap.x, cap.y, r).drawCircle(cap.x, cap.y, r)\n\n    @dimLayer.updateCache 0, 0, @camera.canvasWidth, @camera.canvasHeight\n","Dropper = class Dropper\n  lostFrames: 0.0\n  dropCounter: 0\n\n  constructor: ->\n    @listener = (e) => @tick(e)\n\n  tick: ->\n    unless @tickedOnce\n      @tickedOnce = true  # Can't get measured FPS on the 0th frame.\n      return\n\n    --@dropCounter if @dropCounter > 0\n\n    # Track number of frames we've lost since the last tick.\n    fps = createjs.Ticker.getFPS()\n    actual = createjs.Ticker.getMeasuredFPS(1)\n    @lostFrames += (fps - actual) / fps\n\n    # If lostFrames > 1, drop that number for the next tick.\n    @dropCounter += parseInt @lostFrames\n    @lostFrames = @lostFrames % 1\n\n  drop: ->\n    return @dropCounter > 0\n\nmodule.exports = new Dropper()\n","IndieLank = require 'lib/surface/IndieLank'\n{me} = require 'core/auth'\n\nmodule.exports = class FlagLank extends IndieLank\n  subscriptions:\n    'surface:mouse-moved': 'onMouseMoved'\n\n  #shortcuts:\n\n  defaultPos: -> x: 20, y: 20, z: 1\n\n  constructor: (thangType, options) ->\n    super thangType, options\n    @toggleCursor options.isCursor\n\n  makeIndieThang: (thangType, options) ->\n    thang = super thangType, options\n    thang.width = thang.height = thang.depth = 2\n    thang.pos.z = 1\n    thang.isSelectable = false\n    thang.color = options.color\n    thang.team = options.team\n    thang\n\n  onMouseMoved: (e) ->\n    return unless @options.isCursor\n    wop = @options.camera.screenToWorld x: e.x, y: e.y\n    @thang.pos.x = wop.x\n    @thang.pos.y = wop.y\n\n  toggleCursor: (to) ->\n    @options.isCursor = to\n    @thang.alpha = if to then 0.33 else 0.67  # 1.0 is for flags that have been placed\n    #@thang.action = if to then 'idle' else 'appear'  # TODO: why doesn't this work? Does it not render the action or something?\n    @thang.action = 'appear'\n    @updateAlpha()\n","Thang = require 'lib/world/thang'\nLank = require 'lib/surface/Lank'\n\nmodule.exports = IndieLank = class IndieLank extends Lank\n  notOfThisWorld: true\n  subscriptions:\n    'script:note-group-started': 'onNoteGroupStarted'\n    'script:note-group-ended': 'onNoteGroupEnded'\n\n  constructor: (thangType, options) ->\n    options.thang = @makeIndieThang thangType, options\n    super thangType, options\n    @shadow = @thang\n\n  makeIndieThang: (thangType, options) ->\n    @thang = thang = new Thang null, thangType.get('name'), options.thangID\n    # Build needed results of what used to be Exists, Physical, Acts, and Selectable Components\n    thang.exists = true\n    thang.width = thang.height = thang.depth = 4\n    thang.pos = options.pos ? @defaultPos()\n    thang.pos.z = thang.depth / 2\n    thang.shape = 'ellipsoid'\n    thang.rotation = 0\n    thang.action = 'idle'\n    thang.setAction = (action) -> thang.action = action\n    thang.getActionName = -> thang.action\n    thang.acts = true\n    thang.isSelectable = true\n    thang.team = options.team\n    thang.teamColors = options.teamColors\n    thang\n\n  onNoteGroupStarted: => @scriptRunning = true\n  onNoteGroupEnded: => @scriptRunning = false\n  onMouseEvent: (e, ourEventName) -> super e, ourEventName unless @scriptRunning\n  defaultPos: -> x: -20, y: 20, z: @thang.depth / 2\n","CocoClass = require 'core/CocoClass'\n\nmodule.exports = class Label extends CocoClass\n  @STYLE_DIALOGUE = 'dialogue'  # A speech bubble from a script\n  @STYLE_SAY = 'say'  # A piece of text generated from the world\n  @STYLE_NAME = 'name'  # A name like Scott set up for the Wizard\n  # We might want to combine 'say' and 'name'; they're very similar\n  # Nick designed 'say' based off of Scott's 'name' back when they were using two systems\n  @STYLE_VAR = 'variable' \n\n  subscriptions: {}\n\n  constructor: (options) ->\n    super()\n    options ?= {}\n    @sprite = options.sprite\n    @camera = options.camera\n    @layer = options.layer\n    @style = options.style ? (@sprite?.thang?.labelStyle || Label.STYLE_SAY)\n    console.error @toString(), 'needs a sprite.' unless @sprite\n    console.error @toString(), 'needs a camera.' unless @camera\n    console.error @toString(), 'needs a layer.' unless @layer\n    @setText options.text if options.text\n\n  destroy: ->\n    @setText null\n    super()\n\n  toString: -> \"<Label for #{@sprite?.thang?.id ? 'None'}: #{@text?.substring(0, 10) ? ''}>\"\n\n  setText: (text) ->\n    # Returns whether an update was actually performed\n    return false if text is @text\n    @text = text\n    @build()\n    true\n\n  build: ->\n    if @layer and not @layer.destroyed\n      @layer.removeChild @background if @background\n      @layer.removeChild @label if @label\n    @label = null\n    @background = null\n    return unless @text  # null or '' should both be skipped\n    o = @buildLabelOptions()\n    @layer.addChild @label = @buildLabel o\n    @layer.addChild @background = @buildBackground o\n    @layer.updateLayerOrder()\n\n  update: ->\n    return unless @text and @sprite.sprite\n    offset = @sprite.getOffset? (if @style in ['dialogue', 'say'] then 'mouth' else 'aboveHead')\n    offset ?= x: 0, y: 0  # temp (if not Lank)\n    offset.y += 10 if @style is 'variable'\n    rotation = @sprite.getRotation()\n    offset.x *= -1 if rotation >= 135 or rotation <= -135\n    @label.x = @background.x = @sprite.sprite.x + offset.x\n    @label.y = @background.y = @sprite.sprite.y + offset.y\n    null\n\n  show: ->\n    return unless @label\n    @layer.addChild @label\n    @layer.addChild @background\n    @layer.updateLayerOrder()\n\n  hide: ->\n    return unless @label\n    @layer.removeChild @background\n    @layer.removeChild @label\n\n  buildLabelOptions: ->\n    o = {}\n    st = {dialogue: 'D', say: 'S', name: 'N', variable: 'V'}[@style]\n    o.marginX = {D: 5, S: 6, N: 3, V: 0}[st]\n    o.marginY = {D: 6, S: 4, N: 3, V: 0}[st]\n    o.fontWeight = {D: 'bold', S: 'bold', N: 'bold', V: 'bold'}[st]\n    o.shadow = {D: false, S: true, N: true, V: true}[st]\n    o.shadowColor = {D: '#FFF', S: '#000', N: '#000', V: \"#000\"}[st]\n    o.fontSize = {D: 25, S: 12, N: 24, V:18}[st]\n    fontFamily = {D: 'Arial', S: 'Arial', N: 'Arial', B: 'Arial', V: 'Arial'}[st]\n    o.fontDescriptor = \"#{o.fontWeight} #{o.fontSize}px #{fontFamily}\"\n    o.fontColor = {D: '#000', S: '#FFF', N: '#6c6', V:'#6c6'}[st]\n    if @style is 'name' and @sprite?.thang?.team is 'humans'\n      o.fontColor = '#c66'\n    else if @style is 'name' and @sprite?.thang?.team is 'ogres'\n      o.fontColor = '#66c'\n    else if @style is 'variable'\n      o.fontColor = '#fff'\n\n    o.backgroundFillColor = {D: 'white', S: 'rgba(0,0,0,0.4)', N: 'rgba(0,0,0,0.7)', V: 'rgba(0,0,0,0.7)'}[st]\n    o.backgroundStrokeColor = {D: 'black', S: 'rgba(0,0,0,0.6)', N: 'rgba(0,0,0,0)', V: 'rgba(0,0,0,0)'}[st]\n    o.backgroundStrokeStyle = {D: 2, S: 1, N: 1, V: 1}[st]\n    o.backgroundBorderRadius = {D: 10, S: 3, N: 3, V: 3}[st]\n    o.layerPriority = {D: 10, S: 5, N: 5, V: 5}[st]\n    maxWidth = {D: 300, S: 300, N: 180, V: 100}[st]\n    maxWidth = Math.max @camera.canvasWidth / 2 - 100, maxWidth  # Does this do anything?\n    maxLength = {D: 100, S: 100, N: 30, V:30}[st]\n    multiline = @addNewLinesToText _.string.prune(@text, maxLength), o.fontDescriptor, maxWidth\n    o.text = multiline.text\n    o.textWidth = multiline.textWidth\n    o\n\n  buildLabel: (o) ->\n    label = new createjs.Text o.text, o.fontDescriptor, o.fontColor\n    label.lineHeight = o.fontSize + 2\n    label.x = o.marginX\n    label.y = o.marginY\n    label.shadow = new createjs.Shadow o.shadowColor, 1, 1, 0 if o.shadow\n    label.layerPriority = o.layerPriority\n    label.name = \"Sprite Label - #{@style}\"\n    bounds = label.getBounds()\n    label.cache(bounds.x, bounds.y, bounds.width, bounds.height)\n    o.textHeight = label.getMeasuredHeight()\n    o.label = label\n    label\n\n  buildBackground: (o) ->\n    w = o.textWidth + 2 * o.marginX\n    h = o.textHeight + 2 * o.marginY + 1  # Is this +1 needed?\n\n    background = new createjs.Shape()\n    background.name = \"Sprite Label Background - #{@style}\"\n    g = background.graphics\n    g.beginFill o.backgroundFillColor\n    g.beginStroke o.backgroundStrokeColor\n    g.setStrokeStyle o.backgroundStrokeStyle\n\n    if @style is 'dialogue'\n      radius = o.backgroundBorderRadius  # Rounded rectangle border radius\n      pointerHeight = 10  # Height of pointer triangle\n      pointerWidth = 8  # Actual width of pointer triangle\n      pointerWidth += radius  # Convenience value including pointer width and border radius\n\n      # Figure out the position of the pointer for the bubble\n      sup = x: @sprite.sprite.x, y: @sprite.sprite.y  # a little more accurate to aim for mouth--how?\n      cap = @camera.surfaceToCanvas sup\n      hPos = if cap.x / @camera.canvasWidth > 0.53 then 'right' else 'left'\n      vPos = if cap.y / @camera.canvasHeight > 0.53 then 'bottom' else 'top'\n      pointerPos = \"#{vPos}-#{hPos}\"\n      # TODO: we should redo this when the Thang moves enough, not just when we change its text\n      #return if pointerPos is @lastBubblePos and blurb is @lastBlurb\n\n      # Draw a rounded rectangle with the pointer coming out of it\n      g.moveTo(radius, 0)\n      if pointerPos is 'top-left'\n        g.lineTo(radius / 2, -pointerHeight)\n        g.lineTo(pointerWidth, 0)\n      else if pointerPos is 'top-right'\n        g.lineTo(w - pointerWidth, 0)\n        g.lineTo(w - radius / 2, -pointerHeight)\n\n      # Draw top and right edges\n      g.lineTo(w - radius, 0)\n      g.quadraticCurveTo(w, 0, w, radius)\n      g.lineTo(w, h - radius)\n      g.quadraticCurveTo(w, h, w - radius, h)\n\n      if pointerPos is 'bottom-right'\n        g.lineTo(w - radius / 2, h + pointerHeight)\n        g.lineTo(w - pointerWidth, h)\n      else if pointerPos is 'bottom-left'\n        g.lineTo(pointerWidth, h)\n        g.lineTo(radius / 2, h + pointerHeight)\n\n      # Draw bottom and left edges\n      g.lineTo(radius, h)\n      g.quadraticCurveTo(0, h, 0, h - radius)\n      g.lineTo(0, radius)\n      g.quadraticCurveTo(0, 0, radius, 0)\n\n      # Center the container where the mouth of the speaker will be\n      background.regX = if hPos is 'left' then 3 else o.textWidth + 3\n      background.regY = if vPos is 'bottom' then h + pointerHeight else -pointerHeight\n\n    else\n      # Just draw a rounded rectangle\n      background.regX = w / 2\n      background.regY = h + 2  # Just above health bar, say\n      g.drawRoundRect(o.label.x - o.marginX, o.label.y - o.marginY, w, h, o.backgroundBorderRadius)\n\n    o.label.regX = background.regX - o.marginX\n    o.label.regY = background.regY - o.marginY\n    background.cache(-10, -10, w+20, h+20) # give a wide berth for speech box pointers\n\n    g.endStroke()\n    g.endFill()\n    background.layerPriority = o.layerPriority - 1\n    background\n\n  addNewLinesToText: (originalText, fontDescriptor, maxWidth=400) ->\n    rows = []\n    row = []\n    words = _.string.words originalText\n    textWidth = 0\n    for word in words\n      row.push(word)\n      text = new createjs.Text(_.string.join(' ', row...), fontDescriptor, '#000')\n      width = text.getMeasuredWidth()\n      if width > maxWidth\n        if row.length is 1 # one long word, truncate it\n          row[0] = _.string.truncate(row[0], 40)\n          text.text = row[0]\n          textWidth = Math.max(text.getMeasuredWidth(), textWidth)\n          rows.push(row)\n          row = []\n        else\n          row.pop()\n          rows.push(row)\n          row = [word]\n      else\n        textWidth = Math.max(textWidth, width)\n    rows.push(row) if row.length\n    for row, i in rows\n      rows[i] = _.string.join(' ', row...)\n    text: _.string.join(\"\\n\", rows...), textWidth: textWidth\n","CocoClass = require 'core/CocoClass'\n{createProgressBar} = require './sprite_utils'\nCamera = require './Camera'\nMark = require './Mark'\nLabel = require './Label'\nAudioPlayer = require 'lib/AudioPlayer'\n{me} = require 'core/auth'\nThangType = require 'models/ThangType'\n\n# We'll get rid of this once level's teams actually have colors\nhealthColors =\n  ogres: [64, 128, 212]\n  humans: [255, 0, 0]\n  neutral: [64, 212, 128]\n\n# Sprite: EaselJS-based view/controller for Thang model\nmodule.exports = Lank = class Lank extends CocoClass\n  thangType: null # ThangType instance\n\n  sprite: null\n\n  healthBar: null\n  marks: null\n  labels: null\n  ranges: null\n\n  options:\n    groundLayer: null\n    textLayer: null\n    floatingLayer: null\n    thang: null\n    camera: null\n    showInvisible: false\n    preloadSounds: true\n\n  possessed: false\n  flipped: false\n  flippedCount: 0\n  actionQueue: null\n  actions: null\n  rotation: 0\n\n  # Scale numbers\n  scaleFactorX: 1 # Current scale adjustment. This can change rapidly.\n  scaleFactorY: 1\n  targetScaleFactorX: 1 # What the scaleFactor is going toward during a tween.\n  targetScaleFactorY: 1\n\n  # ACTION STATE\n  # Actions have relations. If you say 'move', 'move_side' may play because of a direction\n  # relationship, and if you say 'cast', 'cast_begin' may happen first, or 'cast_end' after.\n  currentRootAction: null  # action that, in general, is playing or will play\n  currentAction: null  # related action that is right now playing\n\n  subscriptions:\n    'level:sprite-dialogue': 'onDialogue'\n    'level:sprite-clear-dialogue': 'onClearDialogue'\n    'level:set-letterbox': 'onSetLetterbox'\n    'surface:ticked': 'onSurfaceTicked'\n    'sprite:move': 'onMove'\n\n  constructor: (@thangType, options={}) ->\n    super()\n    spriteName = @thangType.get('name')\n    @isMissile = /(Missile|Arrow|Spear|Bolt)/.test(spriteName) and not /(Tower|Charge)/.test(spriteName)\n    @options = _.extend($.extend(true, {}, @options), options)\n    @gameUIState = @options.gameUIState\n    @handleEvents = @options.handleEvents\n    @setThang @options.thang\n    @setColorConfig()\n\n    console.error @toString(), 'has no ThangType!' unless @thangType\n\n    # this is a stub, use @setSprite to swap it out for something else later\n    @sprite = new createjs.Container\n\n    @actionQueue = []\n    @marks = {}\n    @labels = {}\n    @ranges = []\n    @handledDisplayEvents = {}\n    @age = 0\n    @stillLoading = true\n    if @thangType.isFullyLoaded() then @onThangTypeLoaded() else @listenToOnce(@thangType, 'sync', @onThangTypeLoaded)\n\n  toString: -> \"<Lank: #{@thang?.id}>\"\n\n  setColorConfig: ->\n    return unless colorConfig = @thang?.getLankOptions?().colorConfig\n    if @thangType.get('original') is ThangType.heroes['code-ninja']\n      unlockedLevels = me.levels()\n      if '5522b98685fca53105544b53' in unlockedLevels  # vital-powers, start of course 5\n        colorConfig.belt = {hue: 0.4, saturation: 0.75, lightness: 0.25}\n      else if '56fc56ac7cd2381f00d758b4' in unlockedLevels  # friend-and-foe, start of course 3\n        colorConfig.belt = {hue: 0.067, saturation: 0.75, lightness: 0.5}\n      else\n        colorConfig.belt = {hue: 0.167, saturation: 0.75, lightness: 0.4}\n    @options.colorConfig = colorConfig\n\n  onThangTypeLoaded: ->\n    @stillLoading = false\n    if @options.preloadSounds\n      for trigger, sounds of @thangType.get('soundTriggers') or {} when trigger isnt 'say'\n        AudioPlayer.preloadSoundReference sound for sound in sounds when sound\n    if @thangType.get('raster')\n      @actions = {}\n      @isRaster = true\n    else\n      @actions = @thangType.getActions()\n      @createMarks()\n\n    @scaleFactorX = @thang.scaleFactorX if @thang?.scaleFactorX?\n    @scaleFactorX = @thang.scaleFactor if @thang?.scaleFactor?\n    @scaleFactorY = @thang.scaleFactorY if @thang?.scaleFactorY?\n    @scaleFactorY = @thang.scaleFactor if @thang?.scaleFactor?\n    @updateAction() unless @currentAction\n\n  setSprite: (newSprite) ->\n    if @sprite\n      @sprite.off 'animationend', @playNextAction\n      @sprite.destroy?()\n      if parent = @sprite.parent\n        parent.removeChild @sprite\n        if parent.spriteSheet is newSprite.spriteSheet\n          parent.addChild newSprite\n\n    # get the lank to update things\n    for prop in ['lastPos', 'currentRootAction']\n      delete @[prop]\n\n    @sprite = newSprite\n    if @thang and @thang.stateChanged is false\n      @thang.stateChanged = true\n    @configureMouse()\n    @sprite.on 'animationend', @playNextAction\n    @playAction(@currentAction) if @currentAction and not @stillLoading\n    @trigger 'new-sprite', @sprite\n\n  ##################################################\n  # QUEUEING AND PLAYING ACTIONS\n\n  queueAction: (action) ->\n    # The normal way to have an action play\n    action = @actions[action] if _.isString(action)\n    action ?= @actions.idle\n    @actionQueue = []\n    @actionQueue.push @currentRootAction.relatedActions.end if @currentRootAction?.relatedActions?.end\n    @actionQueue.push action.relatedActions.begin if action.relatedActions?.begin\n    @actionQueue.push action\n    if action.goesTo and nextAction = @actions[action.goesTo]\n      @actionQueue.push nextAction if nextAction\n    @currentRootAction = action\n    @playNextAction()\n\n  onSurfaceTicked: (e) -> @age += e.dt\n\n  playNextAction: =>\n    return if @destroyed\n    @playAction(@actionQueue.splice(0, 1)[0]) if @actionQueue.length\n\n  playAction: (action) ->\n    return if @isRaster\n    @currentAction = action\n    return @hide() unless action.animation or action.container or action.relatedActions or action.goesTo\n    @show()\n    return @updateActionDirection() unless action.animation or action.container or action.goesTo\n    return if @sprite.placeholder\n    m = if action.container then 'gotoAndStop' else 'gotoAndPlay'\n    @sprite[m]?(action.name)\n    @updateScale()\n    @updateRotation()\n\n  hide: ->\n    @hiding = true\n    @updateAlpha()\n\n  show: ->\n    @hiding = false\n    @updateAlpha()\n\n  stop: ->\n    @sprite?.stop?()\n    mark.stop() for name, mark of @marks\n    @stopped = true\n\n  play: ->\n    @sprite?.play?()\n    mark.play() for name, mark of @marks\n    @stopped = false\n\n  update: (frameChanged) ->\n    # Gets the sprite to reflect what the current state of the thangs and surface are\n    return false if @stillLoading\n    thangUnchanged = @thang and @thang.stateChanged is false\n    if (frameChanged and not thangUnchanged) or (@thang and @thang.bobHeight) or @notOfThisWorld\n      @updatePosition()\n    return false if thangUnchanged\n    frameChanged = frameChanged or @targetScaleFactorX isnt @scaleFactorX or @targetScaleFactorY isnt @scaleFactorY\n    if frameChanged\n      @handledDisplayEvents = {}\n      @updateScale()  # must happen before rotation\n      @updateAlpha()\n      @updateRotation()\n      @updateAction()\n      @updateStats()\n      @updateGold()\n      @showAreaOfEffects()\n      @showTextEvents()\n      @updateHealthBar()\n    @updateMarks()\n    @updateLabels()\n    @thang.stateChanged = false if @thang and @thang.stateChanged is true\n    return true\n\n  showAreaOfEffects: ->\n    return unless @thang?.currentEvents\n    for event in @thang.currentEvents\n      continue unless _.string.startsWith event, 'aoe-'\n      continue if @handledDisplayEvents[event]\n      @handledDisplayEvents[event] = true\n      args = JSON.parse(event[4...])\n      key = 'aoe-' + JSON.stringify(args[2..])\n      layerName = args[6] ? 'ground'  # Can also specify 'floating'.\n      unless layer = @options[layerName + 'Layer']\n        console.error \"#{@thang.id} couldn't find layer #{layerName}Layer for AOE effect #{key}; using ground layer.\"\n        layer = @options.groundLayer\n\n      unless key in layer.spriteSheet.getAnimations()\n        circle = new createjs.Shape()\n        radius = args[2] * Camera.PPM\n        if args.length is 4\n          circle.graphics.beginFill(args[3]).drawCircle(0, 0, radius)\n        else\n          startAngle = args[4] or 0\n          endAngle = args[5] or 2 * Math.PI\n          if startAngle is endAngle\n            startAngle = 0\n            endAngle = 2 * Math.PI\n          circle.graphics.beginFill(args[3])\n            .lineTo(0, 0)\n            .lineTo(radius * Math.cos(startAngle), radius * Math.sin(startAngle))\n            .arc(0, 0, radius, startAngle, endAngle)\n            .lineTo(0, 0)\n        layer.addCustomGraphic(key, circle, [-radius, -radius, radius*2, radius*2])\n\n      circle = new createjs.Sprite(layer.spriteSheet)\n      circle.gotoAndStop(key)\n      pos = @options.camera.worldToSurface {x: args[0], y: args[1]}\n      circle.x = pos.x\n      circle.y = pos.y\n      resFactor = layer.resolutionFactor\n      circle.scaleY = @options.camera.y2x * 0.7 / resFactor\n      circle.scaleX = 0.7 / resFactor\n      circle.alpha = 0.2\n      layer.addChild circle\n      createjs.Tween.get(circle)\n        .to({alpha: 0.6, scaleY: @options.camera.y2x / resFactor, scaleX: 1 / resFactor}, 100, createjs.Ease.circOut)\n        .to({alpha: 0, scaleY: 0, scaleX: 0}, 700, createjs.Ease.circIn)\n        .call =>\n          return if @destroyed\n          layer.removeChild circle\n          delete @handledDisplayEvents[event]\n\n  showTextEvents: ->\n    return unless @thang?.currentEvents\n    for event in @thang.currentEvents\n      continue unless _.string.startsWith event, 'text-'\n      continue if @handledDisplayEvents[event]\n      @handledDisplayEvents[event] = true\n      options = JSON.parse(event[5...])\n      label = new createjs.Text options.text, \"bold #{options.size or 16}px Arial\", options.color or '#FFF'\n      shadowColor = {humans: '#F00', ogres: '#00F', neutral: '#0F0', common: '#0F0'}[@thang.team] ? '#000'\n      label.shadow = new createjs.Shadow shadowColor, 1, 1, 3\n      offset = @getOffset 'aboveHead'\n      [label.x, label.y] = [@sprite.x + offset.x - label.getMeasuredWidth() / 2, @sprite.y + offset.y]\n      @options.textLayer.addChild label\n      window.labels ?= []\n      window.labels.push label\n      label.alpha = 0\n      createjs.Tween.get(label)\n        .to({y: label.y-2, alpha: 1}, 200, createjs.Ease.linear)\n        .to({y: label.y-12}, 1000, createjs.Ease.linear)\n        .to({y: label.y-22, alpha: 0}, 1000, createjs.Ease.linear)\n        .call =>\n          return if @destroyed\n          @options.textLayer.removeChild label\n\n  getBobOffset: ->\n    return 0 unless @thang.bobHeight\n    return @lastBobOffset if @stopped\n    return @lastBobOffset = @thang.bobHeight * (1 + Math.sin(@age * Math.PI / @thang.bobTime))\n\n  getWorldPosition: ->\n    p1 = if @possessed then @shadow.pos else @thang.pos\n    if bobOffset = @getBobOffset()\n      p1 = p1.copy?() or _.clone(p1)\n      p1.z += bobOffset\n    x: p1.x, y: p1.y, z: if @thang.isLand then 0 else p1.z - @thang.depth / 2\n\n  updatePosition: (whileLoading=false) ->\n    return if @stillLoading and not whileLoading\n    return unless @thang?.pos and @options.camera?\n    [p0, p1] = [@lastPos, @thang.pos]\n    return if p0 and p0.x is p1.x and p0.y is p1.y and p0.z is p1.z and not @thang.bobHeight\n    wop = @getWorldPosition()\n    sup = @options.camera.worldToSurface wop\n    [@sprite.x, @sprite.y] = [sup.x, sup.y]\n    @lastPos = p1.copy?() or _.clone(p1) unless whileLoading\n    @hasMoved = true\n    if @thangType.get('name') is 'Flag' and not @notOfThisWorld\n      # Let the pending flags know we're here (but not this call stack, they need to delete themselves, and we may be iterating sprites).\n      _.defer => Backbone.Mediator.publish 'surface:flag-appeared', sprite: @\n\n  updateScale: (force) ->\n    return unless @sprite\n    if @thangType.get('matchWorldDimensions') and @thang and @options.camera\n      if force or @thang.width isnt @lastThangWidth or @thang.height isnt @lastThangHeight or @thang.rotation isnt @lastThangRotation\n        bounds = @sprite.getBounds()\n        return unless bounds\n        @sprite.scaleX = @thang.width  * Camera.PPM / bounds.width  * (@options.camera.y2x + (1 - @options.camera.y2x) * Math.abs Math.cos @thang.rotation)\n        @sprite.scaleY = @thang.height * Camera.PPM / bounds.height * (@options.camera.y2x + (1 - @options.camera.y2x) * Math.abs Math.sin @thang.rotation)\n        @sprite.regX = bounds.width  * 3 / 4  # Why not / 2? I don't know.\n        @sprite.regY = bounds.height * 3 / 4  # Why not / 2? I don't know.\n\n        unless @thang.spriteName is 'Beam'\n          @sprite.scaleX *= @thangType.get('scale') ? 1\n          @sprite.scaleY *= @thangType.get('scale') ? 1\n        [@lastThangWidth, @lastThangHeight, @lastThangRotation] = [@thang.width, @thang.height, @thang.rotation]\n      return\n\n    scaleX = scaleY = 1\n\n    if @isMissile\n      # Scales the arrow so it appears longer when flying parallel to horizon.\n      # To do that, we convert angle to [0, 90] (mirroring half-planes twice), then make linear function out of it:\n      # (a - x) / a: equals 1 when x = 0, equals 0 when x = a, monotonous in between. That gives us some sort of\n      # degenerative multiplier.\n      # For our purposes, a = 90 - the direction straight upwards.\n      # Then we use r + (1 - r) * x function with r = 0.5, so that\n      # maximal scale equals 1 (when x is at it's maximum) and minimal scale is 0.5.\n      # Notice that the value of r is empirical.\n      angle = @getRotation()\n      angle = -angle if angle < 0\n      angle = 180 - angle if angle > 90\n      scaleX = 0.5 + 0.5 * (90 - angle) / 90\n\n#    console.error 'No thang for', @ unless @thang\n    @sprite.scaleX = @sprite.baseScaleX * @scaleFactorX * scaleX\n    @sprite.scaleY = @sprite.baseScaleY * @scaleFactorY * scaleY\n\n    newScaleFactorX = @thang?.scaleFactorX ? @thang?.scaleFactor ? 1\n    newScaleFactorY = @thang?.scaleFactorY ? @thang?.scaleFactor ? 1\n    if @layer?.name is 'Land' or @thang?.spriteName is 'Beam'\n      @scaleFactorX = newScaleFactorX\n      @scaleFactorY = newScaleFactorY\n    else if @thang and (newScaleFactorX isnt @targetScaleFactorX or newScaleFactorY isnt @targetScaleFactorY)\n      @targetScaleFactorX = newScaleFactorX\n      @targetScaleFactorY = newScaleFactorY\n      createjs.Tween.removeTweens(@)\n      createjs.Tween.get(@).to({scaleFactorX: @targetScaleFactorX, scaleFactorY: @targetScaleFactorY}, 2000, createjs.Ease.elasticOut)\n\n  updateAlpha: ->\n    @sprite.alpha = if @hiding then 0 else 1\n    return unless @thang?.alpha?\n    return if @sprite.alpha is @thang.alpha\n    @sprite.alpha = @thang.alpha\n    if @options.showInvisible\n      @sprite.alpha = Math.max 0.5, @sprite.alpha\n    mark.updateAlpha @thang.alpha for name, mark of @marks\n    @healthBar?.alpha = @thang.alpha\n\n  updateRotation: (sprite) ->\n    rotationType = @thangType.get('rotationType')\n    return if rotationType is 'fixed'\n    rotation = @getRotation()\n    if @isMissile and @thang.velocity\n      # Rotates the arrow to see it arc based on velocity.z.\n      # Notice that rotation here does not affect thang's state - it is just the effect.\n      # Thang's rotation is always pointing where it is heading.\n      vz = @thang.velocity.z\n      if vz and speed = @thang.velocity.magnitude(true)\n        vx = @thang.velocity.x\n        heading = @thang.velocity.heading()\n        xFactor = Math.cos heading\n        zFactor = vz / Math.sqrt(vz * vz + vx * vx)\n        rotation -= xFactor * zFactor * 45\n    sprite ?= @sprite\n    return sprite.rotation = rotation if rotationType is 'free' or not rotationType\n    @updateIsometricRotation(rotation, sprite)\n\n  getRotation: ->\n    thang = if @possessed then @shadow else @thang\n    return @rotation if not thang?.rotation\n    rotation = thang?.rotation\n    rotation = (360 - (rotation * 180 / Math.PI) % 360) % 360\n    rotation -= 360 if rotation > 180\n    rotation\n\n  updateIsometricRotation: (rotation, sprite) ->\n    return unless @currentAction\n    return if _.string.endsWith(@currentAction.name, 'back')\n    return if _.string.endsWith(@currentAction.name, 'fore')\n    sprite.scaleX *= -1 if Math.abs(rotation) >= 90\n\n  ##################################################\n  updateAction: ->\n    return if @isRaster or @actionLocked\n    action = @determineAction()\n    isDifferent = action isnt @currentRootAction or action is null\n    if not action and @thang?.actionActivated and not @stopLogging\n      console.error 'action is', action, 'for', @thang?.id, 'from', @currentRootAction, @thang.action, @thang.getActionName?()\n      @stopLogging = true\n    @queueAction(action) if action and (isDifferent or (@thang?.actionActivated and action.name isnt 'move'))\n    @updateActionDirection()\n\n  determineAction: ->\n    action = null\n    thang = if @possessed then @shadow else @thang\n    action = thang.action if thang?.acts\n    action ?= @currentRootAction.name if @currentRootAction?\n    action ?= 'idle'\n    unless @actions[action]?\n      @warnedFor ?= {}\n      console.warn 'Cannot show action', action, 'for', @thangType.get('name'), 'because it DNE' unless @warnedFor[action]\n      @warnedFor[action] = true\n      return if @action is 'idle' then null else 'idle'\n    #action = 'break' if @actions.break? and @thang?.erroredOut  # This makes it looks like it's dead when it's not: bad in Brawlwood.\n    action = 'die' if @actions.die? and thang?.health? and thang.health <= 0\n    @actions[action]\n\n  updateActionDirection: (@wallGrid=null) ->\n    # wallGrid is only needed for wall grid face updates; should refactor if this works\n    return unless action = @getActionDirection()\n    @playAction(action) if action isnt @currentAction\n\n  lockAction: -> (@actionLocked=true)\n\n  getActionDirection: (rootAction=null) ->\n    rootAction ?= @currentRootAction\n    return null unless relatedActions = rootAction?.relatedActions ? {}\n    rotation = @getRotation()\n    if relatedActions['111111111111']  # has grid-surrounding-wall-based actions\n      if @wallGrid\n        @hadWallGrid = true\n        action = ''\n        tileSize = 4\n        [gx, gy] = [@thang.pos.x, @thang.pos.y]\n        for y in [gy + tileSize, gy, gy - tileSize, gy - tileSize * 2]\n          for x in [gx - tileSize, gx, gx + tileSize]\n            if x >= 0 and y >= 0 and x < @wallGrid.width and y < @wallGrid.height\n              wallThangs = @wallGrid.contents x, y\n            else\n              wallThangs = ['outside of the map yo']\n            if wallThangs.length is 0\n              if y is gy and x is gx\n                action += '1'  # the center wall we're placing\n              else\n                action += '0'\n            else if wallThangs.length is 1\n              action += '1'\n            else\n              console.error 'Overlapping walls at', x, y, '...', wallThangs\n              action += '1'\n        matchedAction = '111111111111'\n        for relatedAction of relatedActions\n          if action.match(relatedAction.replace(/\\?/g, '.'))\n            matchedAction = relatedAction\n            break\n        #console.log 'returning', matchedAction, 'for', @thang.id, 'at', gx, gy\n        return relatedActions[matchedAction]\n      else if @hadWallGrid\n        return null\n      else\n        keys = _.keys relatedActions\n        index = Math.max 0, Math.floor((179 + rotation) / 360 * keys.length)\n        #console.log 'Showing', relatedActions[keys[index]]\n        return relatedActions[keys[index]]\n    value = Math.abs(rotation)\n    direction = null\n    direction = 'side' if value <= 45 or value >= 135\n    direction = 'fore' if 135 > rotation > 45\n    direction = 'back' if -135 < rotation < -45\n    relatedActions[direction]\n\n  updateStats: ->\n    return unless @thang and @thang.health isnt @lastHealth\n    @lastHealth = @thang.health\n    if bar = @healthBar\n      healthPct = Math.max(@thang.health / @thang.maxHealth, 0)\n      bar.scaleX = healthPct / @options.floatingLayer.resolutionFactor\n    if @thang.showsName\n      @setNameLabel(if @thang.health <= 0 then '' else @thang.id)\n    else if @options.playerName\n      @setNameLabel @options.playerName\n\n  configureMouse: ->\n    @sprite.cursor = 'pointer' if @thang?.isSelectable\n    @sprite.mouseEnabled = @sprite.mouseChildren = false unless @thang?.isSelectable or @thang?.isLand\n    if @sprite.mouseEnabled\n      @sprite.on 'mousedown', @onMouseEvent, @, false, 'sprite:mouse-down'\n      @sprite.on 'click',     @onMouseEvent, @, false, 'sprite:clicked'\n      @sprite.on 'dblclick',  @onMouseEvent, @, false, 'sprite:double-clicked'\n      @sprite.on 'pressmove', @onMouseEvent, @, false, 'sprite:dragged'\n      @sprite.on 'pressup',   @onMouseEvent, @, false, 'sprite:mouse-up'\n\n  onMouseEvent: (e, ourEventName) ->\n    return if @letterboxOn or not @sprite\n    p = @sprite\n    p = p.parent while p.parent\n    newEvent = sprite: @, thang: @thang, originalEvent: e, canvas: p.canvas\n    @trigger ourEventName, newEvent\n    Backbone.Mediator.publish ourEventName, newEvent\n    @gameUIState.trigger(ourEventName, newEvent)\n\n  addHealthBar: ->\n    return unless @thang?.health? and 'health' in (@thang?.hudProperties ? []) and @options.floatingLayer\n    team = @thang?.team or 'neutral'\n    key = \"#{team}-health-bar\"\n\n    unless key in @options.floatingLayer.spriteSheet.getAnimations()\n      healthColor = healthColors[team]\n      bar = createProgressBar(healthColor)\n      @options.floatingLayer.addCustomGraphic(key, bar, bar.bounds)\n\n    hadHealthBar = @healthBar\n    @healthBar = new createjs.Sprite(@options.floatingLayer.spriteSheet)\n    @healthBar.gotoAndStop(key)\n    offset = @getOffset 'aboveHead'\n    @healthBar.scaleX = @healthBar.scaleY = 1 / @options.floatingLayer.resolutionFactor\n    @healthBar.name = 'health bar'\n    @options.floatingLayer.addChild @healthBar\n    @updateHealthBar()\n    @lastHealth = null\n    if not hadHealthBar\n      @listenTo @options.floatingLayer, 'new-spritesheet', @addHealthBar\n\n  getActionProp: (prop, subProp, def=null) ->\n    # Get a property or sub-property from an action, falling back to ThangType\n    for val in [@currentAction?[prop], @thangType.get(prop)]\n      val = val[subProp] if val? and subProp\n      return val if val?\n    def\n\n  getOffset: (prop) ->\n    # Get the proper offset from either the current action or the ThangType\n    def = x: 0, y: {registration: 0, torso: -50, mouth: -60, aboveHead: -100}[prop]\n    pos = @getActionProp 'positions', prop, def\n    pos = x: pos.x, y: pos.y\n    if not @isRaster\n      scale = @getActionProp 'scale', null, 1\n      scale *= @sprite.parent.resolutionFactor if prop is 'registration'\n      pos.x *= scale\n      pos.y *= scale\n    if @thang and prop isnt 'registration'\n      pos.x *= @thang.scaleFactorX ? @thang.scaleFactor ? 1\n      pos.y *= @thang.scaleFactorY ? @thang.scaleFactor ? 1\n    # We might need to do this, but I don't have a good test case yet. TODO: figure out.\n    #if prop isnt @registration\n    #  pos.x *= if @getActionProp 'flipX' then -1 else 1\n    #  pos.y *= if @getActionProp 'flipY' then -1 else 1\n    pos\n\n  createMarks: ->\n    return unless @options.camera\n    if @thang\n      # TODO: Add back ranges\n#      allProps = []\n#      allProps = allProps.concat (@thang.hudProperties ? [])\n#      allProps = allProps.concat (@thang.programmableProperties ? [])\n#      allProps = allProps.concat (@thang.moreProgrammableProperties ? [])\n#\n#      for property in allProps\n#        if m = property.match /.*(Range|Distance|Radius)$/\n#          if @thang[m[0]]? and @thang[m[0]] < 9001\n#            @ranges.push\n#              name: m[0]\n#              radius: @thang[m[0]]\n#\n#      @ranges = _.sortBy @ranges, 'radius'\n#      @ranges.reverse()\n#\n#      @addMark range.name for range in @ranges\n\n      # TODO: add back bounds\n#      @addMark('bounds').toggle true if @thang?.drawsBounds\n      @addMark('shadow').toggle true unless @thangType.get('shadow') is 0\n\n  updateMarks: ->\n    return unless @options.camera\n    @addMark 'repair', null, 'repair' if @thang?.erroredOut\n    @marks.repair?.toggle @thang?.erroredOut\n\n    if @selected\n      @marks[range['name']].toggle true for range in @ranges\n    else\n      @marks[range['name']].toggle false for range in @ranges\n\n    if @isMissile and @thang.action is 'die'\n      @marks.shadow?.hide()\n    mark.update() for name, mark of @marks\n    #@thang.effectNames = ['warcry', 'confuse', 'control', 'curse', 'fear', 'poison', 'paralyze', 'regen', 'sleep', 'slow', 'haste']\n    @updateEffectMarks() if @thang?.effectNames?.length or @previousEffectNames?.length\n\n  updateEffectMarks: ->\n    return if _.isEqual @thang.effectNames, @previousEffectNames\n    return if @stopped\n    for effect in @thang.effectNames\n      mark = @addMark effect, @options.floatingLayer, effect\n      mark.statusEffect = true\n      mark.toggle 'on'\n      mark.show()\n\n    if @previousEffectNames\n      for effect in @previousEffectNames\n        continue if effect in @thang.effectNames\n        mark = @marks[effect]\n        mark.toggle false\n\n    if @thang.effectNames.length > 1 and not @effectInterval\n      @rotateEffect()\n      @effectInterval = setInterval @rotateEffect, 1500\n\n    else if @effectInterval and @thang.effectNames.length <= 1\n      clearInterval @effectInterval\n      @effectInterval = null\n\n    @previousEffectNames = @thang.effectNames\n\n  rotateEffect: =>\n    effects = (m.name for m in _.values(@marks) when m.on and m.statusEffect and m.mark)\n    return unless effects.length\n    effects.sort()\n    @effectIndex ?= 0\n    @effectIndex = (@effectIndex + 1) % effects.length\n    @marks[effect].hide() for effect in effects\n    @marks[effects[@effectIndex]].show()\n\n  setHighlight: (to, delay) ->\n    @addMark 'highlight', @options.floatingLayer, 'highlight' if to\n    @marks.highlight?.highlightDelay = delay\n    @marks.highlight?.toggle to and not @dimmed\n\n  setDimmed: (@dimmed) ->\n    @marks.highlight?.toggle @marks.highlight.on and not @dimmed\n\n  setThang: (@thang) ->\n    @options.thang = @thang\n\n  setDebug: (debug) ->\n    return unless @thang?.collides and @options.camera?\n    @addMark 'debug', @options.floatingLayer if debug\n    if d = @marks.debug\n      d.toggle debug\n      d.updatePosition()\n\n  addLabel: (name, style) ->\n    @labels[name] ?= new Label sprite: @, camera: @options.camera, layer: @options.textLayer, style: style\n    @labels[name]\n\n  addMark: (name, layer, thangType=null) ->\n    @marks[name] ?= new Mark name: name, lank: @, camera: @options.camera, layer: layer ? @options.groundLayer, thangType: thangType\n    @marks[name]\n\n  removeMark: (name) ->\n    @marks[name].destroy()\n    delete @marks[name]\n\n  notifySpeechUpdated: (e) ->\n    e = _.clone(e)\n    e.sprite = @\n    e.blurb ?= '...'\n    e.thang = @thang\n    Backbone.Mediator.publish 'sprite:speech-updated', e\n\n  isTalking: ->\n    Boolean @labels.dialogue?.text or @labels.say?.text\n\n  onDialogue: (e) ->\n    return unless @thang?.id is e.spriteID\n    unless @thang?.id is 'Hero Placeholder'  # Don't show these for heroes, because they aren't actually first-person, just LevelDialogueView narration\n      label = @addLabel 'dialogue', Label.STYLE_DIALOGUE\n      label.setText e.blurb or '...'\n    sound = e.sound ? AudioPlayer.soundForDialogue e.message, @thangType.get 'soundTriggers'\n    @dialogueSoundInstance?.stop()\n    if @dialogueSoundInstance = @playSound sound, false\n      @dialogueSoundInstance.addEventListener 'complete', -> Backbone.Mediator.publish 'sprite:dialogue-sound-completed', {}\n    @notifySpeechUpdated e\n\n  onClearDialogue: (e) ->\n    return unless @labels.dialogue?.text\n    @labels.dialogue?.setText null\n    @dialogueSoundInstance?.stop()\n    @notifySpeechUpdated {}\n\n  onSetLetterbox: (e) ->\n    @letterboxOn = e.on\n\n  setNameLabel: (name) ->\n    label = @addLabel 'name', Label.STYLE_NAME\n    label.setText name\n\n  updateLabels: ->\n    return unless @thang\n    blurb = if @thang.health <= 0 then null else @thang.sayMessage  # Dead men tell no tales\n    blurb = null if blurb in ['For Thoktar!', 'Bones!', 'Behead!', 'Destroy!', 'Die, humans!']  # Let's just hear, not see, these ones.\n    if /Hero Placeholder/.test(@thang.id)\n      labelStyle = Label.STYLE_DIALOGUE\n    else\n      labelStyle = @thang.labelStyle ? Label.STYLE_SAY\n    @addLabel 'say', labelStyle if blurb\n    if @labels.say?.setText blurb\n      @notifySpeechUpdated blurb: blurb\n\n    if @thang?.variableNames?\n      ls = @addLabel 'variableNames', Label.STYLE_VAR\n      ls.setText @thang?.variableNames\n    else if @labels.variableNames\n      @labels.variableNames.destroy()\n      delete @labels.variableNames\n\n    label.update() for name, label of @labels\n\n  updateGold: ->\n    # TODO: eventually this should be moved into some sort of team-based update\n    # rather than an each-thang-that-shows-gold-per-team thing.\n    return unless @thang\n    return if @thang.gold is @lastGold\n    gold = Math.floor @thang.gold ? 0\n    if @thang.world.age is 0\n      gold = @thang.world.initialTeamGold[@thang.team].gold\n    return if gold is @lastGold\n    @lastGold = gold\n    Backbone.Mediator.publish 'surface:gold-changed', {team: @thang.team, gold: gold, goldEarned: Math.floor(@thang.goldEarned ? 0)}\n\n  shouldMuteMessage: (m) ->\n    if me.getAnnouncesActionAudioGroup() in ['no-audio', 'just-take-damage']\n      return true if m in ['moveRight', 'moveUp', 'moveDown', 'moveLeft']\n      return true if /^attack /.test m\n      return true if /^Repeating loop/.test m\n      return true if /^findNearestEnemy/.test m\n\n    return false if m in ['moveRight', 'moveUp', 'moveDown', 'moveLeft']\n    @previouslySaidMessages ?= {}\n    t0 = @previouslySaidMessages[m] ? 0\n    t1 = new Date()\n    @previouslySaidMessages[m] = t1\n    return true if t1 - t0 < 5 * 1000\n    false\n\n  playSounds: (withDelay=true, volume=1.0) ->\n    for event in @thang.currentEvents ? []\n      if event is 'take-damage' and me.getAnnouncesActionAudioGroup() in ['no-audio', 'without-take-damage']\n        null  # Skip playing it\n      else\n        @playSound event, withDelay, volume\n      if event is 'pay-bounty-gold' and @thang.bountyGold > 25 and @thang.team isnt me.team\n        AudioPlayer.playInterfaceSound 'coin_1', 0.25\n    if @thang.actionActivated and (action = @thang.getActionName()) isnt 'say'\n      @playSound action, withDelay, volume\n    if @thang.sayMessage and withDelay and not @thang.silent and not @shouldMuteMessage @thang.sayMessage  # don't play sayMessages while scrubbing, annoying\n      offsetFrames = Math.abs(@thang.sayStartTime - @thang.world.age) / @thang.world.dt\n      if offsetFrames <= 2  # or (not withDelay and offsetFrames < 30)\n        sound = AudioPlayer.soundForDialogue @thang.sayMessage, @thangType.get 'soundTriggers'\n        @playSound sound, false, volume\n\n  playSound: (sound, withDelay=true, volume=1.0) ->\n    if _.isString sound\n      sound = @thangType.get('soundTriggers')?[sound]\n    if _.isArray sound\n      sound = sound[Math.floor Math.random() * sound.length]\n    return null unless sound\n    delay = if withDelay and sound.delay then 1000 * sound.delay / createjs.Ticker.getFPS() else 0\n    name = AudioPlayer.nameForSoundReference sound\n    AudioPlayer.preloadSoundReference sound\n    instance = AudioPlayer.playSound name, volume, delay, @getWorldPosition()\n    #console.log @thang?.id, 'played sound', name, 'with delay', delay, 'volume', volume, 'and got sound instance', instance\n    instance\n\n  onMove: (e) ->\n    return unless e.spriteID is @thang?.id\n    pos = e.pos\n    if _.isArray pos\n      pos = new Vector pos...\n    else if _.isString pos\n      return console.warn 'Couldn\\'t find target sprite', pos, 'from', @options.sprites unless pos of @options.sprites\n      target = @options.sprites[pos].thang\n      heading = Vector.subtract(target.pos, @thang.pos).normalize()\n      distance = @thang.pos.distance target.pos\n      offset = Math.max(target.width, target.height, 2) / 2 + 3\n      pos = Vector.add(@thang.pos, heading.multiply(distance - offset))\n    Backbone.Mediator.publish 'level:sprite-clear-dialogue', {}\n    @onClearDialogue()\n    args = [pos]\n    args.push(e.duration) if e.duration?\n    @move(args...)\n\n  move: (pos, duration=2000, endAnimation='idle') =>\n    @updateShadow()\n    if not duration\n      createjs.Tween.removeTweens(@shadow.pos) if @lastTween\n      @lastTween = null\n      z = @shadow.pos.z\n      @shadow.pos = pos\n      @shadow.pos.z = z\n      @sprite.gotoAndPlay?(endAnimation)\n      return\n\n    @shadow.action = 'move'\n    @shadow.actionActivated = true\n    @pointToward(pos)\n    @possessed = true\n    @update true\n\n    ease = createjs.Ease.getPowInOut(2.2)\n    if @lastTween\n      ease = createjs.Ease.getPowOut(1.2)\n      createjs.Tween.removeTweens(@shadow.pos)\n\n    endFunc = =>\n      @lastTween = null\n      @sprite.gotoAndPlay(endAnimation) unless @stillLoading\n      @shadow.action = 'idle'\n      @update true\n      @possessed = false\n\n    @lastTween = createjs.Tween\n      .get(@shadow.pos)\n      .to({x: pos.x, y: pos.y}, duration, ease)\n      .call(endFunc)\n\n  pointToward: (pos) ->\n    @shadow.rotation = Math.atan2(pos.y - @shadow.pos.y, pos.x - @shadow.pos.x)\n    if (@shadow.rotation * 180 / Math.PI) % 90 is 0\n      @shadow.rotation += 0.01\n\n  updateShadow: ->\n    @shadow = {} if not @shadow\n    @shadow.pos = @thang.pos\n    @shadow.rotation = @thang.rotation\n    @shadow.action = @thang.action\n    @shadow.actionActivated = @thang.actionActivated\n\n  updateHealthBar: ->\n    return unless @healthBar\n    bounds = @healthBar.getBounds()\n    offset = @getOffset 'aboveHead'\n    @healthBar.x = @sprite.x - (-offset.x + bounds.width / 2 / @options.floatingLayer.resolutionFactor)\n    @healthBar.y = @sprite.y - (-offset.y + bounds.height / 2 / @options.floatingLayer.resolutionFactor)\n\n  destroy: ->\n    mark.destroy() for name, mark of @marks\n    label.destroy() for name, label of @labels\n    p.removeChild @healthBar if p = @healthBar?.parent\n    @sprite?.off 'animationend', @playNextAction\n    clearInterval @effectInterval if @effectInterval\n    @dialogueSoundInstance?.removeAllEventListeners()\n    super()\n","CocoClass = require 'core/CocoClass'\n{me} = require 'core/auth'\nLayerAdapter = require './LayerAdapter'\nFlagLank = require 'lib/surface/FlagLank'\nLank = require 'lib/surface/Lank'\nMark = require './Mark'\nGrid = require 'lib/world/Grid'\nutils = require 'core/utils'\n\nmodule.exports = class LankBoss extends CocoClass\n  subscriptions:\n    'level:set-debug': 'onSetDebug'\n    'sprite:highlight-sprites': 'onHighlightSprites'\n    'surface:stage-mouse-down': 'onStageMouseDown'\n    'level:select-sprite': 'onSelectSprite'\n    'level:suppress-selection-sounds': 'onSuppressSelectionSounds'\n    'level:lock-select': 'onSetLockSelect'\n    'level:restarted': 'onLevelRestarted'\n    'god:new-world-created': 'onNewWorld'\n    'god:streaming-world-updated': 'onNewWorld'\n    'camera:dragged': 'onCameraDragged'\n    'sprite:loaded': -> @update(true)\n    'level:flag-color-selected': 'onFlagColorSelected'\n    'level:flag-updated': 'onFlagUpdated'\n    'surface:flag-appeared': 'onFlagAppeared'\n    'surface:remove-selected-flag': 'onRemoveSelectedFlag'\n\n  constructor: (@options={}) ->\n    super()\n    @handleEvents = @options.handleEvents\n    @gameUIState = @options.gameUIState\n    @dragged = 0\n    @camera = @options.camera\n    @webGLStage = @options.webGLStage\n    @surfaceTextLayer = @options.surfaceTextLayer\n    @world = @options.world\n    @options.thangTypes ?= []\n    @lanks = {}\n    @lankArray = []  # Mirror @lanks, but faster for when we just need to iterate\n    @createLayers()\n    @pendingFlags = []\n    if not @handleEvents\n      @listenTo @gameUIState, 'change:selected', @onChangeSelected\n\n  destroy: ->\n    @removeLank lank for thangID, lank of @lanks\n    @targetMark?.destroy()\n    @selectionMark?.destroy()\n    lankLayer.destroy() for lankLayer in _.values @layerAdapters\n    super()\n\n  toString: -> \"<LankBoss: #{@lankArray.length} lanks>\"\n\n  thangTypeFor: (type) ->\n    _.find @options.thangTypes, (m) -> m.get('original') is type or m.get('name') is type\n\n  createLayers: ->\n    @layerAdapters = {}\n    for [name, priority] in [\n      ['Land', -40]\n      ['Ground', -30]\n      ['Obstacle', -20]\n      ['Path', -10]\n      ['Default', 0]\n      ['Floating', 10]\n    ]\n      @layerAdapters[name] = new LayerAdapter name: name, webGL: true, layerPriority: priority, transform: LayerAdapter.TRANSFORM_SURFACE, camera: @camera\n    @webGLStage.addChild (lankLayer.container for lankLayer in _.values(@layerAdapters))...\n\n  layerForChild: (child, lank) ->\n    unless child.layerPriority?\n      if thang = lank?.thang\n        child.layerPriority = thang.layerPriority\n        child.layerPriority ?= 0 if thang.isSelectable\n        child.layerPriority ?= -40 if thang.isLand\n    child.layerPriority ?= 0\n    return @layerAdapters['Default'] unless child.layerPriority\n    layer = _.findLast @layerAdapters, (layer, name) ->\n      layer.layerPriority <= child.layerPriority\n    layer ?= @layerAdapters['Land'] if child.layerPriority < -40\n    layer ? @layerAdapters['Default']\n\n  addLank: (lank, id=null, layer=null) ->\n    id ?= lank.thang.id\n    console.error 'Lank collision! Already have:', id if @lanks[id]\n    @lanks[id] = lank\n    @lankArray.push lank\n    layer ?= @layerAdapters['Obstacle'] if lank.thang?.spriteName.search(/(dungeon|indoor|ice|classroom|vr).wall/i) isnt -1\n    layer ?= @layerForChild lank.sprite, lank\n    layer.addLank lank\n    layer.updateLayerOrder()\n    lank\n\n  createMarks: ->\n    @targetMark = new Mark name: 'target', camera: @camera, layer: @layerAdapters['Ground'], thangType: 'target'\n    @selectionMark = new Mark name: 'selection', camera: @camera, layer: @layerAdapters['Ground'], thangType: 'selection'\n\n  createLankOptions: (options) ->\n    _.extend options, {\n      @camera\n      resolutionFactor: SPRITE_RESOLUTION_FACTOR\n      groundLayer: @layerAdapters['Ground']\n      textLayer: @surfaceTextLayer\n      floatingLayer: @layerAdapters['Floating']\n      showInvisible: @options.showInvisible\n      @gameUIState\n      @handleEvents\n    }\n\n  onSetDebug: (e) ->\n    return if e.debug is @debug\n    @debug = e.debug\n    lank.setDebug @debug for lank in @lankArray\n\n  onHighlightSprites: (e) ->\n    highlightedIDs = e.thangIDs or []\n    for thangID, lank of @lanks\n      lank.setHighlight? thangID in highlightedIDs, e.delay\n\n  addThangToLanks: (thang, layer=null) ->\n    return console.warn 'Tried to add Thang to the surface it already has:', thang.id if @lanks[thang.id]\n    thangType = _.find @options.thangTypes, (m) ->\n      return false unless m.get('actions') or m.get('raster')\n      return m.get('name') is thang.spriteName\n    thangType ?= _.find @options.thangTypes, (m) -> return m.get('name') is thang.spriteName\n    return console.error \"Couldn't find ThangType for\", thang unless thangType\n\n    options = @createLankOptions thang: thang\n    options.resolutionFactor = if thangType.get('kind') is 'Floor' then 2 else SPRITE_RESOLUTION_FACTOR\n    if @options.playerNames and /Hero Placeholder/.test thang.id\n      options.playerName = @options.playerNames[thang.team]\n    lank = new Lank thangType, options\n    @listenTo lank, 'sprite:mouse-up', @onLankMouseUp\n    @addLank lank, null, layer\n    lank.setDebug @debug\n    lank\n\n  removeLank: (lank) ->\n    lank.layer.removeLank(lank)\n    thang = lank.thang\n    delete @lanks[lank.thang.id]\n    @lankArray.splice @lankArray.indexOf(lank), 1\n    @stopListening lank\n    lank.destroy()\n    lank.thang = thang  # Keep around so that we know which thang the destroyed thang was for\n\n  updateSounds: ->\n    lank.playSounds() for lank in @lankArray  # hmm; doesn't work for lanks which we didn't add yet in adjustLankExistence\n\n  update: (frameChanged) ->\n    @adjustLankExistence() if frameChanged\n    lank.update frameChanged for lank in @lankArray\n    @updateSelection()\n    @layerAdapters['Default'].updateLayerOrder()\n    @cacheObstacles()\n\n  adjustLankExistence: ->\n    # Add anything new, remove anything old, update everything current\n    updatedObstacles = []\n    itemsJustEquipped = []\n    for thang in @world.thangs when thang.exists and thang.pos\n      itemsJustEquipped = itemsJustEquipped.concat @equipNewItems thang if thang.equip\n      if lank = @lanks[thang.id]\n        lank.setThang thang  # make sure Lank has latest Thang\n      else\n        lank = @addThangToLanks(thang)\n        Backbone.Mediator.publish 'surface:new-thang-added', thang: thang, sprite: lank\n        updatedObstacles.push lank if lank.sprite.parent is @layerAdapters['Obstacle']\n        lank.playSounds()\n    item.modifyStats() for item in itemsJustEquipped\n    for thangID, lank of @lanks\n      missing = not (lank.notOfThisWorld or @world.thangMap[thangID]?.exists)\n      isObstacle = lank.sprite.parent is @layerAdapters['Obstacle']\n      updatedObstacles.push lank if isObstacle and (missing or lank.hasMoved)\n      lank.hasMoved = false\n      @removeLank lank if missing\n    @cacheObstacles updatedObstacles if updatedObstacles.length and @cachedObstacles\n\n    # mainly for handling selecting thangs from session when the thang is not always in existence\n    if @willSelectThang and @lanks[@willSelectThang[0]]\n      @selectThang @willSelectThang...\n\n    @updateScreenReader()\n\n  updateScreenReader: ->\n    # Testing ASCII map for screen readers\n    return unless me.get('name') is 'zersiax'  #in ['zersiax', 'Nick']\n    ascii = $('#ascii-surface')\n    thangs = (lank.thang for lank in @lankArray)\n    grid = new Grid thangs, @world.width, @world.height, 0, 0, 0, true\n    utils.replaceText ascii, grid.toString true\n    ascii.css 'transform', 'initial'\n    fullWidth = ascii.innerWidth()\n    fullHeight = ascii.innerHeight()\n    availableWidth = ascii.parent().innerWidth()\n    availableHeight = ascii.parent().innerHeight()\n    scale = availableWidth / fullWidth\n    scale = Math.min scale, availableHeight / fullHeight\n    ascii.css 'transform', \"scale(#{scale})\"\n\n  equipNewItems: (thang) ->\n    itemsJustEquipped = []\n    if thang.equip and not thang.equipped\n      thang.equip()  # Pretty hacky, but needed since initialize may not be called if we're not running Systems.\n      itemsJustEquipped.push thang\n    if thang.inventoryIDs\n      # Even hackier: these items were only created/equipped during simulation, so we reequip here.\n      for slot, itemID of thang.inventoryIDs\n        item = @world.getThangByID itemID\n        unless item.equipped\n          console.log thang.id, 'equipping', item, 'in', thang.slot, 'Surface-side, but it cannot equip?' unless item.equip\n          item.equip?()\n          itemsJustEquipped.push item if item.equip\n    return itemsJustEquipped\n\n  cacheObstacles: (updatedObstacles=null) ->\n    return if @cachedObstacles and not updatedObstacles\n    lankArray = @lankArray\n    wallLanks = (lank for lank in lankArray when lank.thangType?.get('name').search(/(dungeon|indoor|ice|classroom|vr).wall/i) isnt -1)\n    return if _.any (s.stillLoading for s in wallLanks)\n    walls = (lank.thang for lank in wallLanks)\n    @world.calculateBounds()\n    wallGrid = new Grid walls, @world.width, @world.height\n    if updatedObstacles\n      possiblyUpdatedWallLanks = (lank for lank in wallLanks when _.find updatedObstacles, (w2) -> lank is w2 or (Math.abs(lank.thang.pos.x - w2.thang.pos.x) + Math.abs(lank.thang.pos.y - w2.thang.pos.y)) <= 16)\n    else\n      possiblyUpdatedWallLanks = wallLanks\n#    console.log 'updating up to', possiblyUpdatedWallLanks.length, 'of', wallLanks.length, 'wall lanks from updatedObstacles', updatedObstacles\n    for wallLank in possiblyUpdatedWallLanks\n      wallLank.queueAction 'idle' if not wallLank.currentRootAction\n      wallLank.lockAction(false)\n      wallLank.updateActionDirection wallGrid\n      wallLank.lockAction(true)\n      wallLank.updateScale()\n      wallLank.updatePosition()\n#    console.log wallGrid.toString()\n    @cachedObstacles = true\n\n  lankFor: (thangID) -> @lanks[thangID]\n\n  onNewWorld: (e) ->\n    @world = @options.world = e.world\n    # Clear obstacle cache for this level, since we are spawning walls dynamically\n    @cachedObstacles = false if e.finished and /kithgard-mastery/.test window.location.href\n\n  play: ->\n    lank.play() for lank in @lankArray\n    @selectionMark?.play()\n    @targetMark?.play()\n\n  stop: ->\n    lank.stop() for lank in @lankArray\n    @selectionMark?.stop()\n    @targetMark?.stop()\n\n  # Selection\n\n  onSuppressSelectionSounds: (e) -> @suppressSelectionSounds = e.suppress\n  onSetLockSelect: (e) -> @selectLocked = e.lock\n  onLevelRestarted: (e) ->\n    @selectLocked = false\n    @selectLank e, null\n\n  onSelectSprite: (e) ->\n    @selectThang e.thangID, e.spellName\n\n  onCameraDragged: ->\n    @dragged += 1\n\n  onLankMouseUp: (e) ->\n    return unless @handleEvents\n    return if key.shift #and @options.choosing\n    return @dragged = 0 if @dragged > 3\n    @dragged = 0\n    lank = if e.sprite?.thang?.isSelectable then e.sprite else null\n    return if @flagCursorLank and lank?.thangType.get('name') is 'Flag'\n    @selectLank e, lank\n\n  onStageMouseDown: (e) ->\n    return unless @handleEvents\n    return if key.shift #and @options.choosing\n    @selectLank e if e.onBackground\n\n  onChangeSelected: (gameUIState, selected) ->\n    oldLanks = (s.sprite for s in gameUIState.previousAttributes().selected or [])\n    newLanks = (s.sprite for s in selected or [])\n    addedLanks = _.difference(newLanks, oldLanks)\n    removedLanks = _.difference(oldLanks, newLanks)\n\n    for lank in addedLanks\n      layer = if lank.sprite.parent isnt @layerAdapters.Default.container then @layerAdapters.Default else @layerAdapters.Ground\n      mark = new Mark name: 'selection', camera: @camera, layer: layer, thangType: 'selection'\n      mark.toggle true\n      mark.setLank(lank)\n      mark.update()\n      lank.marks.selection = mark # TODO: Figure out how to non-hackily assign lank this mark\n      \n    for lank in removedLanks\n      lank.removeMark?('selection')\n\n  selectThang: (thangID, spellName=null, treemaThangSelected = null) ->\n    return @willSelectThang = [thangID, spellName] unless @lanks[thangID]\n    @selectLank null, @lanks[thangID], spellName, treemaThangSelected\n\n  selectLank: (e, lank=null, spellName=null, treemaThangSelected = null) ->\n    return if e and (@disabled or @selectLocked)  # Ignore clicks for selection/panning/wizard movement while disabled or select is locked\n    worldPos = lank?.thang?.pos\n    worldPos ?= @camera.screenToWorld {x: e.originalEvent.rawX, y: e.originalEvent.rawY} if e?.originalEvent\n    if @handleEvents\n      if (not @reallyStopMoving) and worldPos and (@options.navigateToSelection or not lank or treemaThangSelected) and e?.originalEvent?.nativeEvent?.which isnt 3\n        @camera.zoomTo(lank?.sprite or @camera.worldToSurface(worldPos), @camera.zoom, 1000, true)\n    lank = null if @options.choosing  # Don't select lanks while choosing\n    if lank isnt @selectedLank\n      @selectedLank?.selected = false\n      lank?.selected = true\n      @selectedLank = lank\n    alive = lank and not (lank.thang.health < 0)\n\n    Backbone.Mediator.publish 'surface:sprite-selected',\n      thang: if lank then lank.thang else null\n      sprite: lank\n      spellName: spellName ? e?.spellName\n      originalEvent: e\n      worldPos: worldPos\n\n    @willSelectThang = null if lank  # Now that we've done a real selection, don't reselect some other Thang later.\n\n    if alive and not @suppressSelectionSounds\n      instance = lank.playSound 'selected'\n      if instance?.playState is 'playSucceeded'\n        Backbone.Mediator.publish 'sprite:thang-began-talking', thang: lank?.thang\n        instance.addEventListener 'complete', ->\n          Backbone.Mediator.publish 'sprite:thang-finished-talking', thang: lank?.thang\n\n  onFlagColorSelected: (e) ->\n    @removeLank @flagCursorLank if @flagCursorLank\n    @flagCursorLank = null\n    for flagLank in @lankArray when flagLank.thangType.get('name') is 'Flag'\n      flagLank.sprite.cursor = if e.color then 'crosshair' else 'pointer'\n    return unless e.color\n    @flagCursorLank = new FlagLank @thangTypeFor('Flag'), @createLankOptions(thangID: 'Flag Cursor', color: e.color, team: me.team, isCursor: true, pos: e.pos)\n    @addLank @flagCursorLank, @flagCursorLank.thang.id, @layerAdapters['Floating']\n\n  onFlagUpdated: (e) ->\n    return unless e.active\n    pendingFlag = new FlagLank @thangTypeFor('Flag'), @createLankOptions(thangID: 'Pending Flag ' + Math.random(), color: e.color, team: e.team, isCursor: false, pos: e.pos)\n    @addLank pendingFlag, pendingFlag.thang.id, @layerAdapters['Floating']\n    @pendingFlags.push pendingFlag\n\n  onFlagAppeared: (e) ->\n    # Remove the pending flag that matches this one's color/team/position, and any color/team matches placed earlier.\n    t1 = e.sprite.thang\n    pending = (@pendingFlags ? []).slice()\n    foundExactMatch = false\n    for i in [pending.length - 1 .. 0] by -1\n      pendingFlag = pending[i]\n      t2 = pendingFlag.thang\n      matchedType = t1.color is t2.color and t1.team is t2.team\n      matched = matchedType and (foundExactMatch or Math.abs(t1.pos.x - t2.pos.x) < 0.00001 and Math.abs(t1.pos.y - t2.pos.y) < 0.00001)\n      if matched\n        foundExactMatch = true\n        @pendingFlags.splice(i, 1)\n        @removeLank pendingFlag\n    e.sprite.sprite?.cursor = if @flagCursorLank then 'crosshair' else 'pointer'\n    null\n\n  onRemoveSelectedFlag: (e) ->\n    # Remove the selected lank if it's a flag, or any flag of the given color if a color is given.\n    flagLank = _.find [@selectedLank].concat(@lankArray), (lank) ->\n      lank and lank.thangType.get('name') is 'Flag' and lank.thang.team is me.team and (lank.thang.color is e.color or not e.color) and not lank.notOfThisWorld\n    return unless flagLank\n    Backbone.Mediator.publish 'surface:remove-flag', color: flagLank.thang.color\n\n  # Marks\n\n  updateSelection: ->\n    if @selectedLank?.thang and (not @selectedLank.thang.exists or not @world.getThangByID @selectedLank.thang.id)\n      thangID = @selectedLank.thang.id\n      @selectedLank = null  # Don't actually trigger deselection, but remove the selected lank.\n      @selectionMark?.toggle false\n      @willSelectThang = [thangID, null]\n    @updateTarget()\n    return unless @selectionMark\n    @selectedLank = null if @selectedLank and (@selectedLank.destroyed or not @selectedLank.thang)\n    # The selection mark should be on the ground layer, unless we're not a normal lank (like a wall), in which case we'll place it higher so we can see it.\n    if @selectedLank and @selectedLank.sprite.parent isnt @layerAdapters.Default.container\n      @selectionMark.setLayer @layerAdapters.Default\n    else if @selectedLank\n      @selectionMark.setLayer @layerAdapters.Ground\n    @selectionMark.toggle @selectedLank?\n    @selectionMark.setLank @selectedLank\n    @selectionMark.update()\n\n  updateTarget: ->\n    return unless @targetMark\n    thang = @selectedLank?.thang\n    target = thang?.target\n    targetPos = thang?.targetPos\n    targetPos = null if targetPos?.isZero?()  # Null targetPos get serialized as (0, 0, 0)\n    @targetMark.setLank if target then @lanks[target.id] else null\n    @targetMark.toggle @targetMark.lank or targetPos\n    @targetMark.update if targetPos then @camera.worldToSurface targetPos else null\n","###\n  * SpriteStage (WebGL Canvas)\n  ** Land texture\n  ** Ground-based selection/target marks, range radii\n  ** Walls/obstacles\n  ** Paths and target pieces (and ghosts?)\n  ** Normal Thangs, bots, wizards (z-indexing based on World-determined sprite.thang.pos.z/y, mainly, instead of sprite-map-determined sprite.z, which we rename to... something)\n  ** Above-thang marks (blood, highlight) and health bars\n\n  * Stage (Regular Canvas)\n  ** Camera border\n  ** surfaceTextLayer (speech, names)\n  ** screenLayer\n  *** Letterbox\n  **** Letterbox top and bottom\n  *** FPS display, maybe grid axis labels, coordinate hover\n\n  ** Grid lines--somewhere--we will figure it out, do not really need it at first\n###\n\nSpriteBuilder = require 'lib/sprites/SpriteBuilder'\nCocoClass = require 'core/CocoClass'\nSegmentedSprite = require './SegmentedSprite'\nSingularSprite = require './SingularSprite'\nThangType = require 'models/ThangType'\n\nNEVER_RENDER_ANYTHING = false # set to true to test placeholders\n\nmodule.exports = LayerAdapter = class LayerAdapter extends CocoClass\n\n  # Intermediary between a Surface Stage and a top-level static normal Container or hot-swapped WebGL SpriteContainer.\n  # It handles zooming in different ways and, if webGL, creating and assigning spriteSheets.\n\n  @TRANSFORM_SURFACE: 'surface'  # Layer moves/scales/zooms with the Surface of the World\n  @TRANSFORM_SURFACE_TEXT: 'surface_text'  # Layer moves with the Surface but is size-independent\n  @TRANSFORM_SCREEN: 'screen'  # Layer stays fixed to the screen\n\n  # WebGL properties\n  actionRenderState: null\n  needToRerender: false\n  toRenderBundles: null\n  willRender: false\n  buildAutomatically: true\n  buildAsync: true\n  resolutionFactor: SPRITE_RESOLUTION_FACTOR\n  numThingsLoading: 0\n  lanks: null\n  spriteSheet: null\n  container: null\n  customGraphics: null\n\n  subscriptions:\n    'camera:zoom-updated': 'onZoomUpdated'\n\n  constructor: (options) ->\n    super()\n    options ?= {}\n    @name = options.name ? 'Unnamed'\n    @defaultSpriteType = if @name is 'Default' then 'segmented' else 'singular'\n    @customGraphics = {}\n    @layerPriority = options.layerPriority ? 0\n    @transformStyle = options.transform ? LayerAdapter.TRANSFORM_SURFACE\n    @camera = options.camera\n    @updateLayerOrder = _.throttle @updateLayerOrder, 1000 / 30  # Don't call multiple times in one frame; 30 FPS is probably good enough\n\n    @webGL = !!options.webGL\n    if @webGL\n      @initializing = true\n      @spriteSheet = @_renderNewSpriteSheet(false) # builds an empty spritesheet\n      @container = new createjs.SpriteContainer(@spriteSheet)\n      @actionRenderState = {}\n      @toRenderBundles = []\n      @lanks = []\n      @initializing = false\n\n    else\n      @container = new createjs.Container()\n\n  toString: -> \"<Layer #{@layerPriority}: #{@name}>\"\n\n  #- Layer ordering\n\n  updateLayerOrder: ->\n    return if @destroyed\n    @container.sortChildren @layerOrderComparator\n\n  layerOrderComparator: (a, b) ->\n    # Optimize\n    alp = a.layerPriority or 0\n    blp = b.layerPriority or 0\n    return alp - blp if alp isnt blp\n    # TODO: remove this z stuff\n    az = a.z or 1000\n    bz = b.z or 1000\n    if aLank = a.lank\n      if aThang = aLank.thang\n        aPos = aThang.pos\n        if aThang.health < 0 and aThang.pos.z <= aThang.depth / 2\n          # Nice for not being knee deep in the dead, just not nice for ogres flying behind trees when exploded\n          --az\n    if bLank = b.lank\n      if bThang = bLank.thang\n        bPos = bThang.pos\n        if bThang.health < 0 and bThang.pos.z <= bThang.depth / 2\n          --bz\n    if az is bz\n      return 0 unless aPos and bPos\n      return (bPos.y - aPos.y) or (bPos.x - aPos.x)\n    return az - bz\n\n  #- Zoom updating\n\n  onZoomUpdated: (e) ->\n    return unless e.camera is @camera\n    if @transformStyle in [LayerAdapter.TRANSFORM_SURFACE, LayerAdapter.TRANSFORM_SURFACE_TEXT]\n      change = @container.scaleX / e.zoom\n      @container.scaleX = @container.scaleY = e.zoom\n      if @webGL\n        @container.scaleX *= @camera.canvasScaleFactorX\n        @container.scaleY *= @camera.canvasScaleFactorY\n      @container.regX = e.surfaceViewport.x\n      @container.regY = e.surfaceViewport.y\n      if @transformStyle is LayerAdapter.TRANSFORM_SURFACE_TEXT\n        for child in @container.children\n          continue if child.skipScaling\n          child.scaleX *= change\n          child.scaleY *= change\n\n  #- Container-like child functions\n\n  addChild: (children...) ->\n    @container.addChild children...\n    if @transformStyle is LayerAdapter.TRANSFORM_SURFACE_TEXT\n      for child in children\n        continue if child.skipScaling\n        child.scaleX /= @container.scaleX\n        child.scaleY /= @container.scaleY\n\n  removeChild: (children...) ->\n    @container.removeChild children...\n    # TODO: Do we actually need to scale children that were removed?\n    if @transformStyle is LayerAdapter.TRANSFORM_SURFACE_TEXT\n      for child in children\n        child.scaleX *= @container.scaleX\n        child.scaleY *= @container.scaleY\n\n  #- Adding, removing children for WebGL layers.\n\n  addLank: (lank) ->\n    lank.options.resolutionFactor = @resolutionFactor\n    lank.layer = @\n    @listenTo(lank, 'action-needs-render', @onActionNeedsRender)\n    @lanks.push lank\n    lank.thangType.initPrerenderedSpriteSheets() unless currentView.getQueryVariable 'jitSpritesheets'\n    prerenderedSpriteSheet = lank.thangType.getPrerenderedSpriteSheet(lank.options.colorConfig, @defaultSpriteType)\n    prerenderedSpriteSheet?.markToLoad()\n    @loadThangType(lank.thangType)\n    @addDefaultActionsToRender(lank)\n    @setSpriteToLank(lank)\n    @updateLayerOrder()\n    lank.addHealthBar()\n\n  removeLank: (lank) ->\n    @stopListening(lank)\n    lank.layer = null\n    @container.removeChild lank.sprite\n    @lanks = _.without @lanks, lank\n\n  #- Loading network resources dynamically\n\n  loadThangType: (thangType) ->\n    if not thangType.isFullyLoaded()\n      thangType.setProjection null\n      thangType.fetch() unless thangType.loading\n      @numThingsLoading++\n      @listenToOnce(thangType, 'sync', @somethingLoaded)\n    else if thangType.get('raster') and not thangType.loadedRaster\n      thangType.loadRasterImage()\n      @listenToOnce(thangType, 'raster-image-loaded', @somethingLoaded)\n      @numThingsLoading++\n    else if prerenderedSpriteSheet = thangType.getPrerenderedSpriteSheetToLoad()\n      startedLoading = prerenderedSpriteSheet.loadImage()\n      return if not startedLoading\n      @listenToOnce(prerenderedSpriteSheet, 'image-loaded', -> @somethingLoaded(thangType))\n      @numThingsLoading++\n\n  somethingLoaded: (thangType) ->\n    @numThingsLoading--\n    @loadThangType(thangType) # might need to load the raster image object\n    for lank in @lanks\n      if lank.thangType is thangType\n        @addDefaultActionsToRender(lank)\n    @renderNewSpriteSheet()\n\n  #- Adding to the list of things we need to render\n\n  onActionNeedsRender: (lank, action) ->\n    @upsertActionToRender(lank.thangType, action.name, lank.options.colorConfig)\n\n  addDefaultActionsToRender: (lank) ->\n    needToRender = false\n    if lank.thangType.get('raster')\n      @upsertActionToRender(lank.thangType)\n    else\n      for action in _.values(lank.thangType.getActions())\n        continue unless _.any ThangType.defaultActions, (prefix) -> _.string.startsWith(action.name, prefix)\n        @upsertActionToRender(lank.thangType, action.name, lank.options.colorConfig)\n\n  upsertActionToRender: (thangType, actionName, colorConfig) ->\n    groupKey = @renderGroupingKey(thangType, actionName, colorConfig)\n    return false if @actionRenderState[groupKey] isnt undefined\n    @actionRenderState[groupKey] = 'need-to-render'\n    @toRenderBundles.push({thangType: thangType, actionName: actionName, colorConfig: colorConfig})\n    return true if @willRender or not @buildAutomatically\n    @willRender = _.defer => @renderNewSpriteSheet()\n    return true\n\n  addCustomGraphic: (key, graphic, bounds) ->\n    return false if @customGraphics[key]\n    @customGraphics[key] = { graphic: graphic, bounds: new createjs.Rectangle(bounds...) }\n    return true if @willRender or not @buildAutomatically\n    @_renderNewSpriteSheet(false)\n\n  #- Rendering sprite sheets\n\n  renderNewSpriteSheet: ->\n    @willRender = false\n    return if @numThingsLoading\n    @_renderNewSpriteSheet()\n\n  _renderNewSpriteSheet: (async) ->\n    @asyncBuilder.stopAsync() if @asyncBuilder\n    @asyncBuilder = null\n\n    async ?= @buildAsync\n    builder = new createjs.SpriteSheetBuilder()\n    groups = _.groupBy(@toRenderBundles, ((bundle) -> @renderGroupingKey(bundle.thangType, '', bundle.colorConfig)), @)\n\n    # The first frame is always the 'loading', ie placeholder, image.\n    placeholder = @createPlaceholder()\n    dimension = @resolutionFactor * SPRITE_PLACEHOLDER_WIDTH\n    placeholder.setBounds(0, 0, dimension, dimension)\n    builder.addFrame(placeholder)\n\n    # Add custom graphics\n    extantGraphics = if @spriteSheet?.resolutionFactor is @resolutionFactor then @spriteSheet.getAnimations() else []\n    for key, graphic of @customGraphics\n      if key in extantGraphics\n        graphic = new createjs.Sprite(@spriteSheet)\n        graphic.gotoAndStop(key)\n        frame = builder.addFrame(graphic)\n      else\n        frame = builder.addFrame(graphic.graphic, graphic.bounds, @resolutionFactor)\n      builder.addAnimation(key, [frame], false)\n\n    # Render ThangTypes\n    groups = {} if NEVER_RENDER_ANYTHING\n    for bundleGrouping in _.values(groups)\n      thangType = bundleGrouping[0].thangType\n      colorConfig = bundleGrouping[0].colorConfig\n      actionNames = (bundle.actionName for bundle in bundleGrouping)\n      args = [thangType, colorConfig, actionNames, builder]\n      if thangType.get('raw') or thangType.get('prerenderedSpriteSheetData')\n        if (thangType.get('spriteType') or @defaultSpriteType) is 'segmented'\n          @renderSegmentedThangType(args...)\n        else\n          @renderSingularThangType(args...)\n      else\n        @renderRasterThangType(thangType, builder)\n\n    if async\n      try\n        builder.buildAsync()\n      catch e\n        @resolutionFactor *= 0.9\n        #console.log \"  Rerendering sprite sheet didn't fit, going down to resolutionFactor\", @resolutionFactor, \"async\", async\n        return @_renderNewSpriteSheet(async)\n      builder.on 'complete', @onBuildSpriteSheetComplete, @, true, builder\n      @asyncBuilder = builder\n    else\n      sheet = builder.build()\n      @onBuildSpriteSheetComplete({async:async}, builder)\n      return sheet\n\n  onBuildSpriteSheetComplete: (e, builder) ->\n    return if @initializing or @destroyed\n    @asyncBuilder = null\n\n    if builder.spriteSheet._images.length > 1\n      total = 0\n      # get a rough estimate of how much smaller the spritesheet needs to be\n      for image, index in builder.spriteSheet._images\n        total += image.height / builder.maxHeight\n      @resolutionFactor /= (Math.max(1.25, Math.sqrt(total)))\n      #console.log \"#{@name} rerendering new sprite sheet with resolutionFactor\", @resolutionFactor, \"async\", e.async\n      @_renderNewSpriteSheet(e.async)\n      return\n\n    @spriteSheet = builder.spriteSheet\n    @spriteSheet.resolutionFactor = @resolutionFactor\n    oldLayer = @container\n    @container = new createjs.SpriteContainer(@spriteSheet)\n    for lank in @lanks\n      console.log 'zombie sprite found on layer', @name if lank.destroyed\n      continue if lank.destroyed\n      @setSpriteToLank(lank)\n    for prop in ['scaleX', 'scaleY', 'regX', 'regY']\n      @container[prop] = oldLayer[prop]\n    if parent = oldLayer.parent\n      index = parent.getChildIndex(oldLayer)\n      parent.removeChildAt(index)\n      parent.addChildAt(@container, index)\n    @camera?.updateZoom(true)\n    @updateLayerOrder()\n    for lank in @lanks\n      lank.options.resolutionFactor = @resolutionFactor\n      lank.updateScale()\n      lank.updateRotation()\n    @trigger 'new-spritesheet'\n\n  resetSpriteSheet: ->\n    @removeLank(lank) for lank in @lanks.slice(0)\n    @toRenderBundles = []\n    @actionRenderState = {}\n    @initializing = true\n    @spriteSheet = @_renderNewSpriteSheet(false) # builds an empty spritesheet\n    @initializing = false\n\n  #- Placeholder\n\n  createPlaceholder: ->\n    # TODO: Experiment with this. Perhaps have rectangles if default layer is obstacle or floor,\n    # and different colors for different layers.\n    g = new createjs.Graphics()\n    g.setStrokeStyle(5)\n    color = {\n      'Land': [0, 50, 0]\n      'Ground': [230, 230, 230]\n      'Obstacle': [20, 70, 20]\n      'Path': [200, 100, 200]\n      'Default': [64, 64, 64]\n      'Floating': [100, 100, 200]\n    }[@name] or [0, 0, 0]\n    g.beginStroke(createjs.Graphics.getRGB(color...))\n    color.push 0.7\n    g.beginFill(createjs.Graphics.getRGB(color...))\n    width = @resolutionFactor * SPRITE_PLACEHOLDER_WIDTH\n    bounds = [0, 0, width, width]\n    if @name in ['Default', 'Ground', 'Floating', 'Path']\n      g.drawEllipse(bounds...)\n    else\n      g.drawRect(bounds...)\n    new createjs.Shape(g)\n\n  #- Rendering containers for segmented thang types\n\n  renderSegmentedThangType: (thangType, colorConfig, actionNames, spriteSheetBuilder) ->\n    prerenderedSpriteSheet = thangType.getPrerenderedSpriteSheet(colorConfig, 'segmented')\n    if prerenderedSpriteSheet and not prerenderedSpriteSheet.loadedImage\n      return\n    else if prerenderedSpriteSheet\n      animations = prerenderedSpriteSheet.spriteSheet._animations\n      renderedActions = _.zipObject(animations, _.times(animations.length, -> true))\n    containersToRender = thangType.getContainersForActions(actionNames)\n    #console.log 'render segmented', thangType.get('name'), actionNames, colorConfig, 'because we do not have prerendered sprite sheet?', prerenderedSpriteSheet\n    spriteBuilder = new SpriteBuilder(thangType, {colorConfig: colorConfig})\n    for containerGlobalName in containersToRender\n      containerKey = @renderGroupingKey(thangType, containerGlobalName, colorConfig)\n      if @spriteSheet?.resolutionFactor is @resolutionFactor and containerKey in @spriteSheet.getAnimations()\n        container = new createjs.Sprite(@spriteSheet)\n        container.gotoAndStop(containerKey)\n        frame = spriteSheetBuilder.addFrame(container)\n      else if prerenderedSpriteSheet and renderedActions[containerGlobalName]\n        container = new createjs.Sprite(prerenderedSpriteSheet.spriteSheet)\n        container.gotoAndStop(containerGlobalName)\n        scale = @resolutionFactor / (prerenderedSpriteSheet.get('resolutionFactor') or 1)\n        frame = spriteSheetBuilder.addFrame(container, null, scale)\n      else\n        container = spriteBuilder.buildContainerFromStore(containerGlobalName)\n        frame = spriteSheetBuilder.addFrame(container, null, @resolutionFactor * (thangType.get('scale') or 1))\n      spriteSheetBuilder.addAnimation(containerKey, [frame], false)\n\n  #- Rendering sprite sheets for singular thang types\n\n  renderSingularThangType: (thangType, colorConfig, actionNames, spriteSheetBuilder) ->\n    prerenderedSpriteSheet = thangType.getPrerenderedSpriteSheet(colorConfig, 'singular')\n    prerenderedFramesMap = {}\n    if prerenderedSpriteSheet\n      if not prerenderedSpriteSheet.loadedImage\n        return\n      scale = @resolutionFactor / (prerenderedSpriteSheet.get('resolutionFactor') or 1)\n      for frame, i in prerenderedSpriteSheet.spriteSheet._frames\n        sprite = new createjs.Sprite(prerenderedSpriteSheet.spriteSheet)\n        sprite.gotoAndStop(i)\n        prerenderedFramesMap[i] = spriteSheetBuilder.addFrame(sprite, null, scale)\n    #else\n    #  console.log '    Rerendering singular thang type', thangType.get('name'), thangType.get('spriteType'), colorConfig, actionNames\n\n    actionObjects = _.values(thangType.getActions())\n    animationActions = []\n    for a in actionObjects\n      continue unless a.animation\n      continue unless a.name in actionNames\n      animationActions.push(a)\n\n    spriteBuilder = new SpriteBuilder(thangType, {colorConfig: colorConfig})\n\n    animationGroups = _.groupBy animationActions, (action) -> action.animation\n    for animationName, actions of animationGroups\n      renderAll = _.any actions, (action) -> action.frames is undefined\n      scale = actions[0].scale or thangType.get('scale') or 1\n\n      actionKeys = (@renderGroupingKey(thangType, action.name, colorConfig) for action in actions)\n      if @spriteSheet?.resolutionFactor is @resolutionFactor and _.all(actionKeys, (key) => key in @spriteSheet.getAnimations())\n        framesNeeded = _.uniq(_.flatten((@spriteSheet.getAnimation(key)).frames for key in actionKeys))\n        framesMap = {}\n        for frame in framesNeeded\n          sprite = new createjs.Sprite(@spriteSheet)\n          sprite.gotoAndStop(frame)\n          framesMap[frame] = spriteSheetBuilder.addFrame(sprite)\n        for key, index in actionKeys\n          action = actions[index]\n          frames = (framesMap[f] for f in @spriteSheet.getAnimation(key).frames)\n          next = thangType.nextForAction(action)\n          spriteSheetBuilder.addAnimation(key, frames, next)\n        continue\n\n      if prerenderedSpriteSheet\n        for action in actions\n          name = @renderGroupingKey(thangType, action.name, colorConfig)\n          prerenderedFrames = prerenderedSpriteSheet.get('animations')?[action.name]?.frames\n          continue if not prerenderedFrames\n          frames = (prerenderedFramesMap[frame] for frame in prerenderedFrames)\n          next = thangType.nextForAction(action)\n          spriteSheetBuilder.addAnimation(name, frames, next)\n        continue\n\n      mc = spriteBuilder.buildMovieClip(animationName, null, null, null, {'temp':0})\n\n      if renderAll\n        res = spriteSheetBuilder.addMovieClip(mc, null, scale * @resolutionFactor)\n        frames = spriteSheetBuilder._animations['temp'].frames\n        framesMap = _.zipObject _.range(frames.length), frames\n      else\n        framesMap = {}\n        framesToRender = _.uniq(_.flatten((a.frames.split(',') for a in actions)))\n        for frame in framesToRender\n          frame = parseInt(frame)\n          f = _.bind(mc.gotoAndStop, mc, frame)\n          framesMap[frame] = spriteSheetBuilder.addFrame(mc, null, scale * @resolutionFactor, f)\n\n      for action in actions\n        name = @renderGroupingKey(thangType, action.name, colorConfig)\n\n        if action.frames\n          frames = (framesMap[parseInt(frame)] for frame in action.frames.split(','))\n        else\n          frames = _.sortBy(_.values(framesMap))\n        next = thangType.nextForAction(action)\n        spriteSheetBuilder.addAnimation(name, frames, next)\n\n    containerActions = []\n    for a in actionObjects\n      continue unless a.container\n      continue unless a.name in actionNames\n      containerActions.push(a)\n\n    containerGroups = _.groupBy containerActions, (action) -> action.container\n    for containerName, actions of containerGroups\n      if prerenderedSpriteSheet\n        for action in actions\n          name = @renderGroupingKey(thangType, action.name, colorConfig)\n          prerenderedFrames = prerenderedSpriteSheet.get('animations')?[action.name]?.frames\n          continue if not prerenderedFrames\n          frame = prerenderedFramesMap[prerenderedFrames[0]]\n          spriteSheetBuilder.addAnimation(name, [frame], false)\n        continue\n      container = spriteBuilder.buildContainerFromStore(containerName)\n      scale = actions[0].scale or thangType.get('scale') or 1\n      frame = spriteSheetBuilder.addFrame(container, null, scale * @resolutionFactor)\n      for action in actions\n        name = @renderGroupingKey(thangType, action.name, colorConfig)\n        spriteSheetBuilder.addAnimation(name, [frame], false)\n\n  #- Rendering frames for raster thang types\n\n  renderRasterThangType: (thangType, spriteSheetBuilder) ->\n    unless thangType.rasterImage\n      console.error(\"Cannot render the LayerAdapter SpriteSheet until the raster image for <#{thangType.get('name')}> is loaded.\")\n\n    # hack for IE9, otherwise width/height are not set\n    $img = $(thangType.rasterImage[0])\n    $('body').append($img)\n\n    bm = new createjs.Bitmap(thangType.rasterImage[0])\n    scale = thangType.get('scale') or 1\n    frame = spriteSheetBuilder.addFrame(bm, null, scale)\n    spriteSheetBuilder.addAnimation(@renderGroupingKey(thangType), [frame], false)\n    $img.remove()\n\n  #- Distributing new Segmented/Singular/RasterSprites to Lanks\n\n  setSpriteToLank: (lank) ->\n    if not lank.thangType.isFullyLoaded()\n      # just give a placeholder\n      sprite = new createjs.Sprite(@spriteSheet)\n      sprite.gotoAndStop(0)\n      sprite.placeholder = true\n      sprite.regX = @resolutionFactor * SPRITE_PLACEHOLDER_WIDTH / 2\n      sprite.regY = @resolutionFactor * SPRITE_PLACEHOLDER_WIDTH\n      sprite.baseScaleX = sprite.baseScaleY = sprite.scaleX = sprite.scaleY = 10 / (@resolutionFactor * SPRITE_PLACEHOLDER_WIDTH)\n\n    else if lank.thangType.get('raster')\n      sprite = new createjs.Sprite(@spriteSheet)\n      scale = lank.thangType.get('scale') or 1\n      reg = lank.getOffset 'registration'\n      sprite.regX = -reg.x * scale\n      sprite.regY = -reg.y * scale\n      sprite.gotoAndStop(@renderGroupingKey(lank.thangType))\n      sprite.baseScaleX = sprite.baseScaleY = 1\n\n    else\n      SpriteClass = if (lank.thangType.get('spriteType') or @defaultSpriteType) is 'segmented' then SegmentedSprite else SingularSprite\n      prefix = @renderGroupingKey(lank.thangType, null, lank.options.colorConfig) + '.'\n      sprite = new SpriteClass(@spriteSheet, lank.thangType, prefix, @resolutionFactor)\n\n    sprite.lank = lank\n    sprite.camera = @camera\n    sprite.layerPriority = lank.thang?.layerPriority ? lank.thangType.get 'layerPriority'\n    sprite.name = lank.thang?.spriteName or lank.thangType.get 'name'\n    lank.setSprite(sprite)\n    lank.update(true)\n    @container.addChild(sprite)\n    lank.updateScale true if lank.thangType.get 'matchWorldDimensions'  # Otherwise it's at the wrong scale for some reason.\n\n  renderGroupingKey: (thangType, grouping, colorConfig) ->\n    key = thangType.get('slug')\n    for colorKey, colorValue of colorConfig ? {}\n      key += \"(#{colorKey}:#{colorValue.hue},#{colorValue.saturation},#{colorValue.lightness})\"\n    key += '.'+grouping if grouping\n    key\n\n  destroy: ->\n    child.destroy?() for child in @container.children\n    @asyncBuilder.stopAsync() if @asyncBuilder\n    super()\n","module.exports = class Letterbox extends createjs.Container\n  subscriptions:\n    'level:set-letterbox': 'onSetLetterbox'\n\n  constructor: (options) ->\n    super()\n    @initialize()\n    @canvasWidth = options.canvasWidth\n    @canvasHeight = options.canvasHeight\n    console.error 'Letterbox needs canvasWidth/Height.' unless @canvasWidth and @canvasHeight\n    @build()\n    Backbone.Mediator.subscribe(channel, @[func], @) for channel, func of @subscriptions\n\n  build: ->\n    @mouseEnabled = @mouseChildren = false\n    @matteHeight = 0.10 * @canvasHeight\n    @upperMatte = new createjs.Shape()\n    @upperMatte.graphics.beginFill('black').rect(0, 0, @canvasWidth, @matteHeight)\n    @lowerMatte = @upperMatte.clone()\n    @upperMatte.x = @lowerMatte.x = 0\n    @upperMatte.y = -@matteHeight\n    @lowerMatte.y = @canvasHeight\n    @addChild @upperMatte, @lowerMatte\n\n  onSetLetterbox: (e) ->\n    T = createjs.Tween\n    T.removeTweens @upperMatte\n    T.removeTweens @lowerMatte\n    upperY = if e.on then 0 else -@matteHeight\n    lowerY = if e.on then @canvasHeight - @matteHeight else @canvasHeight\n    interval = 700\n    ease = createjs.Ease.cubicOut\n    T.get(@upperMatte).to({y: upperY}, interval, ease)\n    T.get(@lowerMatte).to({y: lowerY}, interval, ease)\n\n  destroy: ->\n    Backbone.Mediator.unsubscribe(channel, @[func], @) for channel, func of @subscriptions\n","CocoClass = require 'core/CocoClass'\nCamera = require './Camera'\nThangType = require 'models/ThangType'\nmarkThangTypes = {}\n\nmodule.exports = class Mark extends CocoClass\n  subscriptions: {}\n  alpha: 1\n\n  constructor: (options) ->\n    super()\n    options ?= {}\n    @name = options.name\n    @lank = options.lank\n    @camera = options.camera\n    @layer = options.layer\n    @thangType = options.thangType\n    @listenTo @layer, 'new-spritesheet', @onLayerMadeSpriteSheet\n    console.error @toString(), 'needs a name.' unless @name\n    console.error @toString(), 'needs a camera.' unless @camera\n    console.error @toString(), 'needs a layer.' unless @layer\n    @build()\n\n  destroy: ->\n    createjs.Tween.removeTweens @sprite if @sprite\n    @sprite?.parent?.removeChild @sprite\n    if @markLank\n      @layer.removeLank(@markLank)\n      @markLank.destroy()\n    @lank = null\n    super()\n\n  toString: -> \"<Mark #{@name}: Sprite #{@lank?.thang?.id ? 'None'}>\"\n\n  onLayerMadeSpriteSheet: ->\n    return unless @sprite\n    return @update() if @markLank\n    # rebuild sprite for new sprite sheet\n    @layer.removeChild @sprite\n    @sprite = null\n    @build()\n    @layer.addChild @sprite\n    @layer.updateLayerOrder()\n#    @updatePosition()\n    @update()\n\n  toggle: (to) ->\n    to = !!to\n    return @ if to is @on\n    return @toggleTo = to unless @sprite\n    @on = to\n    delete @toggleTo\n    if @on\n      if @markLank\n        @layer.addLank(@markLank)\n      else\n        @layer.addChild @sprite\n        @layer.updateLayerOrder()\n    else\n      if @markLank\n        @layer.removeLank(@markLank)\n      else\n        @layer.removeChild @sprite\n      if @highlightTween\n        @highlightDelay = @highlightTween = null\n        createjs.Tween.removeTweens @sprite\n        @sprite.visible = true\n    @\n\n  setLayer: (layer) ->\n    return if layer is @layer\n    wasOn = @on\n    @toggle false\n    @layer = layer\n    @toggle true if wasOn\n\n  setLank: (lank) ->\n    return if lank is @lank\n    @lank = lank\n    @build()\n    @\n\n  build: ->\n    unless @sprite\n      if @name is 'bounds' then @buildBounds()\n      else if @name is 'shadow' then @buildShadow()\n      else if @name is 'debug' then @buildDebug()\n      else if @name.match(/.+(Range|Distance|Radius)$/) then @buildRadius(@name)\n      else if @thangType then @buildSprite()\n      else console.error 'Don\\'t know how to build mark for', @name\n      @sprite?.mouseEnabled = false\n    @\n\n  buildBounds: ->\n    @sprite = new createjs.Container()\n    @sprite.mouseChildren = false\n    style = @lank.thang.drawsBoundsStyle\n    @drawsBoundsIndex = @lank.thang.drawsBoundsIndex\n    return if style is 'corner-text' and @lank.thang.world.age is 0\n\n    # Confusingly make some semi-random colors that'll be consistent based on the drawsBoundsIndex\n    colors = (128 + Math.floor(('0.'+Math.sin(3 * @drawsBoundsIndex + i).toString().substr(6)) * 128) for i in [1 ... 4])\n    color = \"rgba(#{colors[0]}, #{colors[1]}, #{colors[2]}, 0.5)\"\n    [w, h] = [@lank.thang.width * Camera.PPM, @lank.thang.height * Camera.PPM * @camera.y2x]\n\n    if style in ['border-text', 'corner-text']\n      @drawsBoundsBorderShape = shape = new createjs.Shape()\n      shape.graphics.setStrokeStyle 5\n      shape.graphics.beginStroke color\n      if style is 'border-text'\n        shape.graphics.beginFill color.replace('0.5', '0.25')\n      else\n        shape.graphics.beginFill color\n      if @lank.thang.shape in ['ellipsoid', 'disc']\n        shape.drawEllipse 0, 0, w, h\n      else\n        shape.graphics.drawRect -w / 2, -h / 2, w, h\n      shape.graphics.endStroke()\n      shape.graphics.endFill()\n      @sprite.addChild shape\n\n    if style is 'border-text'\n      text = new createjs.Text '' + @drawsBoundsIndex, '20px Arial', color.replace('0.5', '1')\n      text.regX = text.getMeasuredWidth() / 2\n      text.regY = text.getMeasuredHeight() / 2\n      text.shadow = new createjs.Shadow('#000000', 1, 1, 0)\n      @sprite.addChild text\n    else if style is 'corner-text'\n      return if @lank.thang.world.age is 0\n      letter = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'[@drawsBoundsIndex % 26]\n      text = new createjs.Text letter, '14px Arial', '#333333'   # color.replace('0.5', '1')\n      text.x = -w / 2 + 2\n      text.y = -h / 2 + 2\n      @sprite.addChild text\n    else\n      console.warn @lank.thang.id, 'didn\\'t know how to draw bounds style:', style\n\n    if w > 0 and h > 0 and style is 'border-text'\n      @sprite.cache -w / 2, -h / 2, w, h, 2\n    @lastWidth = @lank.thang.width\n    @lastHeight = @lank.thang.height\n\n  buildShadow: ->\n    shapeName = if @lank.thang.shape in ['ellipsoid', 'disc'] then 'ellipse' else 'rect'\n    key = \"#{shapeName}-shadow\"\n    SHADOW_SIZE = 10\n    unless key in @layer.spriteSheet.getAnimations()\n      shape = new createjs.Shape()\n      shape.graphics.beginFill \"rgba(0,0,0)\"\n      bounds = [-SHADOW_SIZE/2, - SHADOW_SIZE/2, SHADOW_SIZE, SHADOW_SIZE]\n      if shapeName is 'ellipse'\n        shape.graphics.drawEllipse bounds...\n      else\n        shape.graphics.drawRect bounds...\n      shape.graphics.endFill()\n      @layer.addCustomGraphic(key, shape, bounds)\n    alpha = @lank.thang?.alpha ? 1\n    width = (@lank.thang?.width ? 0) + 0.5\n    height = (@lank.thang?.height ? 0) + 0.5\n    longest = Math.max width, height\n    actualLongest = @lank.thangType.get('shadow') ? longest\n    width = width * actualLongest / longest\n    height = height * actualLongest / longest\n    width *= Camera.PPM\n    height *= Camera.PPM * @camera.y2x  # TODO: doesn't work with rotation\n    @sprite = new createjs.Sprite(@layer.spriteSheet)\n    @sprite.gotoAndStop(key)\n    @sprite.mouseEnabled = false\n    @sprite.alpha = alpha\n    @baseScaleX = @sprite.scaleX = width / (@layer.resolutionFactor * SHADOW_SIZE)\n    @baseScaleY = @sprite.scaleY = height / (@layer.resolutionFactor * SHADOW_SIZE)\n\n  buildRadius: (range) ->\n    alpha = 0.15\n    colors =\n      voiceRange: \"rgba(0,145,0,#{alpha})\"\n      visualRange: \"rgba(0,0,145,#{alpha})\"\n      attackRange: \"rgba(145,0,0,#{alpha})\"\n\n    # Fallback colors which work on both dungeon and grass tiles\n    extraColors = [\n      \"rgba(145,0,145,#{alpha})\"\n      \"rgba(0,145,145,#{alpha})\"\n      \"rgba(145,105,0,#{alpha})\"\n      \"rgba(225,125,0,#{alpha})\"\n    ]\n\n    # Find the index of this range, to find the next-smallest radius\n    rangeNames = @lank.ranges.map((range, index) ->\n      range['name']\n    )\n    i = rangeNames.indexOf(range)\n\n    @sprite = new createjs.Shape()\n\n    fillColor = colors[range] ? extraColors[i]\n    @sprite.graphics.beginFill fillColor\n\n    # Draw the outer circle\n    @sprite.graphics.drawCircle 0, 0, @lank.thang[range] * Camera.PPM\n\n    # Cut out the hollow part if necessary\n    if i+1 < @lank.ranges.length\n      @sprite.graphics.arc 0, 0, @lank.ranges[i+1]['radius'], Math.PI*2, 0, true\n\n    @sprite.graphics.endFill()\n\n    strokeColor = fillColor.replace '' + alpha, '0.75'\n    @sprite.graphics.setStrokeStyle 2\n    @sprite.graphics.beginStroke strokeColor\n    @sprite.graphics.arc 0, 0, @lank.thang[range] * Camera.PPM, Math.PI*2, 0, true\n    @sprite.graphics.endStroke()\n\n    # Add perspective\n    @sprite.scaleY *= @camera.y2x\n\n  buildDebug: ->\n    shapeName = if @lank.thang.shape in ['ellipsoid', 'disc'] then 'ellipse' else 'rect'\n    key = \"#{shapeName}-debug-#{@lank.thang.collisionCategory}\"\n    DEBUG_SIZE = 10\n    unless key in @layer.spriteSheet.getAnimations()\n      shape = new createjs.Shape()\n      debugColor = {\n        none: 'rgba(224,255,239,0.25)'\n        ground: 'rgba(239,171,205,0.5)'\n        air: 'rgba(131,205,255,0.5)'\n        ground_and_air: 'rgba(2391,140,239,0.5)'\n        obstacles: 'rgba(88,88,88,0.5)'\n        dead: 'rgba(89,171,100,0.25)'\n      }[@lank.thang.collisionCategory] or 'rgba(171,205,239,0.5)'\n      shape.graphics.beginFill debugColor\n      bounds = [-DEBUG_SIZE / 2, -DEBUG_SIZE / 2, DEBUG_SIZE, DEBUG_SIZE]\n      if shapeName is 'ellipse'\n        shape.graphics.drawEllipse bounds...\n      else\n        shape.graphics.drawRect bounds...\n      shape.graphics.endFill()\n      @layer.addCustomGraphic(key, shape, bounds)\n\n    @sprite = new createjs.Sprite(@layer.spriteSheet)\n    @sprite.gotoAndStop(key)\n    PX = 3\n    w = Math.max(PX, @lank.thang.width  * Camera.PPM) * (@camera.y2x + (1 - @camera.y2x) * Math.abs Math.cos @lank.thang.rotation)\n    h = Math.max(PX, @lank.thang.height * Camera.PPM) * (@camera.y2x + (1 - @camera.y2x) * Math.abs Math.sin @lank.thang.rotation)\n    @sprite.scaleX = w / (@layer.resolutionFactor * DEBUG_SIZE)\n    @sprite.scaleY = h / (@layer.resolutionFactor * DEBUG_SIZE)\n    @sprite.rotation = -@lank.thang.rotation * 180 / Math.PI\n\n  buildSprite: ->\n    if _.isString @thangType\n      thangType = markThangTypes[@thangType]\n      return @loadThangType() if not thangType\n      @thangType = thangType\n\n    return @listenToOnce(@thangType, 'sync', @onLoadedThangType) if not @thangType.loaded\n    Lank = require './Lank'\n    # don't bother with making these render async for now, but maybe later for fun and more complexity of code\n    markLank = new Lank @thangType\n    markLank.queueAction 'idle'\n    @sprite = markLank.sprite\n    @markLank = markLank\n    @listenTo @markLank, 'new-sprite', (@sprite) ->\n\n  loadThangType: ->\n    name = @thangType\n    @thangType = new ThangType()\n    @thangType.url = -> \"/db/thang.type/#{name}\"\n    @listenToOnce(@thangType, 'sync', @onLoadedThangType)\n    @thangType.fetch()\n    markThangTypes[name] = @thangType\n\n  onLoadedThangType: ->\n    @build()\n    @update() if @markLank\n    @toggle(@toggleTo) if @toggleTo?\n    Backbone.Mediator.publish 'sprite:loaded', {sprite: @}\n\n  update: (pos=null) ->\n    return false unless @on and @sprite\n    return false if @lank? and not @lank.thangType.isFullyLoaded()\n    @sprite.visible = not @hidden\n    @updatePosition pos\n    @updateRotation()\n    @updateScale()\n    if @name is 'highlight' and @highlightDelay and not @highlightTween\n      @sprite.visible = false\n      @highlightTween = createjs.Tween.get(@sprite).to({}, @highlightDelay).call =>\n        return if @destroyed\n        @sprite.visible = true\n        @highlightDelay = @highlightTween = null\n    @updateAlpha @alpha if @name in ['shadow', 'bounds']\n    true\n\n  updatePosition: (pos) ->\n    if @lank?.thang and @name in ['shadow', 'debug', 'target', 'selection', 'repair']\n      pos = @camera.worldToSurface x: @lank.thang.pos.x, y: @lank.thang.pos.y\n    else\n      pos ?= @lank?.sprite\n    return unless pos\n    @sprite.x = pos.x\n    @sprite.y = pos.y\n    if @statusEffect or @name is 'highlight'\n      offset = @lank.getOffset 'aboveHead'\n      @sprite.x += offset.x\n      @sprite.y += offset.y\n      @sprite.y -= 3 if @statusEffect\n\n  updateAlpha: (@alpha) ->\n    return if not @sprite or @name is 'debug'\n    if @name is 'shadow'\n      worldZ = @lank.thang.pos.z - @lank.thang.depth / 2 + @lank.getBobOffset()\n      @sprite.alpha = @alpha * 0.451 / Math.sqrt(worldZ / 2 + 1)\n    else if @name is 'bounds'\n      @drawsBoundsBorderShape?.alpha = Math.floor @lank.thang.alpha  # Stop drawing bounds as soon as alpha is reduced at all\n    else\n      @sprite.alpha = @alpha\n\n  updateRotation: ->\n    if @name is 'debug' or (@name is 'shadow' and @lank.thang?.shape in ['rectangle', 'box'])\n      @sprite.rotation = -@lank.thang.rotation * 180 / Math.PI\n\n  updateScale: ->\n    if @name is 'bounds' and ((@lank.thang.width isnt @lastWidth or @lank.thang.height isnt @lastHeight) or (@lank.thang.drawsBoundsIndex isnt @drawsBoundsIndex))\n      oldMark = @sprite\n      @buildBounds()\n      oldMark.parent.addChild @sprite\n      oldMark.parent.swapChildren oldMark, @sprite\n      oldMark.parent.removeChild oldMark\n\n    if @markLank?\n      @markLank.scaleFactor = 1.2\n      @markLank.updateScale()\n\n    if @name is 'shadow' and thang = @lank.thang\n      @sprite.scaleX = @baseScaleX * (thang.scaleFactor ? thang.scaleFactorX ? 1)\n      @sprite.scaleY = @baseScaleY * (thang.scaleFactor ? thang.scaleFactorY ? 1)\n\n    return unless @name in ['selection', 'target', 'repair', 'highlight']\n\n    # scale these marks to 10m (100px). Adjust based on lank size.\n    factor = 0.3 # default size: 3m width, most commonly for target when pointing to a location\n\n    if @lank?.sprite\n      width = @lank.sprite.getBounds()?.width or 0\n      width /= @lank.options.resolutionFactor\n      # all targets should be set to have a width of 100px, and then be scaled accordingly\n      factor = width / 100 # normalize\n      factor *= 1.1 # add margin\n      factor = Math.max(factor, 0.3) # lower bound\n    @sprite.scaleX *= factor\n    @sprite.scaleY *= factor\n\n    if @name in ['selection', 'target', 'repair']\n      @sprite.scaleY *= @camera.y2x  # code applies perspective\n\n  stop: -> @markLank?.stop()\n  play: -> @markLank?.play()\n  hide: -> @hidden = true\n  show: -> @hidden = false\n","CocoClass = require 'core/CocoClass'\nAudioPlayer = require 'lib/AudioPlayer'\n{me} = require 'core/auth'\n\nCROSSFADE_LENGTH = 1500\nMUSIC_VOLUME = 0.6\n\nmodule.exports = class MusicPlayer extends CocoClass\n  currentMusic: null\n  standingBy: null\n\n  subscriptions:\n    'music-player:play-music': 'onPlayMusic'\n    'audio-player:loaded': 'onAudioLoaded'\n    'playback:real-time-playback-started': 'onRealTimePlaybackStarted'\n    'playback:real-time-playback-ended': 'onRealTimePlaybackEnded'\n    'music-player:enter-menu': 'onEnterMenu'\n    'music-player:exit-menu': 'onExitMenu'\n    'level:set-volume': 'onSetVolume'\n\n  constructor: ->\n    super arguments...\n    me.on 'change:music', @onMusicSettingChanged, @\n\n  onAudioLoaded: ->\n    @onPlayMusic(@standingBy) if @standingBy\n\n  onPlayMusic: (e) ->\n    return if application.isIPadApp  # Hard to measure, but just guessing this will save memory.\n    unless me.get 'volume'\n      @lastMusicEventIgnoredWhileMuted = e\n      return\n    src = e.file\n    src = \"/file#{src}#{AudioPlayer.ext}\"\n    if (not e.file) or src is @currentMusic?.src\n      if e.play then @restartCurrentMusic() else @fadeOutCurrentMusic()\n      return\n\n    media = AudioPlayer.getStatus(src)\n    if not media?.loaded\n      AudioPlayer.preloadSound(src)\n      @standingBy = e\n      return\n\n    delay = e.delay ? 0\n    @standingBy = null\n    @fadeOutCurrentMusic()\n    @startNewMusic(src, delay) if e.play\n\n  restartCurrentMusic: ->\n    return unless @currentMusic\n    @currentMusic.play('none', 0, 0, -1, 0.3)\n    @updateMusicVolume()\n\n  fadeOutCurrentMusic: ->\n    return unless @currentMusic\n    createjs.Tween.removeTweens(@currentMusic)\n    f = -> @stop()\n    createjs.Tween.get(@currentMusic).to({volume: 0.0}, CROSSFADE_LENGTH).call(f)\n\n  startNewMusic: (src, delay) ->\n    @currentMusic = createjs.Sound.play(src, 'none', 0, 0, -1, 0.3) if src\n    return unless @currentMusic\n    @currentMusic.volume = 0.0\n    if me.get('music', true)\n      createjs.Tween.get(@currentMusic).wait(delay).to({volume: MUSIC_VOLUME}, CROSSFADE_LENGTH)\n\n  onMusicSettingChanged: ->\n    @updateMusicVolume()\n\n  updateMusicVolume: ->\n    return unless @currentMusic\n    createjs.Tween.removeTweens(@currentMusic)\n    @currentMusic.volume = if me.get('music', true) then MUSIC_VOLUME else 0.0\n\n  onRealTimePlaybackStarted: (e) ->\n    @previousMusic = @currentMusic\n    trackNumber = _.random 0, 2\n    Backbone.Mediator.publish 'music-player:play-music', file: \"/music/music_real_time_#{trackNumber}\", play: true\n\n  onRealTimePlaybackEnded: (e) ->\n    @fadeOutCurrentMusic()\n    if @previousMusic\n      @currentMusic = @previousMusic\n      @restartCurrentMusic()\n      if @currentMusic.volume\n        createjs.Tween.get(@currentMusic).wait(5000).to({volume: MUSIC_VOLUME}, CROSSFADE_LENGTH)\n\n  onEnterMenu: (e) ->\n    return if @inMenu\n    @inMenu = true\n    @previousMusic = @currentMusic\n    file = \"/music/music-menu\"\n    Backbone.Mediator.publish 'music-player:play-music', file: file, play: true, delay: 1000\n\n  onExitMenu: (e) ->\n    return unless @inMenu\n    @inMenu = false\n    @fadeOutCurrentMusic()\n    if @previousMusic\n      @currentMusic = @previousMusic\n      @restartCurrentMusic()\n\n  onSetVolume: (e) ->\n    return unless e.volume and @lastMusicEventIgnoredWhileMuted\n    @onPlayMusic @lastMusicEventIgnoredWhileMuted\n    @lastMusicEventIgnoredWhileMuted = null\n\n  destroy: ->\n    me.off 'change:music', @onMusicSettingChanged, @\n    @fadeOutCurrentMusic()\n    super()\n","CocoClass = require 'core/CocoClass'\n\nmodule.exports = class PlaybackOverScreen extends CocoClass\n  subscriptions:\n    'goal-manager:new-goal-states': 'onNewGoalStates'\n\n  constructor: (options) ->\n    super()\n    options ?= {}\n    @camera = options.camera\n    @layer = options.layer\n    @playerNames = options.playerNames\n    console.error @toString(), 'needs a camera.' unless @camera\n    console.error @toString(), 'needs a layer.' unless @layer\n    @build()\n\n  toString: -> '<PlaybackOverScreen>'\n\n  build: ->\n    @dimLayer = new createjs.Container()\n    @dimLayer.mouseEnabled = @dimLayer.mouseChildren = false\n    @dimLayer.addChild @dimScreen = new createjs.Shape()\n    @dimLayer.alpha = 0\n    @layer.addChild @dimLayer\n\n  makeVictoryText: ->\n    s = ''\n    size = Math.ceil @camera.canvasHeight / 6\n    text = new createjs.Text s, \"#{size}px Open Sans Condensed\", '#F7B42C'\n    text.shadow = new createjs.Shadow '#000', Math.ceil(@camera.canvasHeight / 300), Math.ceil(@camera.canvasHeight / 300), Math.ceil(@camera.canvasHeight / 120)\n    text.textAlign = 'center'\n    text.textBaseline = 'middle'\n    text.x = 0.5 * @camera.canvasWidth\n    text.y = 0.8 * @camera.canvasHeight\n    @dimLayer.addChild text\n    @text = text\n\n  show: ->\n    return if @showing\n    @showing = true\n    @updateColor 'rgba(212, 212, 212, 0.4)' unless @color  # If we haven't caught the goal state for the first run, just do something neutral.\n    @dimLayer.alpha = 0\n    createjs.Tween.removeTweens @dimLayer\n    createjs.Tween.get(@dimLayer).to({alpha: 1}, 500)\n\n  hide: ->\n    return unless @showing\n    @showing = false\n    createjs.Tween.removeTweens @dimLayer\n    createjs.Tween.get(@dimLayer).to({alpha: 0}, 500)\n\n  onNewGoalStates: (e) ->\n    success = e.overallStatus is 'success'\n    failure = e.overallStatus is 'failure'\n    timedOut = e.timedOut\n    incomplete = not success and not failure and not timedOut\n    color = if failure then 'rgba(255, 128, 128, 0.4)' else 'rgba(255, 255, 255, 0.4)'\n    @updateColor color\n    @updateText e\n\n  updateColor: (color) ->\n    return if color is @color\n    @dimScreen.graphics.clear().beginFill(color).rect 0, 0, @camera.canvasWidth, @camera.canvasHeight\n    if @color\n      @dimLayer.updateCache()\n    else\n      @dimLayer.cache 0, 0, @camera.canvasWidth, @camera.canvasHeight\n    @color = color\n\n  updateText: (goalEvent) ->\n    return unless _.size @playerNames  # Only on multiplayer levels\n    teamOverallStatuses = {}\n\n    goals = if goalEvent.goalStates then _.values goalEvent.goalStates else []\n    goals = (g for g in goals when not g.optional)\n    for team in ['humans', 'ogres']\n      teamGoals = (g for g in goals when g.team in [undefined, team])\n      statuses = (goal.status for goal in teamGoals)\n      overallStatus = 'success' if statuses.length > 0 and _.every(statuses, (s) -> s is 'success')\n      overallStatus = 'failure' if statuses.length > 0 and 'failure' in statuses\n      teamOverallStatuses[team] = overallStatus\n\n    @makeVictoryText() unless @text\n    if teamOverallStatuses.humans is 'success'\n      @text.color = '#E62B1E'\n      @text.text = ((@playerNames.humans ? $.i18n.t('ladder.red_ai')) + ' ' + $.i18n.t('ladder.wins')).toLocaleUpperCase()\n    else if teamOverallStatuses.ogres is 'success'\n      @text.color = '#0597FF'\n      @text.text = ((@playerNames.ogres ? $.i18n.t('ladder.blue_ai')) + ' ' + $.i18n.t('ladder.wins')).toLocaleUpperCase()\n    else\n      @text.color = '#F7B42C'\n      if goalEvent.timedOut\n        @text.text = 'TIMED OUT'\n      else\n        @text.text = 'INCOMPLETE'\n    @dimLayer.updateCache()\n","CocoClass = require 'core/CocoClass'\n\nmodule.exports = class PointChooser extends CocoClass\n  constructor: (@options) ->\n    super()\n    @buildShape()\n    @options.stage.addEventListener 'stagemousedown', @onMouseDown\n    @options.camera.dragDisabled = true\n\n  destroy: ->\n    @options.stage.removeEventListener 'stagemousedown', @onMouseDown\n    super()\n\n  # Called also from WorldSelectModal\n  setPoint: (@point) ->\n    @updateShape()\n\n  buildShape: ->\n    @shape = new createjs.Shape()\n    @shape.alpha = 0.9\n    @shape.mouseEnabled = false\n    @shape.graphics.setStrokeStyle(1, 'round').beginStroke('#000000').beginFill('#fedcba')\n    @shape.graphics.drawCircle(0, 0, 4).endFill()\n\n  onMouseDown: (e) =>\n    return unless key.shift\n    @setPoint @options.camera.screenToWorld {x: e.stageX, y: e.stageY}\n    Backbone.Mediator.publish 'surface:choose-point', point: @point\n\n  updateShape: ->\n    sup = @options.camera.worldToSurface @point\n    @options.surfaceLayer.addChild @shape unless @shape.parent\n    @shape.x = sup.x\n    @shape.y = sup.y\n","CocoClass = require 'core/CocoClass'\nCamera = require './Camera'\n\nmodule.exports = class RegionChooser extends CocoClass\n  constructor: (@options) ->\n    super()\n    @options.stage.addEventListener 'stagemousedown', @onMouseDown\n    @options.stage.addEventListener 'stagemousemove', @onMouseMove\n    @options.stage.addEventListener 'stagemouseup', @onMouseUp\n\n  destroy: ->\n    @options.stage.removeEventListener 'stagemousedown', @onMouseDown\n    @options.stage.removeEventListener 'stagemousemove', @onMouseMove\n    @options.stage.removeEventListener 'stagemouseup', @onMouseUp\n    super()\n\n  onMouseDown: (e) =>\n    return unless key.shift\n    @firstPoint = @options.camera.screenToWorld {x: e.stageX, y: e.stageY}\n    @options.camera.dragDisabled = true\n\n  onMouseMove: (e) =>\n    return unless @firstPoint\n    @secondPoint = @options.camera.screenToWorld {x: e.stageX, y: e.stageY}\n    @restrictRegion() if @options.restrictRatio or key.alt\n    @updateShape()\n\n  onMouseUp: (e) =>\n    return unless @firstPoint\n    Backbone.Mediator.publish 'surface:choose-region', points: [@firstPoint, @secondPoint]\n    @firstPoint = null\n    @secondPoint = null\n    @options.camera.dragDisabled = false\n\n  restrictRegion: ->\n    RATIO = 1.56876  # 924 / 589\n    rect = @options.camera.normalizeBounds([@firstPoint, @secondPoint])\n    currentRatio = rect.width / rect.height\n    if currentRatio > RATIO\n      # increase the height\n      targetSurfaceHeight = rect.width / RATIO\n      targetWorldHeight = targetSurfaceHeight * Camera.MPP * @options.camera.x2y\n      targetWorldHeight *= -1 if @secondPoint.y < @firstPoint.y\n      @secondPoint.y = @firstPoint.y + targetWorldHeight\n    else\n      # increase the width\n      targetSurfaceWidth = rect.height * RATIO\n      targetWorldWidth =  targetSurfaceWidth * Camera.MPP\n      targetWorldWidth *= -1 if @secondPoint.x < @firstPoint.x\n      @secondPoint.x = @firstPoint.x + targetWorldWidth\n\n  # Called from WorldSelectModal\n  setRegion: (worldPoints) ->\n    @firstPoint = worldPoints[0]\n    @secondPoint = worldPoints[1]\n    @updateShape()\n    @firstPoint = null\n    @secondPoint = null\n\n  updateShape: ->\n    rect = @options.camera.normalizeBounds([@firstPoint, @secondPoint])\n    @options.surfaceLayer.removeChild @shape if @shape\n    @shape = new createjs.Shape()\n    @shape.alpha = 0.5\n    @shape.mouseEnabled = false\n    @shape.graphics.beginFill('#fedcba').drawRect rect.x, rect.y, rect.width, rect.height\n    @shape.graphics.endFill()\n    @shape.skipScaling = true\n    @options.surfaceLayer.addChild(@shape)\n","SpriteBuilder = require 'lib/sprites/SpriteBuilder'\n\n# Put this on MovieClips\nspecialGoToAndStop = (frame) ->\n  if frame is @currentFrame and @childrenCopy\n    @addChild(@childrenCopy...)\n  else\n    @gotoAndStop(frame)\n    @childrenCopy = @children.slice(0)\n\nmodule.exports = class SegmentedSprite extends createjs.SpriteContainer\n  childMovieClips: null\n\n  constructor: (@spriteSheet, @thangType, @spriteSheetPrefix, @resolutionFactor=SPRITE_RESOLUTION_FACTOR) ->\n    @spriteSheet.mcPool ?= {}\n    super(@spriteSheet)\n    @addEventListener 'tick', @handleTick\n\n  destroy: ->\n    @handleTick = undefined\n    @baseMovieClip.inUse = false if @baseMovieClip\n    @removeAllEventListeners()\n\n  # CreateJS.Sprite-like interface\n\n  play: -> @paused = false unless @baseMovieClip and @animLength > 1\n  stop: -> @paused = true\n  gotoAndPlay: (actionName) -> @goto(actionName, false)\n  gotoAndStop: (actionName) -> @goto(actionName, true)\n\n  goto: (actionName, @paused=true) ->\n    @removeAllChildren()\n    @currentAnimation = actionName\n    @baseMovieClip.inUse = false if @baseMovieClip\n    if @childMovieClips\n      mc.inUse = false for mc in @childMovieClips\n    @childMovieClips = @baseMovieClip = @framerate = @animLength = null\n    @actionNotSupported = false\n\n    action = @thangType.getActions()[actionName]\n    randomStart = _.string.startsWith(actionName, 'move')\n\n    # because the resulting segmented image is set to the size of the movie clip, you can use\n    # the raw registration data without scaling it.\n    reg = action.positions?.registration or @thangType.get('positions')?.registration or {x:0, y:0}\n\n    if action.animation\n      @regX = -reg.x\n      @regY = -reg.y\n      @framerate = (action.framerate ? 20) * (action.speed ? 1)\n      @childMovieClips = []\n      @baseMovieClip = @buildMovieClip(action.animation)\n      @baseMovieClip.inUse = true\n      @frames = action.frames\n      @frames = (parseInt(f) for f in @frames.split(',')) if @frames\n      @animLength = if @frames then @frames.length else @baseMovieClip.timeline.duration\n      @paused = true if @animLength is 1\n\n      if @frames\n        if randomStart\n          @currentFrame = @frames[_.random(@frames.length - 1)]\n        else\n          @currentFrame = @frames[0]\n      else\n        if randomStart\n          @currentFrame = then Math.floor(Math.random() * @animLength)\n        else\n          @currentFrame = 0\n\n      @baseMovieClip.specialGoToAndStop(@currentFrame)\n      for movieClip in @childMovieClips\n        if movieClip.mode is 'single'\n          movieClip.specialGoToAndStop(movieClip.startPosition)\n        else\n          movieClip.specialGoToAndStop(@currentFrame)\n\n      @takeChildrenFromMovieClip(@baseMovieClip, @)\n      @loop = action.loops isnt false\n      @goesTo = action.goesTo\n      @notifyActionNeedsRender(action) if @actionNotSupported\n      @scaleX = @scaleY = action.scale ? @thangType.get('scale') ? 1\n\n    else if action.container\n      # All transformations will be done to the child sprite\n      @regX = @regY = 0\n      @scaleX = @scaleY = 1\n\n      @childMovieClips = []\n      containerName = @spriteSheetPrefix + action.container\n      sprite = new createjs.Sprite(@spriteSheet)\n      sprite.gotoAndStop(containerName)\n      if sprite.currentFrame is 0 or @usePlaceholders\n        sprite.gotoAndStop(0)\n        @notifyActionNeedsRender(action)\n        bounds = @thangType.get('raw').containers[action.container].b\n        actionScale = (action.scale ? @thangType.get('scale') ? 1)\n        sprite.scaleX = actionScale * bounds[2] / (SPRITE_PLACEHOLDER_WIDTH * @resolutionFactor)\n        sprite.scaleY = actionScale * bounds[3] / (SPRITE_PLACEHOLDER_WIDTH * @resolutionFactor)\n        sprite.regX = (SPRITE_PLACEHOLDER_WIDTH * @resolutionFactor) * ((-reg.x - bounds[0]) / bounds[2])\n        sprite.regY = (SPRITE_PLACEHOLDER_WIDTH * @resolutionFactor) * ((-reg.y - bounds[1]) / bounds[3])\n      else\n        scale = @resolutionFactor * (action.scale ? @thangType.get('scale') ? 1)\n        sprite.regX = -reg.x * scale\n        sprite.regY = -reg.y * scale\n        sprite.scaleX = sprite.scaleY = 1 / @resolutionFactor\n      @children = []\n      @addChild(sprite)\n\n    else if action.goesTo\n      @goto(action.goesTo, @paused)\n      return\n\n    @scaleX *= -1 if action.flipX\n    @scaleY *= -1 if action.flipY\n    @baseScaleX = @scaleX\n    @baseScaleY = @scaleY\n    return\n\n  notifyActionNeedsRender: (action) ->\n    @lank?.trigger('action-needs-render', @lank, action)\n\n  buildMovieClip: (animationName, mode, startPosition, loops) ->\n    key = JSON.stringify([@spriteSheetPrefix].concat(arguments))\n    @spriteSheet.mcPool[key] ?= []\n    for mc in @spriteSheet.mcPool[key]\n      if not mc.inUse\n        mc.gotoAndStop(mc.currentFrame+0.01) # just to make sure it has its children back\n        @childMovieClips = mc.childMovieClips\n        return mc\n\n    raw = @thangType.get('raw')\n    animData = raw.animations[animationName]\n    @lastAnimData = animData\n\n    locals = {}\n    _.extend locals, @buildMovieClipContainers(animData.containers)\n    _.extend locals, @buildMovieClipAnimations(animData.animations)\n\n    toSkip = {}\n    toSkip[shape.bn] = true for shape in animData.shapes\n    toSkip[graphic.bn] = true for graphic in animData.graphics\n\n    anim = new createjs.MovieClip()\n    anim.initialize(mode ? createjs.MovieClip.INDEPENDENT, startPosition ? 0, loops ? true)\n    anim.specialGoToAndStop = specialGoToAndStop\n\n    for tweenData, i in animData.tweens\n      stopped = false\n      tween = createjs.Tween\n      for func in tweenData\n        args = $.extend(true, [], (func.a))\n        if @dereferenceArgs(args, locals, toSkip) is false\n#          console.debug 'Did not dereference args:', args\n          stopped = true\n          break\n        if tween[func.n]\n          tween = tween[func.n](args...)\n        else\n          # If we, say, skipped a shadow get(), then the wait() may not be present\n          stopped = true\n          break\n      continue if stopped\n      anim.timeline.addTween(tween)\n\n    anim.nominalBounds = new createjs.Rectangle(animData.bounds...)\n    if animData.frameBounds\n      anim.frameBounds = (new createjs.Rectangle(bounds...) for bounds in animData.frameBounds)\n\n    anim.childMovieClips = @childMovieClips\n\n    @spriteSheet.mcPool[key].push(anim)\n    return anim\n\n  buildMovieClipContainers: (localContainers) ->\n    map = {}\n    for localContainer in localContainers\n      outerContainer = new createjs.SpriteContainer(@spriteSheet)\n      innerContainer = new createjs.Sprite(@spriteSheet)\n      innerContainer.gotoAndStop(@spriteSheetPrefix + localContainer.gn)\n      if innerContainer.currentFrame is 0 or @usePlaceholders\n        innerContainer.gotoAndStop(0)\n        @actionNotSupported = true\n        bounds = @thangType.get('raw').containers[localContainer.gn].b\n        innerContainer.x = bounds[0]\n        innerContainer.y = bounds[1]\n        innerContainer.scaleX = bounds[2] / (SPRITE_PLACEHOLDER_WIDTH * @resolutionFactor)\n        innerContainer.scaleY = bounds[3] / (SPRITE_PLACEHOLDER_WIDTH * @resolutionFactor)\n      else\n        innerContainer.scaleX = innerContainer.scaleY = 1 / (@resolutionFactor * (@thangType.get('scale') or 1))\n      outerContainer.addChild(innerContainer)\n      outerContainer.setTransform(localContainer.t...)\n      outerContainer._off = localContainer.o if localContainer.o?\n      outerContainer.alpha = localContainer.al if localContainer.al?\n      map[localContainer.bn] = outerContainer\n    return map\n\n  buildMovieClipAnimations: (localAnimations) ->\n    map = {}\n    for localAnimation in localAnimations\n      animation = @buildMovieClip(localAnimation.gn, localAnimation.a...)\n      animation.inUse = true\n      animation.setTransform(localAnimation.t...)\n      map[localAnimation.bn] = animation\n      @childMovieClips.push(animation)\n    return map\n\n  dereferenceArgs: (args, locals, toSkip) ->\n    for key, val of args\n      if locals[val]\n        args[key] = locals[val]\n      else if val is null\n        args[key] = {}\n      else if _.isString(val) and val.indexOf('createjs.') is 0\n        args[key] = eval(val) # TODO: Security risk\n      else if _.isObject(val) or _.isArray(val)\n        res = @dereferenceArgs(val, locals, toSkip)\n        return res if res is false\n      else if _.isString(val) and toSkip[val]\n        return false\n    return args\n\n  handleTick: (e) =>\n    if @lastTimeStamp\n      @tick(e.timeStamp - @lastTimeStamp)\n    @lastTimeStamp = e.timeStamp\n\n  tick: (delta) ->\n    return if @paused or not @baseMovieClip\n    return @paused = true if @animLength is 1\n    newFrame = @currentFrame + @framerate * delta / 1000\n\n    if newFrame > @animLength\n      if @goesTo\n        @gotoAndPlay(@goesTo)\n        return\n      else if not @loop\n        @paused = true\n        newFrame = @animLength - 1\n        _.defer => @dispatchEvent('animationend')\n      else\n        newFrame = newFrame % @animLength\n\n    translatedFrame = newFrame\n\n    if @frames\n      prevFrame = Math.floor(newFrame)\n      nextFrame = Math.ceil(newFrame)\n      if prevFrame is nextFrame\n        translatedFrame = @frames[newFrame]\n      else if nextFrame is @frames.length\n        translatedFrame = @frames[prevFrame]\n      else\n        # interpolate between frames\n        pct = newFrame % 1\n        newFrameIndex = @frames[prevFrame] + (pct * (@frames[nextFrame] - @frames[prevFrame]))\n        translatedFrame = newFrameIndex\n\n    @currentFrame = newFrame\n    return if translatedFrame is @baseMovieClip.currentFrame\n\n    @baseMovieClip.specialGoToAndStop(translatedFrame)\n    for movieClip in @childMovieClips\n      movieClip.specialGoToAndStop(if movieClip.mode is 'single' then movieClip.startPosition else newFrame)\n\n    @children = []\n    @takeChildrenFromMovieClip(@baseMovieClip, @)\n\n  takeChildrenFromMovieClip: (movieClip, recipientContainer) ->\n    for child in movieClip.childrenCopy\n      if child instanceof createjs.MovieClip\n        childRecipient = new createjs.SpriteContainer(@spriteSheet)\n        @takeChildrenFromMovieClip(child, childRecipient)\n        for prop in ['regX', 'regY', 'rotation', 'scaleX', 'scaleY', 'skewX', 'skewY', 'x', 'y']\n          childRecipient[prop] = child[prop]\n        recipientContainer.addChild(childRecipient)\n      else\n        recipientContainer.addChild(child)\n\n\n#  _getBounds: createjs.SpriteContainer.prototype.getBounds\n#  getBounds: -> @baseMovieClip?.getBounds() or @children[0]?.getBounds() or @_getBounds()\n","SpriteBuilder = require 'lib/sprites/SpriteBuilder'\n\nfloors = ['Dungeon Floor', 'Indoor Floor', 'Grass', 'Grass01', 'Grass02', 'Grass03', 'Grass04', 'Grass05', 'Goal Trigger', 'Obstacle', 'Sand 01', 'Sand 02', 'Sand 03', 'Sand 04', 'Sand 05', 'Sand 06', 'Talus 1', 'Talus 2', 'Talus 3', 'Talus 4', 'Talus 5', 'Talus 6', 'Firn 1', 'Firn 2', 'Firn 3', 'Firn 4', 'Firn 5', 'Firn 6', 'Ice Rink 1', 'Ice Rink 2', 'Ice Rink 3', 'Firn Cliff', 'VR Floor', 'Classroom Floor']\n\ncliffs = ['Dungeon Pit', 'Grass Cliffs']\n\nmodule.exports = class SingularSprite extends createjs.Sprite\n  childMovieClips: null\n\n  constructor: (@spriteSheet, @thangType, @spriteSheetPrefix, @resolutionFactor=SPRITE_RESOLUTION_FACTOR) ->\n    super(@spriteSheet)\n\n  destroy: ->\n    @removeAllEventListeners()\n\n  gotoAndPlay: (actionName) -> @goto(actionName, false)\n  gotoAndStop: (actionName) -> @goto(actionName, true)\n  _gotoAndPlay: createjs.Sprite.prototype.gotoAndPlay\n  _gotoAndStop: createjs.Sprite.prototype.gotoAndStop\n\n  goto: (actionName, @paused=true) ->\n    @actionNotSupported = false\n\n    action = @thangType.getActions()[actionName]\n    randomStart = _.string.startsWith(actionName, 'move')\n    reg = action.positions?.registration or @thangType.get('positions')?.registration or {x:0, y:0}\n\n    if action.animation\n      @framerate = (action.framerate ? 20) * (action.speed ? 1)\n\n      func = if @paused then '_gotoAndStop' else '_gotoAndPlay'\n      animationName = @spriteSheetPrefix + actionName\n      @[func](animationName)\n      if @currentFrame is 0 or @usePlaceholders\n        @_gotoAndStop(0)\n        @notifyActionNeedsRender(action)\n        bounds = @thangType.get('raw')?.animations?[action.animation]?.bounds # checking for just-prerendered-spritesheet thangs\n        bounds ?= [0, 0, 1, 1]\n        actionScale = (action.scale ? @thangType.get('scale') ? 1)\n        @scaleX = actionScale * bounds[2] / (SPRITE_PLACEHOLDER_WIDTH * @resolutionFactor)\n        @scaleY = actionScale * bounds[3] / (SPRITE_PLACEHOLDER_WIDTH * @resolutionFactor)\n        @regX = (SPRITE_PLACEHOLDER_WIDTH * @resolutionFactor) * ((-reg.x - bounds[0]) / bounds[2])\n        @regY = (SPRITE_PLACEHOLDER_WIDTH * @resolutionFactor) * ((-reg.y - bounds[1]) / bounds[3])\n      else\n        scale = @resolutionFactor * (action.scale ? @thangType.get('scale') ? 1)\n        @regX = -reg.x * scale\n        @regY = -reg.y * scale\n        @scaleX = @scaleY = 1 / @resolutionFactor\n        @framerate = action.framerate or 20\n        if randomStart and frames = @spriteSheet.getAnimation(animationName)?.frames\n          @currentAnimationFrame = Math.floor(Math.random() * frames.length)\n\n    if action.container\n      animationName = @spriteSheetPrefix + actionName\n      @_gotoAndStop(animationName)\n      if @currentFrame is 0 or @usePlaceholders\n        @_gotoAndStop(0)\n        @notifyActionNeedsRender(action)\n        bounds = @thangType.get('raw').containers[action.container].b\n        actionScale = (action.scale ? @thangType.get('scale') ? 1)\n        @scaleX = actionScale * bounds[2] / (SPRITE_PLACEHOLDER_WIDTH * @resolutionFactor)\n        @scaleY = actionScale * bounds[3] / (SPRITE_PLACEHOLDER_WIDTH * @resolutionFactor)\n        @regX = (SPRITE_PLACEHOLDER_WIDTH * @resolutionFactor) * ((-reg.x - bounds[0]) / bounds[2])\n        @regY = (SPRITE_PLACEHOLDER_WIDTH * @resolutionFactor) * ((-reg.y - bounds[1]) / bounds[3])\n      else\n        scale = @resolutionFactor * (action.scale ? @thangType.get('scale') ? 1)\n        @regX = -reg.x * scale\n        @regY = -reg.y * scale\n        @scaleX = @scaleY = 1 / @resolutionFactor\n\n    @scaleX *= -1 if action.flipX\n    @scaleY *= -1 if action.flipY\n    @baseScaleX = @scaleX\n    @baseScaleY = @scaleY\n    if @camera and @thangType.get('name') in floors\n      @baseScaleY *= @camera.y2x\n    else if @camera and @thangType.get('name') in cliffs\n      if actionName is 'idle_side'\n        @baseScaleX *= @camera.x2y# / 0.85\n        @baseScaleY *= @camera.y2x * 0.85\n      else\n        @baseScaleY *= @camera.y2x / 0.85\n    @currentAnimation = actionName\n    return\n\n  notifyActionNeedsRender: (action) ->\n    @lank?.trigger('action-needs-render', @lank, action)\n","CocoClass = require 'core/CocoClass'\nTrailMaster = require './TrailMaster'\nDropper = require './Dropper'\nAudioPlayer = require 'lib/AudioPlayer'\n{me} = require 'core/auth'\nCamera = require './Camera'\nCameraBorder = require './CameraBorder'\nLayer = require('./LayerAdapter')\nLetterbox = require './Letterbox'\nDimmer = require './Dimmer'\nCountdownScreen = require './CountdownScreen'\nPlaybackOverScreen = require './PlaybackOverScreen'\nDebugDisplay = require './DebugDisplay'\nCoordinateDisplay = require './CoordinateDisplay'\nCoordinateGrid = require './CoordinateGrid'\nLankBoss = require './LankBoss'\nPointChooser = require './PointChooser'\nRegionChooser = require './RegionChooser'\nMusicPlayer = require './MusicPlayer'\nGameUIState = require 'models/GameUIState'\n\nresizeDelay = 500  # At least as much as $level-resize-transition-time.\n\nmodule.exports = Surface = class Surface extends CocoClass\n  stage: null\n\n  normalLayers: null\n  surfaceLayer: null\n  surfaceTextLayer: null\n  screenLayer: null\n  gridLayer: null\n\n  lankBoss: null\n\n  debugDisplay: null\n  currentFrame: 0\n  lastFrame: null\n  totalFramesDrawn: 0\n  playing: false  # play vs. pause -- match default button state in playback.jade\n  dead: false  # if we kill it for some reason\n  imagesLoaded: false\n  worldLoaded: false\n  scrubbing: false\n  debug: false\n\n  defaults:\n    paths: true\n    grid: false\n    navigateToSelection: true\n    choosing: false # 'point', 'region', 'ratio-region'\n    coords: null  # use world defaults, or set to false/true to override\n    showInvisible: false\n    frameRate: 30  # Best as a divisor of 60, like 15, 30, 60, with RAF_SYNCHED timing.\n    levelType: 'hero'\n\n  subscriptions:\n    'level:disable-controls': 'onDisableControls'\n    'level:enable-controls': 'onEnableControls'\n    'level:set-playing': 'onSetPlaying'\n    'level:set-debug': 'onSetDebug'\n    'level:toggle-debug': 'onToggleDebug'\n    'level:toggle-pathfinding': 'onTogglePathFinding'\n    'level:set-time': 'onSetTime'\n    'camera:set-camera': 'onSetCamera'\n    'level:restarted': 'onLevelRestarted'\n    'god:new-world-created': 'onNewWorld'\n    'god:streaming-world-updated': 'onNewWorld'\n    'tome:cast-spells': 'onCastSpells'\n    'level:set-letterbox': 'onSetLetterbox'\n    'application:idle-changed': 'onIdleChanged'\n    'camera:zoom-updated': 'onZoomUpdated'\n    'playback:real-time-playback-started': 'onRealTimePlaybackStarted'\n    'playback:real-time-playback-ended': 'onRealTimePlaybackEnded'\n    'level:flag-color-selected': 'onFlagColorSelected'\n    'tome:manual-cast': 'onManualCast'\n    'playback:stop-real-time-playback': 'onStopRealTimePlayback'\n\n  shortcuts:\n    'ctrl+\\\\, ⌘+\\\\': 'onToggleDebug'\n    'ctrl+o, ⌘+o': 'onTogglePathFinding'\n\n\n\n  #- Initialization\n\n  constructor: (@world, @normalCanvas, @webGLCanvas, givenOptions) ->\n    super()\n    $(window).on('keydown', @onKeyEvent)\n    $(window).on('keyup', @onKeyEvent)\n    @normalLayers = []\n    @options = _.clone(@defaults)\n    @options = _.extend(@options, givenOptions) if givenOptions\n    @handleEvents = @options.handleEvents ? true\n    @gameUIState = @options.gameUIState or new GameUIState({\n      canDragCamera: true\n    })\n    @realTimeInputEvents = @gameUIState.get('realTimeInputEvents')\n    @listenTo(@gameUIState, 'sprite:mouse-down', @onSpriteMouseDown)\n    @onResize = _.debounce @onResize, resizeDelay\n    @initEasel()\n    @initAudio()\n    $(window).on 'resize', @onResize\n    if @world.ended\n      _.defer => @setWorld @world\n\n  initEasel: ->\n    @normalStage = new createjs.Stage(@normalCanvas[0])\n    @webGLStage = new createjs.SpriteStage(@webGLCanvas[0])\n    @normalStage.nextStage = @webGLStage\n    @camera = new Camera(@webGLCanvas, { @gameUIState, @handleEvents })\n    AudioPlayer.camera = @camera unless @options.choosing\n\n    @normalLayers.push @surfaceTextLayer = new Layer name: 'Surface Text', layerPriority: 1, transform: Layer.TRANSFORM_SURFACE_TEXT, camera: @camera\n    @normalLayers.push @gridLayer = new Layer name: 'Grid', layerPriority: 2, transform: Layer.TRANSFORM_SURFACE, camera: @camera\n    @normalLayers.push @screenLayer = new Layer name: 'Screen', layerPriority: 3, transform: Layer.TRANSFORM_SCREEN, camera: @camera\n#    @normalLayers.push @cameraBorderLayer = new Layer name: 'Camera Border', layerPriority: 4, transform: Layer.TRANSFORM_SURFACE, camera: @camera\n#    @cameraBorderLayer.addChild @cameraBorder = new CameraBorder(bounds: @camera.bounds)\n    @normalStage.addChild (layer.container for layer in @normalLayers)...\n\n    canvasWidth = parseInt @normalCanvas.attr('width'), 10\n    canvasHeight = parseInt @normalCanvas.attr('height'), 10\n    @screenLayer.addChild new Letterbox canvasWidth: canvasWidth, canvasHeight: canvasHeight\n\n    @lankBoss = new LankBoss({\n      @camera\n      @webGLStage\n      @surfaceTextLayer\n      @world\n      thangTypes: @options.thangTypes\n      choosing: @options.choosing\n      navigateToSelection: @options.navigateToSelection\n      showInvisible: @options.showInvisible\n      playerNames: if @options.levelType is 'course-ladder' then @options.playerNames else null\n      @gameUIState\n      @handleEvents\n    })\n    @countdownScreen = new CountdownScreen camera: @camera, layer: @screenLayer, showsCountdown: @world.showsCountdown\n    unless @options.levelType is 'game-dev'\n      @playbackOverScreen = new PlaybackOverScreen camera: @camera, layer: @screenLayer, playerNames: @options.playerNames\n      @normalStage.addChildAt @playbackOverScreen.dimLayer, 0  # Put this below the other layers, actually, so we can more easily read text on the screen.\n    @initCoordinates()\n    @webGLStage.enableMouseOver(10)\n    @webGLStage.addEventListener 'stagemousemove', @onMouseMove\n    @webGLStage.addEventListener 'stagemousedown', @onMouseDown\n    @webGLStage.addEventListener 'stagemouseup', @onMouseUp\n    @webGLCanvas.on 'mousewheel', @onMouseWheel\n    @hookUpChooseControls() if @options.choosing # TODO: figure this stuff out\n    createjs.Ticker.timingMode = createjs.Ticker.RAF_SYNCHED\n    createjs.Ticker.setFPS @options.frameRate\n    @onResize()\n\n  initCoordinates: ->\n    @coordinateGrid ?= new CoordinateGrid {camera: @camera, layer: @gridLayer, textLayer: @surfaceTextLayer}, @world.size()\n    @coordinateGrid.showGrid() if @world.showGrid or @options.grid\n    showCoordinates = if @options.coords? then @options.coords else @world.showCoordinates\n    @coordinateDisplay ?= new CoordinateDisplay camera: @camera, layer: @surfaceTextLayer if showCoordinates\n\n  hookUpChooseControls: ->\n    chooserOptions = stage: @webGLStage, surfaceLayer: @surfaceTextLayer, camera: @camera, restrictRatio: @options.choosing is 'ratio-region'\n    klass = if @options.choosing is 'point' then PointChooser else RegionChooser\n    @chooser = new klass chooserOptions\n\n  initAudio: ->\n    @musicPlayer = new MusicPlayer()\n\n\n\n  #- Setting the world\n\n  setWorld: (@world) ->\n    @worldLoaded = true\n    @lankBoss.world = @world\n    @restoreWorldState() unless @options.choosing\n    @showLevel()\n    @updateState true if @loaded\n    @onFrameChanged()\n\n  showLevel: ->\n    return if @destroyed\n    return if @loaded\n    @loaded = true\n    @lankBoss.createMarks()\n    @updateState true\n    @drawCurrentFrame()\n    createjs.Ticker.addEventListener 'tick', @tick\n    Backbone.Mediator.publish 'level:started', {}\n\n  #- Update loop\n\n  tick: (e) =>\n    # seems to be a bug where only one object can register with the Ticker...\n    oldFrame = @currentFrame\n    oldWorldFrame = Math.floor oldFrame\n    lastFrame = @world.frames.length - 1\n    framesDropped = 0\n    while true\n      Dropper.tick()\n      # Skip some frame updates unless we're playing and not at end (or we haven't drawn much yet)\n      frameAdvanced = (@playing and @currentFrame < lastFrame) or @totalFramesDrawn < 2\n      if frameAdvanced and @playing\n        advanceBy = @world.frameRate / @options.frameRate\n        if @fastForwardingToFrame and @currentFrame < @fastForwardingToFrame - advanceBy\n          advanceBy = Math.min(@currentFrame + advanceBy * @fastForwardingSpeed, @fastForwardingToFrame) - @currentFrame\n        else if @fastForwardingToFrame\n          @fastForwardingToFrame = @fastForwardingSpeed = null\n        @currentFrame += advanceBy\n        @currentFrame = Math.min @currentFrame, lastFrame\n      newWorldFrame = Math.floor @currentFrame\n      if Dropper.drop()\n        ++framesDropped\n      else\n        worldFrameAdvanced = newWorldFrame isnt oldWorldFrame\n        if worldFrameAdvanced\n          # Only restore world state when it will correspond to an integer WorldFrame, not interpolated frame.\n          @restoreWorldState()\n          oldWorldFrame = newWorldFrame\n        break\n    if frameAdvanced and not worldFrameAdvanced\n      # We didn't end the above loop on an integer frame, so do the world state update.\n      @restoreWorldState()\n\n    # these are skipped for dropped frames\n    @updateState @currentFrame isnt oldFrame\n    @drawCurrentFrame e\n    @onFrameChanged()\n    Backbone.Mediator.publish('surface:ticked', {dt: 1 / @options.frameRate})\n    mib = @webGLStage.mouseInBounds\n    if @mouseInBounds isnt mib\n      Backbone.Mediator.publish('surface:mouse-' + (if mib then 'over' else 'out'), {})\n      @mouseInBounds = mib\n      @mouseIsDown = false\n\n  restoreWorldState: ->\n    frame = @world.getFrame(@getCurrentFrame())\n    return unless frame\n    frame.restoreState()\n    current = Math.max(0, Math.min(@currentFrame, @world.frames.length - 1))\n    if current - Math.floor(current) > 0.01 and Math.ceil(current) < @world.frames.length - 1\n      next = Math.ceil current\n      ratio = current % 1\n      @world.frames[next].restorePartialState ratio if next > 1\n    frame.clearEvents() if parseInt(@currentFrame) is parseInt(@lastFrame)\n    @lankBoss.updateSounds() if parseInt(@currentFrame) isnt parseInt(@lastFrame)\n\n  updateState: (frameChanged) ->\n    # world state must have been restored in @restoreWorldState\n    if @handleEvents\n      if @playing and @currentFrame < @world.frames.length - 1 and @heroLank and not @mouseIsDown and @camera.newTarget isnt @heroLank.sprite and @camera.target isnt @heroLank.sprite\n        @camera.zoomTo @heroLank.sprite, @camera.zoom, 750\n    @lankBoss.update frameChanged\n    @camera.updateZoom()  # Make sure to do this right after the LankBoss updates, not before, so it can properly target sprite positions.\n    @dimmer?.setSprites @lankBoss.lanks\n\n  drawCurrentFrame: (e) ->\n    ++@totalFramesDrawn\n    @normalStage.update e\n    @webGLStage.update e\n\n\n  #- Setting play/pause and progress\n\n  setProgress: (progress, scrubDuration=500) ->\n    progress = Math.max(Math.min(progress, 1), 0.0)\n\n    @fastForwardingToFrame = null\n    @scrubbing = true\n    onTweenEnd = =>\n      @scrubbingTo = null\n      @scrubbing = false\n      @scrubbingPlaybackSpeed = null\n\n    if @scrubbingTo?\n      # cut to the chase for existing tween\n      createjs.Tween.removeTweens(@)\n      @currentFrame = @scrubbingTo\n\n    @scrubbingTo = Math.round(progress * (@world.frames.length - 1))\n    @scrubbingTo = Math.max @scrubbingTo, 1\n    @scrubbingTo = Math.min @scrubbingTo, @world.frames.length - 1\n    @scrubbingPlaybackSpeed = Math.sqrt(Math.abs(@scrubbingTo - @currentFrame) * @world.dt / (scrubDuration or 0.5))\n    if scrubDuration\n      t = createjs.Tween\n        .get(@)\n        .to({currentFrame: @scrubbingTo}, scrubDuration, createjs.Ease.sineInOut)\n        .call(onTweenEnd)\n      t.addEventListener('change', @onFramesScrubbed)\n    else\n      @currentFrame = @scrubbingTo\n      @onFramesScrubbed()  # For performance, don't play these for instant transitions.\n      onTweenEnd()\n\n    return unless @loaded\n    @updateState true\n    @onFrameChanged()\n\n  onFramesScrubbed: (e) =>\n    return unless @loaded\n    if e\n      # Gotta play all the sounds when scrubbing (but not when doing an immediate transition).\n      rising = @currentFrame > @lastFrame\n      actualCurrentFrame = @currentFrame\n      tempFrame = if rising then Math.ceil(@lastFrame) else Math.floor(@lastFrame)\n      while true  # temporary fix to stop cacophony\n        break if rising and tempFrame > actualCurrentFrame\n        break if (not rising) and tempFrame < actualCurrentFrame\n        @currentFrame = tempFrame\n        frame = @world.getFrame(@getCurrentFrame())\n        frame.restoreState()\n        volume = Math.max(0.05, Math.min(1, 1 / @scrubbingPlaybackSpeed))\n        lank.playSounds false, volume for lank in @lankBoss.lankArray\n        tempFrame += if rising then 1 else -1\n      @currentFrame = actualCurrentFrame\n\n    @restoreWorldState()\n    @lankBoss.update true\n    @onFrameChanged()\n\n  getCurrentFrame: ->\n    return Math.max(0, Math.min(Math.floor(@currentFrame), @world.frames.length - 1))\n\n  setPaused: (paused) ->\n    # We want to be able to essentially stop rendering the surface if it doesn't need to animate anything.\n    # If pausing, though, we want to give it enough time to finish any tweens.\n    performToggle = =>\n      createjs.Ticker.setFPS if paused then 1 else @options.frameRate\n      @surfacePauseTimeout = null\n    clearTimeout @surfacePauseTimeout if @surfacePauseTimeout\n    clearTimeout @surfaceZoomPauseTimeout if @surfaceZoomPauseTimeout\n    @surfacePauseTimeout = @surfaceZoomPauseTimeout = null\n    if paused\n      @surfacePauseTimeout = _.delay performToggle, 2000\n      @lankBoss.stop()\n      @trailmaster?.stop()\n      @playbackOverScreen?.show()\n    else\n      performToggle()\n      @lankBoss.play()\n      @trailmaster?.play()\n      @playbackOverScreen?.hide()\n\n\n\n  #- Changes and events that only need to happen when the frame has changed\n\n  onFrameChanged: (force) ->\n    @currentFrame = Math.min(@currentFrame, @world.frames.length - 1)\n    @debugDisplay?.updateFrame @currentFrame\n    return if @currentFrame is @lastFrame and not force\n    progress = @getProgress()\n    Backbone.Mediator.publish('surface:frame-changed',\n      selectedThang: @lankBoss.selectedLank?.thang\n      progress: progress\n      frame: @currentFrame\n      world: @world\n    )\n\n    if (not @world.indefiniteLength) and @lastFrame < @world.frames.length and @currentFrame >= @world.totalFrames - 1\n      @ended = true\n      @setPaused true\n      Backbone.Mediator.publish 'surface:playback-ended', {}\n      @updatePaths()  # TODO: this is a hack to make sure paths are on the first time the level loads\n    else if @currentFrame < @world.totalFrames and @ended\n      @ended = false\n      @setPaused false\n      Backbone.Mediator.publish 'surface:playback-restarted', {}\n\n    @lastFrame = @currentFrame\n\n  getProgress: -> @currentFrame / Math.max(1, @world.frames.length - 1)\n\n\n\n  #- Subscription callbacks\n\n  onToggleDebug: (e) ->\n    e?.preventDefault?()\n    Backbone.Mediator.publish 'level:set-debug', {debug: not @debug}\n\n  onSetDebug: (e) ->\n    return if e.debug is @debug\n    @debug = e.debug\n    if @debug and not @debugDisplay\n      @screenLayer.addChild @debugDisplay = new DebugDisplay canvasWidth: @camera.canvasWidth, canvasHeight: @camera.canvasHeight\n\n  onLevelRestarted: (e) ->\n    @setProgress 0, 0\n\n  onSetCamera: (e) ->\n    if e.thangID\n      return unless target = @lankBoss.lankFor(e.thangID)?.sprite\n    else if e.pos\n      target = @camera.worldToSurface e.pos\n    else\n      target = null\n    @camera.setBounds e.bounds if e.bounds\n#    @cameraBorder.updateBounds @camera.bounds\n    if @handleEvents\n      @camera.zoomTo target, e.zoom, e.duration  # TODO: SurfaceScriptModule perhaps shouldn't assign e.zoom if not set\n\n  onZoomUpdated: (e) ->\n    if @ended\n      @setPaused false\n      @surfaceZoomPauseTimeout = _.delay (=> @setPaused true), 3000\n    @zoomedIn = e.zoom > e.minZoom * 1.1\n    @updateGrabbability()\n\n  updateGrabbability: ->\n    @webGLCanvas.toggleClass 'grabbable', @zoomedIn and not @playing and not @disabled\n\n  onDisableControls: (e) ->\n    return if e.controls and not ('surface' in e.controls)\n    @setDisabled true\n    @dimmer ?= new Dimmer camera: @camera, layer: @screenLayer\n    @dimmer.setSprites @lankBoss.lanks\n\n  onEnableControls: (e) ->\n    return if e.controls and not ('surface' in e.controls)\n    @setDisabled false\n\n  onSetLetterbox: (e) ->\n    @setDisabled e.on\n\n  setDisabled: (@disabled) ->\n    @lankBoss.disabled = @disabled\n    @updateGrabbability()\n\n  onSetPlaying: (e) ->\n    @playing = (e ? {}).playing ? true\n    @setPlayingCalled = true\n    if @playing and @currentFrame >= (@world.totalFrames - 5)\n      @currentFrame = 1  # Go back to the beginning (but not frame 0, that frame is weird)\n    if @fastForwardingToFrame and not @playing\n      @fastForwardingToFrame = null\n    @updateGrabbability()\n\n  onSetTime: (e) ->\n    toFrame = @currentFrame\n    if e.time?\n      @worldLifespan = @world.frames.length / @world.frameRate\n      e.ratio = e.time / @worldLifespan\n    if e.ratio?\n      toFrame = @world.frames.length * e.ratio\n    if e.frameOffset\n      toFrame += e.frameOffset\n    if e.ratioOffset\n      toFrame += @world.frames.length * e.ratioOffset\n    unless _.isNumber(toFrame) and not _.isNaN(toFrame)\n      return console.error('set-time event', e, 'produced invalid target frame', toFrame)\n    @setProgress(toFrame / @world.frames.length, e.scrubDuration)\n\n  onCastSpells: (e) ->\n    return if e.preload\n    @setPaused false if @ended\n    @casting = true\n    @setPlayingCalled = false  # Don't overwrite playing settings if they changed by, say, scripts.\n    @frameBeforeCast = @currentFrame\n    # This is where I wanted to trigger a rewind, but it turned out to be pretty complicated, since the new world gets updated everywhere, and you don't want to rewind through that.\n    @setProgress 0, 0\n\n  onNewWorld: (event) ->\n    return unless event.world.name is @world.name\n    @onStreamingWorldUpdated event\n\n  onStreamingWorldUpdated: (event) ->\n    @casting = false\n    @lankBoss.play()\n\n    # This has a tendency to break scripts that are waiting for playback to change when the level is loaded\n    # so only run it after the first world is created.\n    Backbone.Mediator.publish 'level:set-playing', {playing: true} unless event.firstWorld or @setPlayingCalled\n\n    @setWorld event.world\n    @onFrameChanged(true)\n    fastForwardBuffer = 2\n    if @playing and not @realTime and (ffToFrame = Math.min(event.firstChangedFrame, @frameBeforeCast, @world.frames.length - 1)) and ffToFrame > @currentFrame + fastForwardBuffer * @world.frameRate\n      @fastForwardingToFrame = ffToFrame\n      @fastForwardingSpeed = Math.max 3, 3 * (@world.maxTotalFrames * @world.dt) / 60\n    else if @realTime\n      buffer = if @world.indefiniteLength then 0 else @world.realTimeBufferMax\n      lag = (@world.frames.length - 1) * @world.dt - @world.age\n      intendedLag = @world.dt + buffer\n      if lag > intendedLag * 1.2\n        @fastForwardingToFrame = @world.frames.length - buffer * @world.frameRate\n        @fastForwardingSpeed = lag / intendedLag\n      else\n        @fastForwardingToFrame = @fastForwardingSpeed = null\n#    console.log \"on new world, lag\", lag, \"intended lag\", intendedLag, \"fastForwardingToFrame\", @fastForwardingToFrame, \"speed\", @fastForwardingSpeed, \"cause we are at\", @world.age, \"of\", @world.frames.length * @world.dt\n    if event.finished\n      @updatePaths()\n    else\n      @hidePaths()\n\n  onIdleChanged: (e) ->\n    @setPaused e.idle unless @ended\n\n\n\n  #- Mouse event callbacks\n\n  onMouseMove: (e) =>\n    @mouseScreenPos = {x: e.stageX, y: e.stageY}\n    return if @disabled\n    Backbone.Mediator.publish 'surface:mouse-moved', x: e.stageX, y: e.stageY\n    @gameUIState.trigger('surface:stage-mouse-move', { originalEvent: e })\n\n  onMouseDown: (e) =>\n    return if @disabled\n    cap = @camera.screenToCanvas({x: e.stageX, y: e.stageY})\n    # getObject(s)UnderPoint is broken, so we have to use the private method to get what we want\n    onBackground = not @webGLStage._getObjectsUnderPoint(e.stageX, e.stageY, null, true)\n\n    wop = @camera.screenToWorld x: e.stageX, y: e.stageY\n    event = { onBackground: onBackground, x: e.stageX, y: e.stageY, originalEvent: e, worldPos: wop }\n    Backbone.Mediator.publish 'surface:stage-mouse-down', event\n    Backbone.Mediator.publish 'tome:focus-editor', {}\n    @gameUIState.trigger('surface:stage-mouse-down', event)\n    @mouseIsDown = true\n\n  onSpriteMouseDown: (e) =>\n    return unless @realTime\n    @realTimeInputEvents.add({\n      type: 'mousedown'\n      pos: @camera.screenToWorld x: e.originalEvent.stageX, y: e.originalEvent.stageY\n      time: @world.dt * @world.frames.length\n      thangID: e.sprite.thang.id\n    })\n\n  onMouseUp: (e) =>\n    return if @disabled\n    onBackground = not @webGLStage.hitTest e.stageX, e.stageY\n    event = { onBackground: onBackground, x: e.stageX, y: e.stageY, originalEvent: e }\n    Backbone.Mediator.publish 'surface:stage-mouse-up', event\n    Backbone.Mediator.publish 'tome:focus-editor', {}\n    @gameUIState.trigger('surface:stage-mouse-up', event)\n    @mouseIsDown = false\n\n  onMouseWheel: (e) =>\n    # https://github.com/brandonaaron/jquery-mousewheel\n    e.preventDefault()\n    return if @disabled\n    event =\n      deltaX: e.deltaX\n      deltaY: e.deltaY\n      canvas: @webGLCanvas\n    event.screenPos = @mouseScreenPos if @mouseScreenPos\n    Backbone.Mediator.publish 'surface:mouse-scrolled', event unless @disabled\n    @gameUIState.trigger('surface:mouse-scrolled', event)\n\n\n  #- Keyboard callbacks\n\n  onKeyEvent: (e) =>\n    return unless @realTime\n    event = _.pick(e, 'type', 'keyCode', 'ctrlKey', 'metaKey', 'shiftKey')\n    event.time = @world.dt * @world.frames.length\n    @realTimeInputEvents.add(event)\n\n  #- Canvas callbacks\n\n  onResize: (e) =>\n    return if @destroyed or @options.choosing\n    oldWidth = parseInt @normalCanvas.attr('width'), 10\n    oldHeight = parseInt @normalCanvas.attr('height'), 10\n    aspectRatio = oldWidth / oldHeight\n    pageWidth = $('#page-container').width() - 17  # 17px nano scroll bar\n    if application.isIPadApp\n      newWidth = 1024\n      newHeight = newWidth / aspectRatio\n    else if @options.resizeStrategy is 'wrapper-size'\n      newWidth = $('#canvas-wrapper').width()\n      newHeight = newWidth / aspectRatio\n    else if @realTime or @options.spectateGame\n      pageHeight = window.innerHeight - $('#control-bar-view').outerHeight() - $('#playback-view').outerHeight()\n      newWidth = Math.min pageWidth, pageHeight * aspectRatio\n      newHeight = newWidth / aspectRatio\n    else if $('#thangs-tab-view')\n      newWidth = $('#canvas-wrapper').width()\n      newHeight = newWidth / aspectRatio\n    else\n      newWidth = 0.55 * pageWidth\n      newHeight = newWidth / aspectRatio\n    return unless newWidth > 0 and newHeight > 0\n\n    #scaleFactor = if application.isIPadApp then 2 else 1  # Retina\n    scaleFactor = 1\n    if @options.stayVisible\n      availableHeight = window.innerHeight\n      availableHeight -= $('.ad-container').outerHeight()\n      availableHeight -= $('#game-area').outerHeight() - $('#canvas-wrapper').outerHeight()\n      scaleFactor = availableHeight / newHeight if availableHeight < newHeight\n    newWidth *= scaleFactor\n    newHeight *= scaleFactor\n\n    return if newWidth is oldWidth and newHeight is oldHeight and not @options.spectateGame\n    return if newWidth < 200 or newHeight < 200\n    @normalCanvas.add(@webGLCanvas).attr width: newWidth, height: newHeight\n    @trigger 'resize', { width: newWidth, height: newHeight }\n\n    # Cannot do this to the webGLStage because it does not use scaleX/Y.\n    # Instead the LayerAdapter scales webGL-enabled layers.\n    @webGLStage.updateViewport(@webGLCanvas[0].width, @webGLCanvas[0].height)\n    @normalStage.scaleX *= newWidth / oldWidth\n    @normalStage.scaleY *= newHeight / oldHeight\n    @camera.onResize newWidth, newHeight\n    if @options.spectateGame\n      # Since normalCanvas is absolutely positioned, it needs help aligning with webGLCanvas.\n      offset = @webGLCanvas.offset().left - ($('#page-container').innerWidth() - $('#canvas-wrapper').innerWidth()) / 2\n      @normalCanvas.css 'left', offset\n\n  #- Camera focus on hero\n  focusOnHero: ->\n    hadHero = @heroLank\n    @heroLank = @lankBoss.lankFor 'Hero Placeholder'\n    if me.team is 'ogres'\n      # TODO: do this for real\n      @heroLank = @lankBoss.lankFor 'Hero Placeholder 1'\n    @updatePaths() if not hadHero\n\n  #- Real-time playback\n\n  onRealTimePlaybackStarted: (e) ->\n    return if @realTime\n    @realTimeInputEvents.reset()\n    @realTime = true\n    @onResize()\n    @playing = false  # Will start when countdown is done.\n    if @heroLank\n      @previousCameraZoom = @camera.zoom\n      #@camera.zoomTo @heroLank.sprite, 2, 3000  # This makes flag placement hard, now that we're only rarely using this as a coolcam.\n\n  onRealTimePlaybackEnded: (e) ->\n    return unless @realTime\n    @realTime = false\n    @onResize()\n    _.delay @onResize, resizeDelay + 100  # Do it again just to be double sure that we don't stay zoomed in due to timing problems.\n    @normalCanvas.add(@webGLCanvas).removeClass 'flag-color-selected'\n    if @handleEvents\n      if @previousCameraZoom\n        @camera.zoomTo @camera.newTarget or @camera.target, @previousCameraZoom, 3000\n\n  onFlagColorSelected: (e) ->\n    @normalCanvas.add(@webGLCanvas).toggleClass 'flag-color-selected', Boolean(e.color)\n    e.pos = @camera.screenToWorld @mouseScreenPos if @mouseScreenPos\n\n  # Force sizing based on width for game-dev levels, so that the instructions panel doesn't obscure the game\n  onManualCast: ->\n    if @options.levelType is 'game-dev'\n      console.log \"Force resize strategy\"\n      @options.originalResizeStrategy = @options.resizeStrategy\n      @options.resizeStrategy = 'wrapper-size'\n\n  # Revert back to normal sizing when done playing a game-dev level\n  onStopRealTimePlayback: ->\n    if @options.levelType is 'game-dev'\n      console.log \"Reset resize strategy\"\n      @options.resizeStrategy = @options.originalResizeStrategy\n\n  updatePaths: ->\n    return unless @options.paths and @heroLank\n    @hidePaths()\n    return if @world.showPaths is 'never'\n    layerAdapter = @lankBoss.layerAdapters['Path']\n    @trailmaster ?= new TrailMaster @camera, layerAdapter\n    @paths = @trailmaster.generatePaths @world, @heroLank.thang\n    @paths.name = 'paths'\n    layerAdapter.addChild @paths\n\n  hidePaths: ->\n    return if not @paths\n    if @paths.parent\n      @paths.parent.removeChild @paths\n    @paths = null\n\n\n\n  #- Screenshot\n\n  screenshot: (scale=0.25, format='image/jpeg', quality=0.8, zoom=2) ->\n    # TODO: get screenshots working again\n    # Quality doesn't work with image/png, just image/jpeg and image/webp\n    [w, h] = [@camera.canvasWidth * @camera.canvasScaleFactorX, @camera.canvasHeight * @camera.canvasScaleFactorY]\n    margin = (1 - 1 / zoom) / 2\n    @webGLStage.cache margin * w, margin * h, w / zoom, h / zoom, scale * zoom\n    imageData = @webGLStage.cacheCanvas.toDataURL(format, quality)\n    #console.log 'Screenshot with scale', scale, 'format', format, 'quality', quality, 'was', Math.floor(imageData.length / 1024), 'kB'\n    screenshot = document.createElement('img')\n    screenshot.src = imageData\n    @webGLStage.uncache()\n    imageData\n\n\n\n  #- Path finding debugging\n\n  onTogglePathFinding: (e) ->\n    e?.preventDefault?()\n    @hidePathFinding()\n    @showingPathFinding = not @showingPathFinding\n    if @showingPathFinding then @showPathFinding() else @hidePathFinding()\n\n  hidePathFinding: ->\n    @surfaceLayer.removeChild @navRectangles if @navRectangles\n    @surfaceLayer.removeChild @navPaths if @navPaths\n    @navRectangles = @navPaths = null\n\n  showPathFinding: ->\n    @hidePathFinding()\n\n    mesh = _.values(@world.navMeshes or {})[0]\n    return unless mesh\n    @navRectangles = new createjs.Container()\n    @navRectangles.layerPriority = -1\n    @addMeshRectanglesToContainer mesh, @navRectangles\n    @surfaceLayer.addChild @navRectangles\n    @surfaceLayer.updateLayerOrder()\n\n    graph = _.values(@world.graphs or {})[0]\n    return @surfaceLayer.updateLayerOrder() unless graph\n    @navPaths = new createjs.Container()\n    @navPaths.layerPriority = -1\n    @addNavPathsToContainer graph, @navPaths\n    @surfaceLayer.addChild @navPaths\n    @surfaceLayer.updateLayerOrder()\n\n  addMeshRectanglesToContainer: (mesh, container) ->\n    for rect in mesh\n      shape = new createjs.Shape()\n      pos = @camera.worldToSurface {x: rect.x, y: rect.y}\n      dim = @camera.worldToSurface {x: rect.width, y: rect.height}\n      shape.graphics\n      .setStrokeStyle(3)\n      .beginFill('rgba(0,0,128,0.3)')\n      .beginStroke('rgba(0,0,128,0.7)')\n      .drawRect(pos.x - dim.x/2, pos.y - dim.y/2, dim.x, dim.y)\n      container.addChild shape\n\n  addNavPathsToContainer: (graph, container) ->\n    for node in _.values graph\n      for edgeVertex in node.edges\n        @drawLine node.vertex, edgeVertex, container\n\n  drawLine: (v1, v2, container) ->\n    shape = new createjs.Shape()\n    v1 = @camera.worldToSurface v1\n    v2 = @camera.worldToSurface v2\n    shape.graphics\n    .setStrokeStyle(1)\n    .moveTo(v1.x, v1.y)\n    .beginStroke('rgba(128,0,0,0.4)')\n    .lineTo(v2.x, v2.y)\n    .endStroke()\n    container.addChild shape\n\n\n\n  #- Teardown\n\n  destroy: ->\n    @camera?.destroy()\n    createjs.Ticker.removeEventListener('tick', @tick)\n    createjs.Sound.stop()\n    layer.destroy() for layer in @normalLayers\n    @lankBoss.destroy()\n    @chooser?.destroy()\n    @dimmer?.destroy()\n    @countdownScreen?.destroy()\n    @playbackOverScreen?.destroy()\n    @coordinateDisplay?.destroy()\n    @coordinateGrid?.destroy()\n    @normalStage.clear()\n    @webGLStage.clear()\n    @musicPlayer?.destroy()\n    @trailmaster?.destroy()\n    @normalStage.removeAllChildren()\n    @webGLStage.removeAllChildren()\n    @webGLStage.removeEventListener 'stagemousemove', @onMouseMove\n    @webGLStage.removeEventListener 'stagemousedown', @onMouseDown\n    @webGLStage.removeEventListener 'stagemouseup', @onMouseUp\n    @webGLStage.removeAllEventListeners()\n    @normalStage.enableDOMEvents false\n    @webGLStage.enableDOMEvents false\n    @webGLStage.enableMouseOver 0\n    @webGLCanvas.off 'mousewheel', @onMouseWheel\n    $(window).off 'resize', @onResize\n    $(window).off('keydown', @onKeyEvent)\n    $(window).off('keyup', @onKeyEvent)\n    clearTimeout @surfacePauseTimeout if @surfacePauseTimeout\n    clearTimeout @surfaceZoomPauseTimeout if @surfaceZoomPauseTimeout\n    super()\n","PAST_PATH_ALPHA = 0.75\nPAST_PATH_WIDTH = 5\nFUTURE_PATH_ALPHA = 0.75\nFUTURE_PATH_WIDTH = 4\nTARGET_ALPHA = 1\nTARGET_WIDTH = 10\nFUTURE_PATH_INTERVAL_DIVISOR = 4\nPAST_PATH_INTERVAL_DIVISOR = 2\n\nCamera = require './Camera'\nCocoClass = require 'core/CocoClass'\n\nmodule.exports = class TrailMaster extends CocoClass\n  world: null\n\n  constructor: (@camera, @layerAdapter) ->\n    super()\n    @tweenedSprites = []\n    @tweens = []\n    @listenTo @layerAdapter, 'new-spritesheet', -> @generatePaths(@world, @thang)\n\n  generatePaths: (@world, @thang) ->\n    return if @generatingPaths\n    @generatingPaths = true\n    @cleanUp()\n    @createGraphics()\n    pathDisplayObject = new createjs.SpriteContainer(@layerAdapter.spriteSheet)\n    pathDisplayObject.mouseEnabled = pathDisplayObject.mouseChildren = false\n    pathDisplayObject.addChild @createFuturePath()\n#    pathDisplayObject.addChild @createPastPath() # Just made the animated path the full path... do we want to have past and future look different again?\n    pathDisplayObject.addChild @createTargets()\n    @generatingPaths = false\n    return pathDisplayObject\n\n  cleanUp: ->\n    createjs.Tween.removeTweens(sprite) for sprite in @tweenedSprites\n    @tweenedSprites = []\n    @tweens = []\n\n  createGraphics: ->\n    @targetDotKey = @cachePathDot(TARGET_WIDTH, @colorForThang(@thang.team, TARGET_ALPHA), [0, 0, 0, 1])\n    @pastDotKey = @cachePathDot(PAST_PATH_WIDTH, @colorForThang(@thang.team, PAST_PATH_ALPHA), [0, 0, 0, 1])\n    @futureDotKey = @cachePathDot(FUTURE_PATH_WIDTH, [255, 255, 255, FUTURE_PATH_ALPHA], @colorForThang(@thang.team, 1))\n\n  cachePathDot: (width, fillColor, strokeColor) ->\n    key = \"path-dot-#{width}-#{fillColor}-#{strokeColor}\"\n    fillColor = createjs.Graphics.getRGB(fillColor...)\n    strokeColor = createjs.Graphics.getRGB(strokeColor...)\n    unless key in @layerAdapter.spriteSheet.getAnimations()\n      circle = new createjs.Shape()\n      radius = width/2\n      circle.graphics.setStrokeStyle(width/5).beginFill(fillColor).beginStroke(strokeColor).drawCircle(0, 0, radius)\n      @layerAdapter.addCustomGraphic(key, circle, [-radius*1.5, -radius*1.5, radius*3, radius*3])\n    return key\n\n  colorForThang: (team, alpha=1.0) ->\n    rgb = [0, 255, 0]\n    rgb = [255, 0, 0] if team is 'humans'\n    rgb = [0, 0, 255] if team is 'ogres'\n    rgb.push(alpha)\n    return rgb\n\n  createPastPath: ->\n    return unless points = @world.pointsForThang @thang.id, @camera\n    interval = Math.max(1, parseInt(@world.frameRate / PAST_PATH_INTERVAL_DIVISOR))\n    params = { interval: interval, frameKey: @pastDotKey }\n    return @createPath(points, params)\n\n  createFuturePath: ->\n    return unless points = @world.pointsForThang @thang.id, @camera\n    interval = Math.max(1, parseInt(@world.frameRate / FUTURE_PATH_INTERVAL_DIVISOR))\n    params = { interval: interval, animate: true, frameKey: @futureDotKey }\n    return @createPath(points, params)\n\n  createTargets: ->\n    return unless @thang.allTargets\n    container = new createjs.SpriteContainer(@layerAdapter.spriteSheet)\n    for x, i in @thang.allTargets by 2\n      y = @thang.allTargets[i + 1]\n      sup = @camera.worldToSurface x: x, y: y\n      sprite = new createjs.Sprite(@layerAdapter.spriteSheet)\n      sprite.scaleX = sprite.scaleY = 1 / @layerAdapter.resolutionFactor\n      sprite.scaleY *= @camera.y2x\n      sprite.gotoAndStop(@targetDotKey)\n      sprite.x = sup.x\n      sprite.y = sup.y\n      container.addChild(sprite)\n    return container\n\n  createPath: (points, options={}) ->\n    options = options or {}\n    interval = options.interval or 8\n    key = options.frameKey or @pastDotKey\n    container = new createjs.SpriteContainer(@layerAdapter.spriteSheet)\n\n    for x, i in points by interval * 2\n      y = points[i + 1]\n      sprite = new createjs.Sprite(@layerAdapter.spriteSheet)\n      sprite.scaleX = sprite.scaleY = 1 / @layerAdapter.resolutionFactor\n      sprite.scaleY *= @camera.y2x\n      sprite.gotoAndStop(key)\n      sprite.x = x\n      sprite.y = y\n      container.addChild(sprite)\n      if lastSprite and options.animate\n        tween = createjs.Tween.get(lastSprite, {loop: true}).to({x:x, y:y}, 1000)\n        @tweenedSprites.push lastSprite\n        @tweens.push tween\n      lastSprite = sprite\n\n    @logged = true\n    container\n\n  play: ->\n    tween.setPaused(false) for tween in @tweens\n\n  stop: ->\n    tween.setPaused(true) for tween in @tweens\n\n  destroy: ->\n    @cleanUp()\n    super()\n","WIDTH = 20\nHEIGHT = 2\nEDGE = 0.3\n\nmodule.exports.createProgressBar = createProgressBar = (color) ->\n  g = new createjs.Graphics()\n  g.setStrokeStyle(1)\n  g.beginFill(createjs.Graphics.getRGB(0, 0, 0))\n  g.drawRect(0, -HEIGHT/2, WIDTH, HEIGHT, HEIGHT)\n  g.beginFill(createjs.Graphics.getRGB(color...))\n  g.drawRoundRect(EDGE, EDGE - HEIGHT/2, WIDTH-EDGE*2, HEIGHT-EDGE*2, HEIGHT-EDGE*2)\n  s = new createjs.Shape(g)\n  s.z = 100\n  s.bounds = [0, -HEIGHT/2, WIDTH, HEIGHT]\n  return s\n","CocoClass = require 'core/CocoClass'\nutils = require 'core/utils'\n\nmodule.exports = class GoalManager extends CocoClass\n  # The Goal Manager is created both on the main thread and\n  # each time the world is generated. The one in world generation\n  # records which code and world related goals\n  # are completed or failed, and then the results are sent back\n  # and saved to the main thread instance.\n  # The main instance handles goals based on UI notifications,\n  # and keeps track of what the goals are at any given point.\n\n  # Goals can only have only one goal property. Otherwise who knows what will happen.\n  # If you want weird goals or hybrid goals, make a custom goal.\n\n  nextGoalID: 0\n  nicks: ['GoalManager']\n\n  constructor: (@world, @initialGoals, @team, options) ->\n    super()\n    @options = options or {}\n    @init()\n\n  init: ->\n    @goals = []\n    @goalStates = {} # goalID -> object (complete, frameCompleted)\n    @userCodeMap = {} # @userCodeMap.thangID.methodName.aether.raw = codeString\n    @thangTeams = {}\n    @initThangTeams()\n    @addGoal goal for goal in @initialGoals if @initialGoals\n\n  initThangTeams: ->\n    return unless @world\n    for thang in @world.thangs when thang.team and thang.isAttackable\n      continue unless thang.team\n      @thangTeams[thang.team] = [] unless @thangTeams[thang.team]\n      @thangTeams[thang.team].push(thang.id)\n\n  subscriptions:\n    'god:new-world-created': 'onNewWorldCreated'\n    'god:new-html-goal-states': 'onNewHTMLGoalStates'\n    'level:restarted': 'onLevelRestarted'\n\n  backgroundSubscriptions:\n    'world:thang-died': 'onThangDied'\n    'world:thang-touched-goal': 'onThangTouchedGoal'\n    'world:thang-left-map': 'onThangLeftMap'\n    'world:thang-collected-item': 'onThangCollectedItem'\n    'world:user-code-problem': 'onUserCodeProblem'\n    'world:lines-of-code-counted': 'onLinesOfCodeCounted'\n\n  onLevelRestarted: ->\n    @goals = []\n    @goalStates = {}\n    @userCodeMap = {}\n    @notifyGoalChanges()\n    @addGoal goal for goal in @initialGoals if @initialGoals\n\n  # INTERFACE AND LIFETIME OVERVIEW\n\n  # world generator gets current goals from the main instance\n  getGoals: -> @goals\n\n  # background instance created by world generator,\n  # gets these goals and code, and is told to be all ears during world gen\n  setGoals: (@goals) ->\n  setCode: (@userCodeMap) -> @updateCodeGoalStates()\n  worldGenerationWillBegin: ->\n    @initGoalStates()\n    @checkForInitialUserCodeProblems()\n\n  # World generator feeds world events to the goal manager to keep track\n  submitWorldGenerationEvent: (channel, event, frameNumber) ->\n    func = @backgroundSubscriptions[channel]\n    func = utils.normalizeFunc(func, @)\n    return unless func\n    func.call(@, event, frameNumber)\n\n  # after world generation, generated goal states\n  # are grabbed to send back to main instance\n  worldGenerationEnded: (finalFrame) -> @wrapUpGoalStates(finalFrame)\n  getGoalStates: -> @goalStates\n\n  # main instance gets them and updates their existing goal states,\n  # passes the word along\n  onNewWorldCreated: (e) ->\n    @world = e.world\n    @updateGoalStates(e.goalStates) if e.goalStates?\n\n  onNewHTMLGoalStates: (e) ->\n    @updateGoalStates(e.goalStates) if e.goalStates?\n\n  updateGoalStates: (newGoalStates) ->\n    for goalID, goalState of newGoalStates\n      continue unless @goalStates[goalID]?\n      @goalStates[goalID] = goalState\n    @notifyGoalChanges()\n\n  # IMPLEMENTATION DETAILS\n\n  addGoal: (goal) ->\n    goal = $.extend(true, {}, goal)\n    goal.id = @nextGoalID++ if not goal.id\n    return if @goalStates[goal.id]?\n    @goals.push(goal)\n    goal.isPositive = @goalIsPositive goal.id\n    @goalStates[goal.id] = {status: 'incomplete', keyFrame: 0, team: goal.team}\n    @notifyGoalChanges()\n    return unless goal.notificationGoal\n    f = (channel) => (event) => @onNote(channel, event)\n    channel = goal.notificationGoal.channel\n    @addNewSubscription(channel, f(channel))\n\n  notifyGoalChanges: ->\n    return if @options.headless\n    overallStatus = @checkOverallStatus()\n    event =\n      goalStates: @goalStates\n      goals: @goals\n      overallStatus: overallStatus\n      timedOut: @world? and (@world.totalFrames is @world.maxTotalFrames and overallStatus not in ['success', 'failure'])\n    Backbone.Mediator.publish('goal-manager:new-goal-states', event)\n\n  checkOverallStatus: (ignoreIncomplete=false) ->\n    overallStatus = null\n    goals = if @goalStates then _.values @goalStates else []\n    goals = (g for g in goals when not g.optional)\n    goals = (g for g in goals when g.team in [undefined, @team]) if @team\n    statuses = (goal.status for goal in goals)\n    overallStatus = 'success' if statuses.length > 0 and _.every(statuses, (s) -> s is 'success' or (ignoreIncomplete and s is null))\n    overallStatus = 'failure' if statuses.length > 0 and 'failure' in statuses\n    #console.log 'got overallStatus', overallStatus, 'from goals', goals, 'goalStates', @goalStates, 'statuses', statuses\n    overallStatus\n\n  # WORLD GOAL TRACKING\n\n  initGoalStates: ->\n    @goalStates = {}\n    return unless @goals\n    for goal in @goals\n      state = {\n        status: null # should eventually be either 'success', 'failure', or 'incomplete'\n        keyFrame: 0 # when it became a 'success' or 'failure'\n        team: goal.team\n        optional: goal.optional\n      }\n      @initGoalState(state, [goal.killThangs, goal.saveThangs], 'killed')\n      for getTo in goal.getAllToLocations ? []\n        @initGoalState(state, [getTo.getToLocation?.who, []], 'arrived')\n      for keepFrom in goal.keepAllFromLocations ? []\n        @initGoalState(state, [[], keepFrom.keepFromLocation?.who], 'arrived')\n      @initGoalState(state, [goal.getToLocations?.who, goal.keepFromLocations?.who], 'arrived')\n      @initGoalState(state, [goal.leaveOffSides?.who, goal.keepFromLeavingOffSides?.who], 'left')\n      @initGoalState(state, [goal.collectThangs?.targets, goal.keepFromCollectingThangs?.targets], 'collected')\n      @initGoalState(state, [goal.codeProblems], 'problems')\n      @initGoalState(state, [_.keys(goal.linesOfCode ? {})], 'lines')\n      @goalStates[goal.id] = state\n\n  checkForInitialUserCodeProblems: ->\n    # There might have been some user code problems reported before the goal manager started listening.\n    return unless @world\n    for thang in @world.thangs when thang.isProgrammable\n      for message, problem of thang.publishedUserCodeProblems\n        @onUserCodeProblem {thang: thang, problem: problem}, 0\n\n  onThangDied: (e, frameNumber) ->\n    for goal in @goals ? []\n      @checkKillThangs(goal.id, goal.killThangs, e.thang, frameNumber) if goal.killThangs?\n      @checkKillThangs(goal.id, goal.saveThangs, e.thang, frameNumber) if goal.saveThangs?\n\n  checkKillThangs: (goalID, targets, thang, frameNumber) ->\n    return unless thang.id in targets or thang.team in targets\n    @updateGoalState(goalID, thang.id, 'killed', frameNumber)\n\n  onThangTouchedGoal: (e, frameNumber) ->\n    for goal in @goals ? []\n      @checkArrived(goal.id, goal.getToLocations.who, goal.getToLocations.targets, e.actor, e.touched.id, frameNumber) if goal.getToLocations?\n      if goal.getAllToLocations?\n        for getTo in goal.getAllToLocations\n          @checkArrived(goal.id, getTo.getToLocation.who, getTo.getToLocation.targets, e.actor, e.touched.id, frameNumber)\n      @checkArrived(goal.id, goal.keepFromLocations.who, goal.keepFromLocations.targets, e.actor, e.touched.id, frameNumber) if goal.keepFromLocations?\n      if goal.keepAllFromLocations?\n        for keepFrom in goal.keepAllFromLocations\n          @checkArrived(goal.id, keepFrom.keepFromLocation.who , keepFrom.keepFromLocation.targets, e.actor, e.touched.id, frameNumber )\n\n  checkArrived: (goalID, who, targets, thang, touchedID, frameNumber) ->\n    return unless touchedID in targets\n    return unless thang.id in who or thang.team in who\n    @updateGoalState(goalID, thang.id, 'arrived', frameNumber)\n\n  onThangLeftMap: (e, frameNumber) ->\n    for goal in @goals ? []\n      @checkLeft(goal.id, goal.leaveOffSides.who, goal.leaveOffSides.sides, e.thang, e.side, frameNumber) if goal.leaveOffSides?\n      @checkLeft(goal.id, goal.keepFromLeavingOffSides.who, goal.keepFromLeavingOffSides.sides, e.thang, e.side, frameNumber) if goal.keepFromLeavingOffSides?\n\n  checkLeft: (goalID, who, sides, thang, side, frameNumber) ->\n    return if sides and side and not (side in sides)\n    return unless thang.id in who or thang.team in who\n    @updateGoalState(goalID, thang.id, 'left', frameNumber)\n\n  onThangCollectedItem: (e, frameNumber) ->\n    for goal in @goals ? []\n      @checkCollected(goal.id, goal.collectThangs.who, goal.collectThangs.targets, e.actor, e.item.id, frameNumber) if goal.collectThangs?\n      @checkCollected(goal.id, goal.keepFromCollectingThangs.who, goal.keepFromCollectingThangs.targets, e.actor, e.item.id, frameNumber) if goal.keepFromCollectingThangs?\n\n  checkCollected: (goalID, who, targets, thang, itemID, frameNumber) ->\n    return unless itemID in targets\n    return unless thang.id in who or thang.team in who\n    @updateGoalState(goalID, itemID, 'collected', frameNumber)\n\n  onUserCodeProblem: (e, frameNumber) ->\n    for goal in @goals ? [] when goal.codeProblems\n      @checkCodeProblem goal.id, goal.codeProblems, e.thang, frameNumber\n\n  checkCodeProblem: (goalID, who, thang, frameNumber) ->\n    return unless thang.id in who or thang.team in who\n    @updateGoalState goalID, thang.id, 'problems', frameNumber\n\n  onLinesOfCodeCounted: (e, frameNumber) ->\n    for goal in @goals ? [] when goal.linesOfCode\n      @checkLinesOfCode goal.id, goal.linesOfCode, e.thang, e.linesUsed, frameNumber\n\n  checkLinesOfCode: (goalID, who, thang, linesUsed, frameNumber) ->\n    return unless linesAllowed = who[thang.id] ? who[thang.team]\n    @updateGoalState goalID, thang.id, 'lines', frameNumber if linesUsed > linesAllowed\n\n  wrapUpGoalStates: (finalFrame) ->\n    for goalID, state of @goalStates\n      if state.status is null\n        if @goalIsPositive(goalID)\n          state.status = 'incomplete'\n        else\n          state.status = 'success'\n          state.keyFrame = 'end' # special case for objective UI to handle\n\n  # UI EVENT GOAL TRACKING\n\n  onNote: (channel, e) ->\n    # TODO for UI event related goals\n\n  # HELPER FUNCTIONS\n\n  # It's a pretty similar pattern for each of the above goals.\n  # Once you determine a thang has done the thing, you mark it done in the progress object.\n  initGoalState: (state, whos, progressObjectName) ->\n    # 'whos' is an array of goal 'who' values.\n    # This inits the progress object for the goal tracking.\n\n    arrays = (prop for prop in whos when prop?.length)\n    return unless arrays.length\n    state[progressObjectName] ?= {}\n    for array in arrays\n      for thang in array\n        if @thangTeams[thang]?\n          for t in @thangTeams[thang]\n            state[progressObjectName][t] = false\n        else\n          state[progressObjectName][thang] = false\n\n  getGoalState: (goalID) ->\n    @goalStates[goalID].status\n\n  setGoalState: (goalID, status) ->\n    state = @goalStates[goalID]\n    state.status = status\n    if overallStatus = @checkOverallStatus true\n      matchedGoals = (_.find(@goals, {id: goalID}) for goalID, goalState of @goalStates when goalState.status is overallStatus)\n      mostEagerGoal = _.min matchedGoals, 'worldEndsAfter'\n      victory = overallStatus is 'success'\n      tentative = overallStatus is 'success'\n      @world?.endWorld victory, mostEagerGoal.worldEndsAfter, tentative if mostEagerGoal isnt Infinity\n\n  updateGoalState: (goalID, thangID, progressObjectName, frameNumber) ->\n    # A thang has done something related to the goal!\n    # Mark it down and update the goal state.\n    goal = _.find @goals, {id: goalID}\n    state = @goalStates[goalID]\n    stateThangs = state[progressObjectName]\n    stateThangs[thangID] = true\n    success = @goalIsPositive goalID\n    if success\n      numNeeded = goal.howMany ? Math.max(1, _.size stateThangs)\n    else\n      # saveThangs: by default we would want to save all the Thangs, which means that we would want none of them to be 'done'\n      numNeeded = _.size(stateThangs) - Math.max((goal.howMany ? 1), _.size stateThangs) + 1\n    numDone = _.filter(stateThangs).length\n    #console.log 'needed', numNeeded, 'done', numDone, 'of total', _.size(stateThangs), 'with how many', goal.howMany, 'and stateThangs', stateThangs, 'for', goalID, thangID, 'on frame', frameNumber, 'all Thangs', _.keys(stateThangs), _.values(stateThangs)\n    return unless numDone >= numNeeded\n    return if state.status and not success  # already failed it; don't wipe keyframe\n    state.status = if success then 'success' else 'failure'\n    state.keyFrame = frameNumber\n    #console.log goalID, 'became', success, 'on frame', frameNumber, 'with overallStatus', @checkOverallStatus true\n    if overallStatus = @checkOverallStatus true\n      matchedGoals = (_.find(@goals, {id: goalID}) for goalID, goalState of @goalStates when goalState.status is overallStatus)\n      mostEagerGoal = _.min matchedGoals, 'worldEndsAfter'\n      victory = overallStatus is 'success'\n      tentative = overallStatus is 'success'\n      @world?.endWorld victory, mostEagerGoal.worldEndsAfter, tentative if mostEagerGoal isnt Infinity\n\n  goalIsPositive: (goalID) ->\n    # Positive goals are completed when all conditions are true (kill all these thangs)\n    # Negative goals fail when any are true (keep all these thangs from being killed)\n    goal = _.find(@goals, {id: goalID}) ? {}\n    return false for prop of goal when @positiveGoalMap[prop] is 0\n    true\n\n  positiveGoalMap:\n    killThangs: 1\n    saveThangs: 0\n    getToLocations: 1\n    getAllToLocations: 1\n    keepFromLocations: 0\n    keepAllFromLocations: 0\n    leaveOffSides: 1\n    keepFromLeavingOffSides: 0\n    collectThangs: 1\n    keepFromCollectingThangs: 0\n    linesOfCode: 0\n    codeProblems: 0\n\n  updateCodeGoalStates: ->\n    # TODO\n\n  # teardown\n\n  destroy: ->\n    super()\n","# TODO: this thing needs a bit of thinking/testing for grid square alignments, exclusive vs. inclusive mins/maxes, etc.\n\nmodule.exports = class Grid\n  constructor: (thangs, @width, @height, @padding=0, @left=0, @bottom=0, @rogue=false) ->\n    @width = Math.ceil @width\n    @height = Math.ceil @height\n    @left = Math.floor @left\n    @bottom = Math.floor @bottom\n    @update thangs\n\n  update: (thangs) ->\n    @grid = []\n    for y in [0 .. @height]\n      @grid.push []\n      for x in [0 .. @width]\n        @grid[y].push []\n    if @rogue\n      thangs = (t for t in thangs when t.collides or t.spriteName is 'Gem' and not t.dead)\n    else\n      thangs = (t for t in thangs when t.collides)\n    for thang in thangs\n      rect = thang.rectangle()\n      [minX, maxX, minY, maxY] = [9001, -9001, 9001, -9001]\n      for v in rect.vertices()\n        minX = Math.min(minX, v.x - @padding)\n        minY = Math.min(minY, v.y - @padding)\n        maxX = Math.max(maxX, v.x + @padding)\n        maxY = Math.max(maxY, v.y + @padding)\n      for y in @columns minY, maxY\n        for x in @rows minX, maxX\n          @grid[y][x].push thang\n\n  contents: (gx, gy, width=1, height=1) ->\n    thangs = []\n    for y in @columns gy - height / 2, gy + height / 2\n      for x in @rows gx - width / 2, gx + width / 2\n        for thang in @grid[y][x]\n          thangs.push thang if thang.collides and not (thang in thangs) and thang.id isnt 'Add Thang Phantom'\n    thangs\n\n  clampColumn: (y) ->\n    y = Math.max 0, Math.floor(y) - @bottom\n    Math.min @grid.length, Math.ceil(y) - @bottom\n\n  clampRow: (x) ->\n    x = Math.max 0, Math.floor(x) - @left\n    Math.min @grid[0]?.length or 0, Math.ceil(x) - @left\n\n  columns: (minY, maxY) ->\n    [@clampColumn(minY) ... @clampColumn(maxY)]\n\n  rows: (minX, maxX) ->\n    [@clampRow(minX) ... @clampRow(maxX)]\n\n  toString: (rogue=false) ->\n    upsideDown = _.clone @grid\n    upsideDown.reverse()\n    ((@charForThangs thangs, rogue for thangs in row).join(' ') for row in upsideDown).join(\"\\n\")\n\n  charForThangs: (thangs, rogue) ->\n    return thangs.length or ' ' unless rogue\n    return '.' unless thangs.length\n    return '@' if _.find thangs, (t) -> /Hero Placeholder/.test t.id\n    return '>' if _.find thangs, spriteName: 'Spike Walls'\n    return 'F' if _.find thangs, spriteName: 'Fence Wall'\n    return 'T' if _.find thangs, spriteName: 'Fire Trap'\n    return ' ' if _.find thangs, spriteName: 'Dungeon Wall'\n    return 'G' if _.find thangs, spriteName: 'Gem'\n    return 'C' if _.find thangs, spriteName: 'Treasure Chest'\n    return '*' if _.find thangs, spriteName: 'Spear'\n    return 'o' if _.find thangs, type: 'munchkin'\n    return 'O' if _.find thangs, (t) -> t.team is 'ogres'\n    return 'H' if _.find thangs, (t) -> t.team is 'humans'\n    return 'N' if _.find thangs, (t) -> t.team is 'neutral'\n    return '?'\n","# Box2D is defined in global namespace\n\n# Used to have Box2DJS, but got rid of it.\nif Box2D?  # box2dweb, compiled from Flash port: https://code.google.com/p/box2dweb/\n  module.exports = box2d =\n    b2Vec2: Box2D.Common.Math.b2Vec2\n    b2BodyDef: Box2D.Dynamics.b2BodyDef\n    b2Body: Box2D.Dynamics.b2Body\n    b2FixtureDef: Box2D.Dynamics.b2FixtureDef\n    b2Fixture: Box2D.Dynamics.b2Fixture\n    b2FilterData: Box2D.Dynamics.b2FilterData\n    b2World: Box2D.Dynamics.b2World\n    b2ContactListener: Box2D.Dynamics.b2ContactListener\n    b2MassData: Box2D.Collision.Shapes.b2MassData\n    b2PolygonShape: Box2D.Collision.Shapes.b2PolygonShape\n    b2CircleShape: Box2D.Collision.Shapes.b2CircleShape\n  window.BOX2D_ENABLED = true\nelse  # no Box2D\n  module.exports = null\n","componentKeywords = ['attach', 'constructor', 'validateArguments', 'toString', 'isComponent']  # Array is faster than object\n\nmodule.exports = class Component\n  @className: 'Component'\n  isComponent: true\n  constructor: (config) ->\n    for key, value of config\n      @[key] = value  # Hmm, might want to _.cloneDeep here? What if the config has nested object values and the Thang modifies them, then we re-use the config for, say, missile spawning? Well, for now we'll clone in the missile.\n\n  attach: (thang) ->\n    # Optimize; this is much of the World constructor time\n    for key, value of @ when key not in componentKeywords and key[0] isnt '_'\n      oldValue = thang[key]\n      if typeof oldValue is 'function'\n        thang.appendMethod key, value\n      else\n        thang[key] = value\n\n  validateArguments:\n    additionalProperties: false\n\n  toString: ->\n    \"<Component: #{@constructor.className}\"\n","Vector = require './vector'\nLineSegment = require './line_segment'\nRectangle = require './rectangle'\n\nclass Ellipse\n  @className: \"Ellipse\"\n\n  # TODO: add class methods for add, multiply, subtract, divide, rotate\n\n  isEllipse: true\n  apiProperties: ['x', 'y', 'width', 'height', 'rotation', 'distanceToPoint', 'distanceSquaredToPoint', 'distanceToRectangle', 'distanceSquaredToRectangle', 'distanceToEllipse', 'distanceSquaredToEllipse', 'distanceToShape', 'distanceSquaredToShape', 'containsPoint', 'intersectsLineSegment', 'intersectsRectangle', 'intersectsEllipse', 'getPos', 'containsPoint', 'copy']\n\n  constructor: (@x=0, @y=0, @width=0, @height=0, @rotation=0) ->\n\n  copy: ->\n    new Ellipse(@x, @y, @width, @height, @rotation)\n\n  getPos: ->\n    new Vector(@x, @y)\n\n  rectangle: ->\n    new Rectangle(@x, @y, @width, @height, @rotation)\n\n  axisAlignedBoundingBox: (rounded=true) ->\n    @rectangle().axisAlignedBoundingBox()\n\n  distanceToPoint: (p) ->\n    @rectangle().distanceToPoint p  # TODO: actually implement ellipse ellipse-point distance\n\n  distanceSquaredToPoint: (p) ->\n    # Doesn't handle rotation; just supposed to be faster than distanceToPoint.\n    @rectangle().distanceSquaredToPoint p  # TODO: actually implement ellipse-point distance\n\n  distanceToRectangle: (other) ->\n    Math.sqrt @distanceSquaredToRectangle other\n\n  distanceSquaredToRectangle: (other) ->\n    @rectangle().distanceSquaredToRectangle other  # TODO: actually implement ellipse-rectangle distance\n\n  distanceToEllipse: (ellipse) ->\n    Math.sqrt @distanceSquaredToEllipse ellipse\n\n  distanceSquaredToEllipse: (ellipse) ->\n    @rectangle().distanceSquaredToEllipse ellipse  # TODO: actually implement ellipse-ellipse distance\n\n  distanceToShape: (shape) ->\n    Math.sqrt @distanceSquaredToShape shape\n\n  distanceSquaredToShape: (shape) ->\n    if shape.isEllipse then @distanceSquaredToEllipse shape else @distanceSquaredToRectangle shape\n\n  containsPoint: (p, withRotation=true) ->\n    # \"ellipse space\" is the cartesian space\n    # where the ellipse becomes the unit\n    # circle centered at (0, 0)\n    [x, y] = [p.x - @x, p.y - @y] # translate point into ellipse space\n    if withRotation and @rotation # optionally rotate point into ellipse space\n      c = Math.cos(@rotation)\n      s = Math.sin(@rotation)\n      [x, y] = [x*c + y*s, y*c - x*s]\n    x = x / @width * 2 # scale point into ellipse space\n    y = y / @height * 2\n    x*x + y*y <= 1 #if the resulting point falls on/in the unit circle at 0, 0\n\n\n  intersectsLineSegment: (p1, p2) ->\n    [px1, py1, px2, py2] = [p1.x, p1.y, p2.x, p2.y]\n    m = (py1 - py2) / (px1 - px2)\n    m2 = Math.pow(m, 2)\n    c = py1 - (m * px1)\n    c2 = Math.pow(c, 2)\n    [a, b] = [@width / 2, @height / 2]\n    [h, k] = [@x, @y]\n    a2 = Math.pow(a, 2)\n    a4 = Math.pow(a, 2)\n    b2 = Math.pow(b, 2)\n    b4 = Math.pow(b, 4)\n    h2 = Math.pow(h, 2)\n    k2 = Math.pow(k, 2)\n    sint = Math.sin(@rotation)\n    sin2t = Math.sin(2 * @rotation)\n    cost = Math.cos(@rotation)\n    cos2t = Math.cos(2 * @rotation)\n    if (not isNaN m) and m != Infinity and m != -Infinity\n      numeratorLeft = (-a2 * c * m * cos2t) - (a2 * c * m) + (a2 * c * sin2t) - (a2 * h * m * sin2t) - (a2 * h * cos2t) + (a2 * h) + (a2 * k * m * cos2t) + (a2 * k * m) - (a2 * k * sin2t)\n      numeratorMiddle = Math.SQRT2 * Math.sqrt((a4 * b2 * m2 * cos2t) + (a4 * b2 * m2) - (2 * a4 * b2 * m * sin2t) - (a4 * b2 * cos2t) + (a4 * b2) - (a2 * b4 * m2 * cos2t) + (a2 * b4 * m2) + (2 * a2 * b4 * m * sin2t) + (a2 * b4 * cos2t) + (a2 * b4) - (2 * a2 * b2 * c2) - (4 * a2 * b2 * c * h * m) + (4 * a2 * b2 * c * k) - (2 * a2 * b2 * h2 * m2) + (4 * a2 * b2 * h * k * m) - (2 * a2 * b2 * k2))\n      numeratorRight = (b2 * c * m * cos2t) - (b2 * c * m) - (b2 * c * sin2t) + (b2 * h * m * sin2t) + (b2 * h * cos2t) + (b2 * h) - (b2 * k * m * cos2t) + (b2 * k * m) + (b2 * k * sin2t)\n      denominator = (a2 * m2 * cos2t) + (a2 * m2) - (2 * a2 * m * sin2t) - (a2 * cos2t) + a2 - (b2 * m2 * cos2t) + (b2 * m2) + (2 * b2 * m * sin2t) + (b2 * cos2t) + b2\n      solution1 = (-numeratorLeft - numeratorMiddle + numeratorRight) / denominator\n      solution2 = (-numeratorLeft + numeratorMiddle + numeratorRight) / denominator\n      if (not isNaN solution1) and (not isNaN solution2)\n        [littleX, bigX] = if px1 < px2 then [px1, px2] else [px2, px1]\n        if (littleX <= solution1 and bigX >= solution1) or (littleX <= solution2 and bigX >= solution2)\n          return true\n      if (not isNaN solution1) or (not isNaN solution2)\n        solution = if not isNaN solution1 then solution1 else solution2\n        [littleX, bigX] = if px1 < px2 then [px1, px2] else [px2, px1]\n        if littleX <= solution and bigX >= solution\n          return true\n      else\n        return false\n    else\n      x = px1\n      x2 = Math.pow(x, 2)\n      numeratorLeft = (-a2 * h * sin2t) + (a2 * k * cos2t) + (a2 * k) + (a2 * x * sin2t)\n      numeratorMiddle = Math.SQRT2 * Math.sqrt((a4 * b2 * cos2t) + (a4 * b2) - (a2 * b4 * cos2t) + (a2 * b4) - (2 * a2 * b2 * h2) + (4 * a2 * b2 * h * x) - (2 * a2 * b2 * x2))\n      numeratorRight = (b2 * h * sin2t) - (b2 * k * cos2t) + (b2 * k) - (b2 * x * sin2t)\n      denominator = (a2 * cos2t) + a2 - (b2 * cos2t) + b2\n      solution1 = (numeratorLeft - numeratorMiddle + numeratorRight) / denominator\n      solution2 = (numeratorLeft + numeratorMiddle + numeratorRight) / denominator\n      if (not isNaN solution1) or (not isNaN solution2)\n        solution = if not isNaN solution1 then solution1 else solution2\n        [littleY, bigY] = if py1 < py2 then [py1, py2] else [py2, py1]\n        if littleY <= solution and bigY >= solution\n          return true\n      else\n        return false\n    false\n\n  intersectsRectangle: (rectangle) ->\n    rectangle.intersectsEllipse @\n\n  intersectsEllipse: (ellipse) ->\n    @rectangle().intersectsEllipse ellipse  # TODO: actually implement ellipse-ellipse intersection\n    #return true if @containsPoint ellipse.getPos()\n\n  intersectsShape: (shape) ->\n    if shape.isEllipse then @intersectsEllipse shape else @intersectsRectangle shape\n\n  toString: ->\n    return \"{x: #{@x.toFixed(0)}, y: #{@y.toFixed(0)}, w: #{@width.toFixed(0)}, h: #{@height.toFixed(0)}, rot: #{@rotation.toFixed(3)}}\"\n\n  serialize: ->\n    {CN: @constructor.className, x: @x, y: @y, w: @width, h: @height, r: @rotation}\n\n  @deserialize: (o, world, classMap) ->\n    new Ellipse o.x, o.y, o.w, o.h, o.r\n\n  serializeForAether: -> @serialize()\n  @deserializeFromAether: (o) -> @deserialize o\n\nmodule.exports = Ellipse\n","Vector = require './vector'\n\nmodule.exports.ArgumentError = class ArgumentError extends Error\n  @className: 'ArgumentError'\n  constructor: (@message, @functionName, @argumentName, @intendedType, @actualValue, @numArguments, @hint) ->\n    super @message\n    @name = 'ArgumentError'\n    if Error.captureStackTrace?\n      Error.captureStackTrace @, @constructor\n\n  toString: ->\n    s = \"`#{@functionName}`\"\n    if @argumentName is 'return'\n      s += \"'s return value\"\n    else if @argumentName is '_excess'\n      s += \" takes only #{@numArguments} argument#{if @numArguments > 1 then 's' else ''}.\"\n    else if @argumentName\n      s += \"'s argument `#{@argumentName}`\"\n    else\n      s += ' takes no arguments.'\n\n    actualType = typeof @actualValue\n    if not @actualValue?\n      actualType = 'null'\n    else if _.isArray @actualValue\n      actualType = 'array'\n    typeMismatch = @intendedType and not @intendedType.match actualType\n    if typeMismatch\n      v = ''\n      if actualType is 'string'\n        v = \"\\\"#{@actualValue}\\\"\"\n      else if actualType is 'number'\n        if Math.round(@actualValue) is @actualValue then @actualValue else @actualValue.toFixed(2)\n      else if actualType is 'boolean'\n        v = \"#{@actualValue}\"\n      else if (@actualValue? and @actualValue.id and @actualValue.trackedPropertiesKeys)\n        # (Don't import Thang, but determine whether it is Thang.)\n        v = @actualValue.toString()\n      else if @actualValue instanceof Vector\n        v = @actualValue.toString()\n      showValue = showValue or @actualValue instanceof Vector\n      s += \" should have type `#{@intendedType}`, but got `#{actualType}`#{if v then \": `#{v}`\" else ''}.\"\n    else if @argumentName and @argumentName isnt '_excess'\n      s += ' has a problem.'\n    s += '\\n' + @message if @message\n    s\n","class LineSegment\n  @className: \"LineSegment\"\n\n  constructor: (@a, @b) ->\n    @slope = (@a.y - @b.y) / (@a.x - @b.x)\n    @y0 = @a.y - (@slope * @a.x)\n    @left = if @a.x < @b.x then @a else @b\n    @right = if @a.x > @b.x then @a else @b\n    @bottom = if @a.y < @b.y then @a else @b\n    @top = if @a.y > @b.y then @a else @b\n\n  y: (x) ->\n    (@slope * x) + @y0\n\n  x: (y) ->\n    (y - @y0) / @slope\n\n  intersectsLineSegment: (lineSegment) ->\n    if lineSegment.slope is @slope\n      if lineSegment.y0 is @y0\n        if lineSegment.left.x is @left.x or lineSegment.left.x is @right.x or lineSegment.right.x is @right.x or lineSegment.right.x is @left.x\n          # segments are of the same line with shared start and/or end points\n          return true\n        else\n          [left, right] = if lineSegment.left.x < @left.x then [lineSegment, @] else [@, lineSegment]\n          if left.right.x > right.left.x\n            # segments are of the same line and one is contained within the other\n            return true\n    else if Math.abs(@slope) isnt Infinity and Math.abs(lineSegment.slope) isnt Infinity\n      x = (lineSegment.y0 - @y0) / (@slope - lineSegment.slope)\n      if x >= @left.x and x <= @right.x and x >= lineSegment.left.x and x <= lineSegment.right.x\n        return true\n    else if Math.abs(@slope) isnt Infinity or Math.abs(lineSegment.slope) isnt Infinity\n      [vertical, nonvertical] = if Math.abs(@slope) isnt Infinity then [lineSegment, @] else [@, lineSegment]\n      x = vertical.a.x\n      bottom = vertical.bottom.y\n      top = vertical.top.y\n      y = nonvertical.y(x)\n      left = nonvertical.left.x\n      right = nonvertical.right.x\n      if y >= bottom and y <= top and x >= left and x <= right\n        return true\n    false\n\n  pointOnLine: (point, segment=true) ->\n    if point.y is @y(point.x)\n      if segment\n        [littleY, bigY] = if @a.y < @b.y then [@a.y, @b.y] else [@b.y, @a.y]\n        if littleY <= point.y and bigY >= point.y\n          return true\n      else\n        return true\n    false\n\n  distanceSquaredToPoint: (point) ->\n    # http://stackoverflow.com/a/1501725/540620\n    return @a.distanceSquared point if @a.equals @b\n    res = Math.min point.distanceSquared(@a), point.distanceSquared(@b)\n    lineMagnitudeSquared = @a.distanceSquared @b\n    t = ((point.x - @a.x) * (@b.x - @a.x) + (point.y - @a.y) * (@b.y - @a.y)) / lineMagnitudeSquared\n    return @a.distanceSquared point if t < 0\n    return @b.distanceSquared point if t > 1\n    point.distanceSquared x: @a.x + t * (@b.x - @a.x), y: @a.y + t * (@b.y - @a.y)\n\n  distanceToPoint: (point) ->\n    Math.sqrt @distanceSquaredToPoint point\n\n  toString: ->\n    \"lineSegment(a=#{@a}, b=#{@b}, slope=#{@slope}, y0=#{@y0}, left=#{@left}, right=#{@right}, bottom=#{@bottom}, top=#{@top})\"\n\n  serialize: ->\n    {CN: @constructor.className, a: @a, b: @b}\n\n  @deserialize: (o, world, classMap) ->\n    new LineSegment o.a, o.b\n\n  serializeForAether: -> @serialize()\n  @deserializeFromAether: (o) -> @deserialize o\n\nmodule.exports = LineSegment\n","module.exports.thangNames = thangNames =\n  'Ogre Munchkin F': [\n    # Female\n    'Alali'\n    'Anabel'\n    'Delma'\n    'Dosha'\n    'Gurzunn'\n    'Hoot'\n    'Inski'\n    'Iyert'\n    'Lacos'\n    'Merna'\n    'Palt'\n    'Paulark'\n    'Pripp'\n    'Shmeal'\n    'Upfish'\n    'Yugark'\n    'Shema'\n  ]\n  'Ogre Munchkin M': [\n    # Male\n    'Blob'\n    'Brack'\n    'Cragg'\n    'Dobo'\n    'Draff'\n    'Eugen'\n    'Gert'\n    'Godel'\n    'Goreball'\n    'Gordok'\n    'Gorylo'\n    'Gort'\n    'Kog'\n    'Kogpole'\n    'Kratt'\n    'Leerer'\n    'Nerph'\n    'Oogre'\n    'Raack'\n    'Ragtime'\n    'Raort'\n    'Rexxar'\n    'Skoggen'\n    'Smerk'\n    'Snortt'\n    'Thabt'\n    'Toremon'\n    'Treg'\n    'Ursa'\n    'Vorobun'\n    'Weeb'\n    'Yart'\n    'Zozo'\n    'Zock'\n  ]\n  'Ogre Thrower': [\n    # Female\n    'Beebatha'\n    'Dross'\n    'Drumbaa'\n    'Durnath'\n    'Esha'\n    'Gragthar'\n    'Grel'\n    'Hamedi'\n    'Jinjin'\n    'Kraggan'\n    'Kyrgg'\n    'Makas'\n    'Moza'\n    'Pinakin'\n    'Rakash'\n    'Rasha'\n    'Savatha'\n    'Vujii'\n    'Wuda'\n    'Yetu'\n    'Zara'\n  ]\n  'Griffin Rider': [\n    # Female\n    'Aeoldan'\n    'Bestarius'\n    'Cristofide'\n    'Denestorath'\n    'Letholdus'\n    'Loretha'\n  ]\n  'Paladin': [\n    # Female\n    'Illumina'\n    'Celadia'\n    'Taric'\n    'Vaelia'\n    'Antary'\n    'Femae'\n  ]\n  'Ogre Witch': [\n    # Female\n    'Vyrryx'\n    'Yzzrith'\n    'Xith'\n  ]\n  'Ogre Chieftain': [\n    # Female\n    'Zagra Ux'\n    'Oniko'\n  ]\n  'Ogre Warlock': [\n    # Male\n    'Gronak'\n    'Sorgoth'\n    'Vax'\n    'Vyrryx'\n    'Vyjj'\n  ]\n  'Ogre Scout M': [\n    # Male\n    'Frandar'\n    'Karnaugh'\n    'Lanthon'\n    'Tarjan'\n    'Yorgalfen'\n  ]\n  'Ogre Scout F': [\n    # Female\n    'Freesa'\n    'Ganju'\n    'Hopper'\n    'Ralthora'\n    'Yugorota'\n  ]\n  'Burl': [\n    # Animal\n    'Borlit'\n    'Burlosh'\n    'Dorf'\n    'Teemer'\n  ]\n  'Sand Yak': [\n    # Animal\n    'Arngotho'\n    'Falthror'\n    'Girvan'\n    'Langthok'\n    'Ofgar'\n    'Randall'\n  ]\n  # Pets only have one name\n  'Raven Pet': ['Nevermore']\n  'Cougar Pet': ['Kitty']\n  'Frog Pet': ['Hypnotoad']\n  'Griffin Pet': ['']\n  'Pugicorn Pet': ['']\n  'Polar Bear Pet': ['Klondike']\n  'Wolf Pet': ['']\n  'Horse': [\n    # Animal\n    'Abby'\n    'Beauty'\n    'Cinnamon'\n    'Codasus'\n    'Ed'\n    'Fleetfire'\n    'Hurricane'\n    'Lovelace'\n    'Miracle'\n    'Mirial'\n    'Powder'\n    'Silver'\n    'Wildsilver'\n  ]\n  'Ogre M': [\n    # Male\n    'Axe Ox'\n    'Belch'\n    'Booz'\n    'Brusentsov'\n    'Demonik'\n    'Dronck'\n    'Gorlog'\n    'Grumus'\n    'Gug'\n    'Gurulax'\n    'Krogg'\n    'Kulgor'\n    'Mak Fod'\n    'Mokrul'\n    'Muthyala'\n    'Oni'\n    'Polifemo'\n    'Saltporker'\n    'Skrungt'\n    'Steve'\n    'Stinker'\n    'Tarlok'\n    'Trogdor'\n    'Trung'\n    'Vargutt'\n    'Vyle'\n  ]\n  'Ogre F': [\n    # Female\n    'Alkaz'\n    'Gar\\'ah'\n    'Glonc'\n    'Holkam'\n    'Kriskull'\n    'Mak\\'rah'\n    'Marghurk'\n    'Marnag'\n    'Martha'\n    'Morthrug'\n    'Nareng'\n    'Maleda'\n  ]\n  'Ogre Brawler': [\n    # Male\n    'Arelt'\n    'Borgag'\n    'Boz'\n    'Burobb'\n    'Dijkstro'\n    'Grognar'\n    'Grul\\'thock'\n    'Grumoll'\n    'Haggar'\n    'Heizenburg'\n    'Ironjaw'\n    'Mokuhr'\n    'Muul'\n    'Ork\\'han'\n    'Roast Beefy'\n    'Toharg'\n    'Trod'\n    'Tuguro'\n    'Turrok'\n    'York'\n    'Zabarek'\n    'Zagurk'\n    'Zeredd'\n  ]\n  'Ogre Fangrider': [\n    # Female\n    'Arizard'\n    'Bortrok'\n    'Boruvka'\n    'Doralt'\n    'Dreek'\n    'Flarsho'\n    'Geggret'\n    'Gurzthrot'\n    'Mizzy'\n    'Morzgret'\n    'Murgark'\n    'Muttin'\n    'Secka'\n  ]\n  'Ogre Shaman': [\n    # Female\n    'Ahst\\'durante'\n    'Aolian\\'Tak'\n    'Drun'\n    'Ghuk'\n    'Gogg'\n    'Gom'\n    'Grek'\n    'Gror'\n    'Grue'\n    'Il\\'Du\\'duka'\n    'Makas'\n    'Mogadishu'\n    'Nazgareth'\n    'Poult'\n    'Sham\\'uk'\n    'Torluk'\n    'Turann'\n    'Tuzang'\n    'Tuzell'\n    'Ugoki'\n    'Uld\\'Mak'\n    'Varreth'\n    'Yamizeb'\n    'Yerong'\n    'Yugargen'\n    'Zo\\'Goroth'\n    'Zulabar'\n  ]\n  'Skeleton': [\n    # Both\n    'Bloody Johnny'\n    'Bone Daddy'\n    'Bonejangles'\n    'Bonesworth'\n    'Bonette'\n    'Boneus'\n    'Doornail'\n    'Drybones'\n    'Grim'\n    'Haskell'\n    'Indiana Bones'\n    'James Bone'\n    'Kate'\n    'Palatine'\n    'Ribster'\n    'Rusty'\n    'Sacra'\n    'Scraps'\n    'Shelly'\n    'Shishka-Bob'\n    'Shishka-Joe'\n    'Shishka-Larry'\n    'Skeletor'\n    'Skellington'\n    'Skulldugger'\n    'Skully'\n    'Smitty'\n    'Sphenoid'\n    'Sternum'\n    'Talus'\n    'Tatava'\n    'Ulna'\n    'Yorick'\n  ]\n  'Ogre Headhunter': [\n    # Male\n    'Bob'\n    'Deadtooth'\n    'Ez the Cruel'\n    'Grroq'\n    'Mog'\n    'Mogvar'\n    'Ral\\'thuk'\n    'Soth'\n    'Ulxx'\n    'Ur'\n    'Veznyr'\n    'Warlegs'\n    'Xul Gor'\n  ]\n  'Trapper': [\n    # Male\n    'Senick'\n    'John'\n    'Kyle'\n  ]\n  'Forest Archer': [\n    # Female\n    'Naria'\n    'Sylva'\n    'Archia'\n  ]\n  'Raider': [\n    # Female\n    'Arryn'\n    'Thrat'\n  ]\n  'Goliath': [\n    # Male\n    'Okar'\n    'Ivan'\n  ]\n  'Guardian': [\n    # Female\n    'Illia'\n    'Gaia'\n  ]\n  'Pixie': [\n    # Female\n    'Zana'\n    'Eika'\n  ]\n  'Assassin': [\n    # Male\n    'Blackjack'\n    'Kha\\'Zix'\n    'Ritic'\n    'Rengar'\n    'Shade'\n    'Talon'\n    'Zed'\n    'Sherkey'\n  ]\n  'Necromancer': [\n    # Male\n    'Krekai'\n    'Kethum'\n    'Morcelu'\n    'Nalfar'\n    'Drezhul'\n  ]\n  'Master Wizard': [\n    # Female\n    'Lilith'\n    'Kuhafas'\n    'Usara'\n    'Veigar'\n    'Voldemort'\n    'Vallyria'\n  ]\n  'Archer F': [\n    # Female\n    'Agapi'\n    'Alden'\n    'Alleria'\n    'Atalanta'\n    'Artemis'\n    'Beatrice'\n    'Bachi'\n    'Beverly'\n    'Cairn'\n    'Cecily'\n    'Clare'\n    'Erica'\n    'Gemma'\n    'Ivy'\n    'Jensen'\n    'Katniss'\n    'Katreena'\n    'Keturah'\n    'Kim'\n    'Korra'\n    'Lina'\n    'Luna'\n    'Mercedes'\n    'Mira'\n    'Mirana'\n    'Natalie'\n    'Odette'\n    'Omar'\n    'Orly'\n    'Phoebe'\n    'Prim'\n    'Rosaline'\n    'Rowan'\n    'Tansy'\n    'Tauriel'\n    'Vereesa'\n    'Vesper'\n    'Yilitha'\n  ]\n  'Archer M': [\n    # Male\n    'Arty'\n    'Brian'\n    'Cole'\n    'Denin'\n    'Dev'\n    'Fidsdale'\n    'Gimsley'\n    'Hunter'\n    'Kikariy'\n    'Legolas'\n    'Loco'\n    'Logos'\n    'Lycan'\n    'Mars'\n    'Odysseos'\n    'Oliver'\n    'Quinn'\n    'Robin'\n    'Roman'\n    'Simon'\n    'Slyvos'\n    'Vican'\n    'Warshall'\n    'Yue Fei'\n    'Zhou Tong'\n    'Archy'\n  ]\n  'Peasant M': [\n    # Male\n    'Azgot'\n    'Brom'\n    'Blemmin'\n    'Carlton'\n    'Charles'\n    'Durfkor'\n    'Duan'\n    'Fendrel'\n    'Gawain'\n    'Hamming'\n    'Hector'\n    'Hershell'\n    'Hingle'\n    'Hodor'\n    'Jackson'\n    'James'\n    'Lyle'\n    'Merek'\n    'Paps'\n    'Piers'\n    'Shimron'\n    'Thad'\n    'Tybalt'\n    'Victor'\n    'Winkler'\n    'Yorik'\n    'Yusef'\n    'Yoltovic'\n  ]\n  'Peasant F': [\n    # Female\n    'Alexia'\n    'Alianor'\n    'Anastas'\n    'Bernadette'\n    'Brandy'\n    'Cristiana'\n    'Ellyn'\n    'Giselle'\n    'Gwendolin'\n    'Helena'\n    'Hilda'\n    'Icey'\n    'Katelyn'\n    'Mary'\n    'Matilda'\n    'Mertia'\n    'Millicent'\n    'Regan'\n    'Rose'\n    'Ruth'\n    'Tabitha'\n    'Thea'\n    'Lea'\n  ]\n  'Soldier M': [\n    # Male\n    'Aaron'\n    'Adam'\n    'Addison'\n    'Alan'\n    'Albert'\n    'Alistair'\n    'Andrew'\n    'Anthony'\n    'Antonio'\n    'Arthur'\n    'Augustus'\n    'Barron'\n    'Benjamin'\n    'Bill'\n    'Billy'\n    'Bobby'\n    'Bond'\n    'Brandon'\n    'Brian'\n    'Bruce'\n    'Carl'\n    'Carlos'\n    'Cecil'\n    'Charles'\n    'Chris'\n    'Christopher'\n    'Cid'\n    'Clarence'\n    'Craig'\n    'Daniel'\n    'Darius'\n    'David'\n    'Dax'\n    'Dennis'\n    'Donald'\n    'Douglas'\n    'Duke'\n    'Earl'\n    'Edward'\n    'Edwin'\n    'Eric'\n    'Ernest'\n    'Eugene'\n    'Ezra'\n    'Felix'\n    'Ferb'\n    'Frank'\n    'Fred'\n    'Gary'\n    'Gatsby'\n    'George'\n    'Gerald'\n    'Gordon'\n    'Gregory'\n    'Guan Yu'\n    'Halle'\n    'Harold'\n    'Harry'\n    'Henry'\n    'Hirium'\n    'Howard'\n    'Huburt'\n    'Hugo'\n    'Ieyasu'\n    'Jack'\n    'Jackson'\n    'James'\n    'Jason'\n    'Jax'\n    'Jeffrey'\n    'Jeremy'\n    'Jerry'\n    'Jesse'\n    'Jimmy'\n    'Joe'\n    'John'\n    'Johnny'\n    'Jonah'\n    'Jonathan'\n    'Jose'\n    'Joseph'\n    'Joshua'\n    'Juan'\n    'Jun Fan'\n    'Justin'\n    'Keith'\n    'Kenneth'\n    'Kevin'\n    'Kirin'\n    'Kumar'\n    'Larry'\n    'Lawrence'\n    'Leopold'\n    'Louis'\n    'Lucas'\n    'Lucian'\n    'Malcolm'\n    'Marcus'\n    'Mark'\n    'Martin'\n    'Matthew'\n    'Max'\n    'Maxwell'\n    'Michael'\n    'Miles'\n    'Mischa'\n    'Musashi'\n    'Nicholas'\n    'Nick'\n    'Noah'\n    'Orion'\n    'Parker'\n    'Patrick'\n    'Paul'\n    'Peter'\n    'Philip'\n    'Philippian'\n    'Phillip'\n    'Phineas'\n    'Pierce'\n    'Ralph'\n    'Randy'\n    'Raymond'\n    'Remy'\n    'Rex'\n    'Ricardo'\n    'Richard'\n    'Robert'\n    'Roderick'\n    'Roger'\n    'Ronald'\n    'Ronan'\n    'Roy'\n    'Russell'\n    'Ryan'\n    'Sage'\n    'Samson'\n    'Samuel'\n    'Scott'\n    'Sean'\n    'Shawn'\n    'Silas'\n    'Stephen'\n    'Sterling'\n    'Steve'\n    'Steven'\n    'Stormy'\n    'Tadakatsu'\n    'Terry'\n    'Thelonious'\n    'Theo'\n    'Thomas'\n    'Timothy'\n    'Todd'\n    'Tryndamere'\n    'Tyrone'\n    'Victor'\n    'Walter'\n    'Wayne'\n    'William'\n    'Willie'\n    'Zachary'\n  ]\n  'Soldier F': [\n    # Female\n    'Ahri'\n    'Alana'\n    'Alexandra'\n    'Alice'\n    'Allankrita'\n    'Amanda'\n    'Amy'\n    'Andrea'\n    'Angela'\n    'Ann'\n    'Anna'\n    'Anne'\n    'Annie'\n    'Ann-Maria'\n    'Aphrodite'\n    'Ashley'\n    'Barbara'\n    'Betty'\n    'Beverly'\n    'Bonnie'\n    'Brenda'\n    'Buffy'\n    'Carol'\n    'Carolyn'\n    'Catherine'\n    'Cheryl'\n    'Christina'\n    'Christine'\n    'Coco'\n    'Cynthia'\n    'Deborah'\n    'Debra'\n    'Denise'\n    'Diana'\n    'Diane'\n    'Donna'\n    'Doris'\n    'Dorothy'\n    'Elizabeth'\n    'Emma'\n    'Emily'\n    'Evelyn'\n    'Fiora'\n    'Frances'\n    'Gabrielle'\n    'Gloria'\n    'Gorgin'\n    'Heather'\n    'Helen'\n    'Helga'\n    'Holly'\n    'Imani'\n    'Irene'\n    'Jacqueline'\n    'Jane'\n    'Janet'\n    'Janice'\n    'Jean'\n    'Jennifer'\n    'Jessica'\n    'Joan'\n    'Jordan'\n    'Joyce'\n    'Judith'\n    'Judy'\n    'Julia'\n    'Julie'\n    'Karen'\n    'Katherine'\n    'Kathleen'\n    'Kathryn'\n    'Kathy'\n    'Kay'\n    'Kelly'\n    'Kimberly'\n    'Kira'\n    'Lana'\n    'Laura'\n    'Lillian'\n    'Linda'\n    'Lisa'\n    'Lois'\n    'Lori'\n    'Louise'\n    'Lukaz'\n    'Margaret'\n    'Maria'\n    'Mariah'\n    'Marie'\n    'Marilyn'\n    'Martha'\n    'Mary'\n    'Medusa'\n    'Melissa'\n    'Michelle'\n    'Mildred'\n    'Mulan'\n    'Nancy'\n    'Natasha'\n    'Nicole'\n    'Nikita'\n    'Norma'\n    'Pamela'\n    'Patricia'\n    'Paula'\n    'Phyllis'\n    'Rachel'\n    'Rebecca'\n    'Robin'\n    'Ronda'\n    'Rose'\n    'Ruby'\n    'Ruth'\n    'Sana'\n    'Sandra'\n    'Sara'\n    'Sarah'\n    'Scarlett'\n    'Shannon'\n    'Sharon'\n    'Shirley'\n    'Stephanie'\n    'Susan'\n    'Tammy'\n    'Teresa'\n    'Tess'\n    'Theresa'\n    'Tina'\n    'Trinity'\n    'Virginia'\n    'Wanda'\n  ]\n  'Ogre Peon M': [\n    # Male\n    'Ba Bo'\n    'Bubbage'\n    'Durbo'\n    'Jaro'\n    'Kurger'\n    'Mudwich'\n    'Toe Pod'\n    'Zugger'\n  ]\n  'Ogre Peon F': [\n    # Female\n    'Greeke'\n    'Iblet'\n    'Lorba'\n    'Vapa'\n    'Yamra'\n    'Zzoya'\n  ]\n  'Potion Master': [\n    # Male\n    'Amaranth'\n    'Alchemist'\n    'Arora'\n    'Artephius'\n    'Clause'\n    'Curie'\n    'Fluvius'\n    'Javin'\n    'Kanada'\n    'Omar'\n    'Paracelsus'\n    'Snake'\n    'Vanders'\n    'Warnsdorff'\n    'Zander'\n  ]\n  'Librarian': [\n    # Female\n    'Agathe'\n    'Agnes'\n    'Hushbaum'\n    'Mariam'\n    'Matilda'\n    'Merilda'\n    'Nordex'\n    'Satish'\n    'Vera'\n    'Charlotte'\n  ]\n  'Equestrian': [\n    # Male\n    'Neely'\n    'Reynaldo'\n    'Ryder'\n    'Thoron'\n  ]\n  'Knight': [\n    # Male\n    'Almeric'\n    'Alphonse'\n    'Altair'\n    'Arthur'\n    'Bertrand'\n    'Bronn'\n    'Bruce'\n    'Drake'\n    'Duran'\n    'Edward'\n    'Galahad'\n    'Hank'\n    'Hunfray'\n    'Jeph'\n    'Jorah'\n    'Lancelot'\n    'Mace'\n    'Neville'\n    'Shug'\n    'Tharin'\n    'Vint'\n    'Wain'\n  ]\n  'Captain': [\n    # Female\n    'Anya'\n    'Brigette'\n    'Dimia'\n    'Div'\n    'Hardcastle'\n    'Helena'\n    'Isa'\n    'Jan'\n    'Jane'\n    'Jarin'\n    'Karp'\n    'Katana'\n    'Leona'\n    'Lia'\n    'Lily'\n    'Nicks'\n    'Philips'\n    'Sarre'\n    'Sun Tzu'\n  ]\n  'Ninja': [\n    # Female\n    'Akali'\n    'Amara'\n    'Goemon'\n    'Itachi'\n    'Kennen'\n    'Kosaraju'\n    'Madara'\n    'Minato'\n    'Naruto'\n    'Obito'\n    'Sakura'\n    'Sasuke'\n    'Shen'\n    'Shigeru'\n    'Takashi'\n    'Zed'\n  ]\n  'Sorcerer': [\n    # Female\n    'Beazer'\n    'Claude'\n    'Gandalf'\n    'Izzrts'\n    'Kleene'\n    'Pender'\n    'Jezebel'\n  ]\n  'Samurai': [\n    # Male\n    'Hattori'\n    'Hirosha'\n    'Ieyasu'\n    'Izotokogawa'\n    'Keitaro'\n    'Miyoshi'\n    'Nobunaga'\n    'Yasuo'\n    'Yi'\n  ]\n  'Champion': [\n    # Female\n    'Ida'\n    'Jasmine'\n  ]\n  'Duelist': [\n    # Male\n    'Alejandro'\n  ]\n","# http://coffeescriptcookbook.com/chapters/math/generating-predictable-random-numbers\nclass Rand\n  @className: 'Rand'\n  # If created without a seed, uses current time as seed.\n  constructor: (@seed) ->\n    # Knuth and Lewis' improvements to Park and Miller's LCPRNG\n    @multiplier = 1664525\n    @modulo = 4294967296 # 2**32-1\n    @offset = 1013904223\n    unless @seed? and 0 <= @seed < @modulo\n      @seed = (new Date().valueOf() * new Date().getMilliseconds()) % @modulo\n\n  # sets new seed value, even handling negative numbers\n  setSeed: (seed) ->\n    @seed = ((seed % @modulo) + @modulo) % @modulo\n\n  # return a random integer 0 <= n < @modulo\n  randn: =>\n    # new_seed = (a * seed + c) % m\n    @seed = (@multiplier * @seed + @offset) % @modulo\n\n # return a random float 0 <= f < 1.0\n  randf: =>\n    @randn() / @modulo\n\n  # return a random int 0 <= f < n\n  rand: (n) =>\n    Math.floor @randf() * n\n\n  # return a random int min <= f < max\n  rand2: (min, max) =>\n    min + @rand max - min\n\n  # return a random float min <= f < max\n  randf2: (min, max) =>\n    min + @randf() * (max - min)\n\n  # return a random float within range around x\n  randfRange: (x, range) =>\n    x + (-0.5 + @randf()) * range\n\n  # shuffle array in place, and also return it\n  shuffle: (arr) =>\n    return arr unless arr.length > 2\n    for i in [arr.length-1 .. 1]\n      j = Math.floor @randf() * (i + 1)\n      t = arr[j]\n      arr[j] = arr[i]\n      arr[i] = t\n    arr\n  \n  choice: (arr) =>\n    return arr[@rand arr.length]\n\n\nmodule.exports = Rand\n","Vector = require './vector'\nLineSegment = require './line_segment'\n\nclass Rectangle\n  @className: 'Rectangle'\n  # Class methods for nondestructively operating - TODO: add rotate\n  for name in ['add', 'subtract', 'multiply', 'divide']\n    do (name) ->\n      Rectangle[name] = (a, b) ->\n        a.copy()[name](b)\n\n  isRectangle: true\n  apiProperties: ['x', 'y', 'width', 'height', 'rotation', 'getPos', 'vertices', 'touchesRect', 'touchesPoint', 'distanceToPoint', 'distanceSquaredToPoint', 'distanceToRectangle', 'distanceSquaredToRectangle', 'distanceToEllipse', 'distanceSquaredToEllipse', 'distanceToShape', 'distanceSquaredToShape', 'containsPoint', 'copy', 'intersectsLineSegment', 'intersectsEllipse', 'intersectsRectangle', 'intersectsShape']\n\n  constructor: (@x=0, @y=0, @width=0, @height=0, @rotation=0) ->\n\n  copy: ->\n    new Rectangle(@x, @y, @width, @height, @rotation)\n\n  getPos: ->\n    new Vector(@x, @y)\n\n  vertices: ->\n    # Counter-clockwise, starting from bottom left (when unrotated)\n    [w2, h2, cos, sin] = [@width / 2, @height / 2, Math.cos(@rotation), Math.sin(-@rotation)]\n    [\n      new Vector @x - (w2 * cos - h2 * sin), @y - (w2 * sin + h2 * cos)\n      new Vector @x - (w2 * cos + h2 * sin), @y - (w2 * sin - h2 * cos)\n      new Vector @x + (w2 * cos - h2 * sin), @y + (w2 * sin + h2 * cos)\n      new Vector @x + (w2 * cos + h2 * sin), @y + (w2 * sin - h2 * cos)\n    ]\n\n  lineSegments: ->\n    vertices = @vertices()\n    lineSegment0 = new LineSegment vertices[0], vertices[1]\n    lineSegment1 = new LineSegment vertices[1], vertices[2]\n    lineSegment2 = new LineSegment vertices[2], vertices[3]\n    lineSegment3 = new LineSegment vertices[3], vertices[0]\n    [lineSegment0, lineSegment1, lineSegment2, lineSegment3]\n\n  touchesRect: (other) ->\n    # Whether this rect shares part of any edge with other rect, for non-rotated, non-overlapping rectangles.\n    # I think it says kitty-corner rects touch, but I don't think I want that.\n    # Float instability might get me, too.\n    [bl1, tl1, tr1, br1] = @vertices()\n    [bl2, tl2, tr2, br2] = other.vertices()\n    return false if tl1.x > tr2.x or tl2.x > tr1.x\n    return false if bl1.y > tl2.y or bl2.y > tl1.y\n    return true if tl1.x is tr2.x or tl2.x is tr1.x\n    return true if tl1.y is bl2.y or tl2.y is bl1.y\n    false\n\n  touchesPoint: (p) ->\n    # Whether this rect has point p exactly on one of its edges, assuming no rotation.\n    [bl, tl, tr, br] = @vertices()\n    return false unless p.y >= bl.y and p.y <= tl.y\n    return false unless p.x >= bl.x and p.x <= br.x\n    return true if p.x is bl.x or p.x is br.x\n    return true if p.y is bl.y or p.y is tl.y\n    false\n\n  axisAlignedBoundingBox: (rounded=true) ->\n    box = @copy()\n    return box unless @rotation\n    box.rotation = 0\n    [left, top] = [9001, 9001]\n    for vertex in @vertices()\n      [left, top] = [Math.min(left, vertex.x), Math.min(top, vertex.y)]\n    if rounded\n      [left, top] = [Math.round(left), Math.round(top)]\n    [box.width, box.height] = [2 * (@x - left), 2 * (@y - top)]\n    box\n\n  distanceToPoint: (p) ->\n    # Get p in rect's coordinate space, then operate in one quadrant.\n    p = Vector.subtract(p, @getPos()).rotate(-@rotation)\n    dx = Math.max(Math.abs(p.x) - @width / 2, 0)\n    dy = Math.max(Math.abs(p.y) - @height / 2, 0)\n    Math.sqrt dx * dx + dy * dy\n\n  distanceSquaredToPoint: (p) ->\n    # Doesn't handle rotation; just supposed to be faster than distanceToPoint.\n    p = Vector.subtract(p, @getPos())\n    dx = Math.max(Math.abs(p.x) - @width / 2, 0)\n    dy = Math.max(Math.abs(p.y) - @height / 2, 0)\n    dx * dx + dy * dy\n\n  distanceToRectangle: (other) ->\n    Math.sqrt @distanceSquaredToRectangle other\n\n  distanceSquaredToRectangle: (other) ->\n    return 0 if @intersectsRectangle other\n    [firstVertices, secondVertices] = [@vertices(), other.vertices()]\n    [firstEdges, secondEdges] = [@lineSegments(), other.lineSegments()]\n    ans = Infinity\n    for i in [0 ... 4]\n      for j in [0 ... firstEdges.length]\n        ans = Math.min ans, firstEdges[j].distanceSquaredToPoint(secondVertices[i])\n      for j in [0 ... secondEdges.length]\n        ans = Math.min ans, secondEdges[j].distanceSquaredToPoint(firstVertices[i])\n    ans\n\n  distanceToEllipse: (ellipse) ->\n    Math.sqrt @distanceSquaredToEllipse ellipse\n\n  distanceSquaredToEllipse: (ellipse) ->\n    @distanceSquaredToRectangle ellipse.rectangle()  # TODO: actually implement rectangle-ellipse distance\n\n  distanceToShape: (shape) ->\n    Math.sqrt @distanceSquaredToShape shape\n\n  distanceSquaredToShape: (shape) ->\n    if shape.isEllipse then @distanceSquaredToEllipse shape else @distanceSquaredToRectangle shape\n\n  containsPoint: (p, withRotation=true) ->\n    if withRotation and @rotation\n      not @distanceToPoint(p)\n    else\n      @x - @width / 2 < p.x < @x + @width / 2 and @y - @height / 2 < p.y < @y + @height / 2\n\n  intersectsLineSegment: (p1, p2) ->\n    [px1, py1, px2, py2] = [p1.x, p1.y, p2.x, p2.y]\n    m1 = (py1 - py2) / (px1 - px2)\n    b1 = py1 - (m1 * px1)\n    vertices = @vertices()\n    lineSegments = [[vertices[0], vertices[1]], [vertices[1], vertices[2]], [vertices[2], vertices[3]], [vertices[3], vertices[0]]]\n    for lineSegment in lineSegments\n      [px1, py1, px2, py2] = [p1.x, p1.y, p2.x, p2.y]\n      m2 = (py1 - py2) / (px1 - px2)\n      b2 = py1 - (m * px1)\n      if m1 isnt m2\n        m = m1 - m2\n        b = b2 - b1\n        x = b / m\n        [littleX, bigX] = if px1 < px2 then [px1, px2] else [px2, px1]\n        if x >= littleX and x <= bigX\n          y = (m1 * x) + b1\n          [littleY, bigY] = if py1 < py2 then [py1, py2] else [py2, py1]\n          if littleY <= solution and bigY >= solution\n            return true\n    false\n\n  intersectsRectangle: (rectangle) ->\n    return true if @containsPoint rectangle.getPos()\n    for thisLineSegment in @lineSegments()\n      for thatLineSegment in rectangle.lineSegments()\n        if thisLineSegment.intersectsLineSegment(thatLineSegment)\n          return true\n    false\n\n  intersectsEllipse: (ellipse) ->\n    return true if @containsPoint ellipse.getPos()\n    return true for lineSegment in @lineSegments() when ellipse.intersectsLineSegment lineSegment.a, lineSegment.b\n    false\n\n  intersectsShape: (shape) ->\n    if shape.isEllipse then @intersectsEllipse shape else @intersectsRectangle shape\n\n  subtract: (point) ->\n    @x -= point.x\n    @y -= point.y\n    @pos.subtract point\n    @\n\n  add: (point) ->\n    @x += point.x\n    @y += point.y\n    @pos.add point\n    @\n\n  divide: (n) ->\n    [@width, @height] = [@width / n, @height / n]\n    @\n\n  multiply: (n) ->\n    [@width, @height] = [@width * n, @height * n]\n    @\n\n  isEmpty: () ->\n    @width is 0 and @height is 0\n\n  invalid: () ->\n    return (@x is Infinity) || isNaN(@x) || @y is Infinity || isNaN(@y) || @width is Infinity || isNaN(@width) || @height is Infinity || isNaN(@height) || @rotation is Infinity || isNaN(@rotation)\n\n  toString: ->\n    return \"{x: #{@x.toFixed(0)}, y: #{@y.toFixed(0)}, w: #{@width.toFixed(0)}, h: #{@height.toFixed(0)}, rot: #{@rotation.toFixed(3)}}\"\n\n  serialize: ->\n    {CN: @constructor.className, x: @x, y: @y, w: @width, h: @height, r: @rotation}\n\n  @deserialize: (o, world, classMap) ->\n    new Rectangle o.x, o.y, o.w, o.h, o.r\n\n  serializeForAether: -> @serialize()\n  @deserializeFromAether: (o) -> @deserialize o\n\nmodule.exports = Rectangle\n","{downTheChain} = require './world_utils'\n\nmodule.exports.scriptMatchesEventPrereqs = scriptMatchesEventPrereqs = (script, event) ->\n  return true unless script.eventPrereqs\n  for ap in script.eventPrereqs\n    v = downTheChain(event, ap.eventProps)\n    return false if ap.equalTo? and v isnt ap.equalTo\n    return false if ap.notEqualTo? and v is ap.notEqualTo\n    return false if ap.greaterThan? and not (v > ap.greaterThan)\n    return false if ap.greaterThanOrEqualTo? and not (v >= ap.greaterThanOrEqualTo)\n    return false if ap.lessThan? and not (v < ap.lessThan)\n    return false if ap.lessThanOrEqualTo? and not (v <= ap.lessThanOrEqualTo)\n    return false if ap.containingString? and (not v or v.search(ap.containingString) is -1)\n    return false if ap.notContainingString? and v?.search(ap.notContainingString) isnt -1\n    return false if ap.containingRegexp? and (not v or v.search(new RegExp(ap.containingRegexp)) is -1)\n    return false if ap.notContainingRegexp? and v?.search(new RegExp(ap.notContainingRegexp)) isnt -1\n\n  return true\n","# The System will operate on its Thangs of interest in each WorldFrame.\n# Systems so far: AI, UI, Collision, Movement, Targeting, Programming, Combat, Vision, Hearing, Inventory, Actions\n# Other Systems might be things like Attraction, EdgeBounce, EdgeWrap, and non-physics ones, too, like Rendering, Animation, ...\n\nmodule.exports = class System\n  @className: 'System'\n  constructor: (@world, config) ->\n    # Unlike with Component, we don't automatically copy all our properties onto the World.\n    # Subclasses can copy select properties here if they like.\n    for key, value of (config ? {})\n      @[key] = value\n    @registries = []\n    @hashes = {}\n\n  # Start is called once the beginning, after all Thangs have been loaded.\n  start: (thangs) ->\n\n  # Update is called once per frame on all thangs that currently have exist=true in the World.\n  # We return a simple numeric hash that will combine to a frame hash help us determine whether this frame has changed later on.\n  update: (thangs) ->\n    hash = 0\n\n  # Finish is called once at the end, after all frames have been generated.\n  finish: (thangs) ->\n\n  addRegistry: (condition) ->\n    registry = []\n    @registries.push [registry, condition]\n    registry\n\n  # Register is called whenever a Thang changes important state (exists, dead, etc), and can be called more specifically by individual Thangs.\n  register: (thang) ->\n    for [registry, condition] in @registries\n      if condition thang\n        if thang not in registry\n          registry.push thang\n      else\n        thangIndex = registry.indexOf thang\n        if thangIndex isnt -1\n          registry.splice thangIndex, 1\n    null\n\n  # Override this to determine which registries have which conditions\n  checkRegistration: (thang, registry) ->\n\n  hashString: (s) ->\n    return @hashes[s] if s of @hashes\n    hash = 0\n    for i in [0 ... Math.min(s.length, 100)]\n      hash = hash * 31 + s.charCodeAt(i)\n    hash = @hashes[s] = hash % 3.141592653589793\n    hash\n\n  toString: ->\n    \"<System: #{@constructor.className}\"\n","module.exports.MAX_COOLDOWN = MAX_COOLDOWN = 9001\n","# http://codingowl.com/readblog.php?blogid=124\nmodule.exports.CollisionCategory = class CollisionCategory\n  @className: 'CollisionCategory'\n  constructor: (name, @superteamIndex=null, @collisionSystem) ->\n    # @superteamIndex is null for 'none', 'obstacles', and 'dead'.\n    # It's 0 for 'ground', 'air', and 'ground_and_air' units with no superteams.\n    # It's 1, 2, or 3 for the superteams it gets after that. We can only have 16 collision categories.\n    @ground = name.search('ground') isnt -1\n    @air = name.search('air') isnt -1\n    @name = CollisionCategory.nameFor name, @superteamIndex\n    @superteamIndex ?= 0 if @ground or @air\n    @number = 1 << @collisionSystem.totalCategories++\n    if @collisionSystem.totalCategories > 16 then console.log 'There should only be 16 collision categories!'\n    @mask = 0\n    @collisionSystem.allCategories[@name] = @\n    for otherCatName, otherCat of @collisionSystem.allCategories\n      if @collidesWith otherCat\n        @mask = @mask | otherCat.number\n        otherCat.mask = otherCat.mask | @number\n\n  collidesWith: (cat) ->\n    # 'none' collides with nothing\n    return false if @name is 'none' or cat.name is 'none'\n\n    # 'obstacles' collides with everything; could also try letting air units (but not ground_and_air) fly over these\n    return true if cat.name is 'obstacles' or @name is 'obstacles'\n\n    # 'dead' collides only with obstacles\n    return cat.name is 'obstacles' if @name is 'dead'\n    return @name is 'obstacles' if cat.name is 'dead'\n\n    # 'ground_and_air_<team>' units don't hit ground or air units on their team (so missiles don't hit same team)\n    sameTeam = @superteamIndex and cat.superteamIndex is @superteamIndex\n    return false if sameTeam and @ground and @air\n\n    # actually, 'ground_and_air<team>' units don't hit any ground_and_air units (temp missile collision fix)\n    return false if @ground and @air and cat.ground and cat.air\n\n    # 'ground' collides with 'ground'\n    return true if cat.ground and @ground\n\n    # 'air' collides with 'air'\n    return true if cat.air and @air\n\n    # doesn't collide (probably 'ground' and 'air')\n    false\n\n  @nameFor: (name, superteamIndex=null) ->\n    return name unless name.match('ground') or name.match('air')\n    name + '_' + (superteamIndex or 0)\n","module.exports.WATER_DENSITY = WATER_DENSITY = 1000  # kg / m^3\nmodule.exports.AIR_DENSITY = AIR_DENSITY = 1.225  # kg / m^3\nmodule.exports.VACUUM_DENSITY = VACUUM_DENSITY = 0.00000000000000129  # For an excellent laboratory vacuum; kg / m^3\nmodule.exports.SWAMP_DENSITY = SWAMP_DENSITY = WATER_DENSITY / 4  # Swamp is dense like water, but only covers part of unit\nmodule.exports.STANDARD_FRICTION = STANDARD_FRICTION = 0.7  # 0.7 =~ shoe on floor.\nmodule.exports.ICE_FRICTION = ICE_FRICTION = 0.1  # As low as 0.015 (steel on ice), as high as 0.4 (rubber on ice)\n","ThangState = require './thang_state'\n{thangNames} = require './names'\n{ArgumentError} = require './errors'\nRand = require './rand'\n\nmodule.exports = class Thang\n  @className: 'Thang'\n  @remainingThangNames: {}\n\n  @nextID: (spriteName, world) ->\n    originals = thangNames[spriteName] or [spriteName]\n    remaining = Thang.remainingThangNames[spriteName]\n    remaining = Thang.remainingThangNames[spriteName] = originals.slice() unless remaining?.length\n\n    baseName = remaining.splice(world.rand.rand(remaining.length), 1)[0]\n    i = 0\n    while true\n      name = if i then \"#{baseName} #{i}\" else baseName\n      extantThang = world.thangMap[name]\n      break unless extantThang\n      i++\n    name\n\n  @resetThangIDs: -> Thang.remainingThangNames = {}\n  isThang: true\n  apiProperties: ['id', 'spriteName', 'health', 'pos', 'team']\n\n  constructor: (@world, @spriteName, @id) ->\n    @spriteName ?= @constructor.className\n    @id ?= @constructor.nextID @spriteName, @world\n    @addTrackedProperties ['exists', 'boolean']  # TODO: move into Systems/Components, too?\n    #console.log \"Generated #{@toString()}.\"\n\n  destroy: ->\n    # Just trying to destroy __aetherAPIClone, but might as well nuke everything just in case\n    @[key] = undefined for key of @\n    @destroyed = true\n    @destroy = ->\n\n  updateRegistration: ->\n    system.register @ for system in @world.systems\n\n  publishNote: (channel, event) ->\n    event.thang = @\n    @world.publishNote channel, event\n\n  getGoalState: (goalID) ->\n    @world.getGoalState goalID\n\n  setGoalState: (goalID, status) ->\n    @world.setGoalState goalID, status\n\n  getThangByID: (id) ->\n    @world.getThangByID id\n\n  addComponents: (components...) ->\n    # We don't need to keep the components around after attaching them, but we will keep their initial config for recreating Thangs\n    @components ?= []\n    for [componentClass, componentConfig] in components\n      @components.push [componentClass, componentConfig]\n      if _.isString componentClass  # We had already turned it into a string, so re-classify it momentarily\n        componentClass = @world.classMap[componentClass]\n      else\n        @world?.classMap[componentClass.className] ?= componentClass\n      c = new componentClass componentConfig ? {}\n      c.attach @\n\n  # [prop, type]s of properties which have values tracked across WorldFrames. Also call keepTrackedProperty some non-expensive time when you change it or it will be skipped.\n  addTrackedProperties: (props...) ->\n    @trackedPropertiesKeys ?= []\n    @trackedPropertiesTypes ?= []\n    @trackedPropertiesUsed ?= []\n    for [prop, type] in props\n      unless type in ThangState.trackedPropertyTypes\n        # How should errors for busted Components work? We can't recover from this and run the world.\n        throw new Error \"Type #{type} for property #{prop} is not a trackable property type: #{ThangState.trackedPropertyTypes}\"\n      oldPropIndex = @trackedPropertiesKeys.indexOf prop\n      if oldPropIndex is -1\n        @trackedPropertiesKeys.push prop\n        @trackedPropertiesTypes.push type\n        @trackedPropertiesUsed.push false\n      else\n        oldType = @trackedPropertiesTypes[oldPropIndex]\n        if type isnt oldType\n          throw new Error \"Two types were specified for trackable property #{prop}: #{oldType} and #{type}.\"\n\n  keepTrackedProperty: (prop) ->\n    # Wish we could do this faster, but I can't think of how.\n    propIndex = @trackedPropertiesKeys.indexOf prop\n    if propIndex isnt -1\n      @trackedPropertiesUsed[propIndex] = true\n\n  # @trackedFinalProperties: names of properties which need to be tracked once at the end of the World; don't worry about types\n  addTrackedFinalProperties: (props...) ->\n    @trackedFinalProperties ?= []\n    @trackedFinalProperties = @trackedFinalProperties.concat (k for k in props when not (k in @trackedFinalProperties))\n\n  getState: ->\n    @_state = new ThangState @\n  setState: (state) ->\n    @_state = state.restore()\n\n  toString: -> @id\n\n  createMethodChain: (methodName) ->\n    @methodChains ?= {}\n    chain = @methodChains[methodName]\n    return chain if chain\n    chain = @methodChains[methodName] = {original: @[methodName], user: null, components: []}\n    @[methodName] = _.partial @callChainedMethod, methodName  # Optimize! _.partial is fastest I've found\n    chain\n\n  appendMethod: (methodName, newMethod) ->\n    # Components add methods that come after the original method\n    @createMethodChain(methodName).components.push newMethod\n\n  callChainedMethod: (methodName, args...) ->\n    # Optimize this like crazy--but how?\n    chain = @methodChains[methodName]\n    primaryMethod = chain.user or chain.original\n    ret = primaryMethod?.apply @, args\n    for componentMethod in chain.components\n      ret2 = componentMethod.apply @, args\n      ret = ret2 ? ret  # override return value only if not null\n    ret\n\n  getMethodSource: (methodName) ->\n    source = {}\n    if @methodChains? and methodName of @methodChains\n      chain = @methodChains[methodName]\n      source.original = chain.original.toString()\n      source.user = chain.user?.toString()\n    else\n      source.original = @[methodName]?.toString() ? ''\n    source.original = Aether.getFunctionBody source.original\n    source\n\n  serialize: ->\n    o = {spriteName: @spriteName, id: @id, components: [], finalState: {}}\n    for [componentClass, componentConfig], i in (@components ? [])\n      if _.isString componentClass\n        componentClassName = componentClass\n      else\n        componentClassName = componentClass.className\n        @world.classMap[componentClass.className] ?= componentClass\n      o.components.push [componentClassName, componentConfig]\n    for trackedFinalProperty in @trackedFinalProperties ? []\n      # TODO: take some (but not all) of serialize logic from ThangState to handle other types\n      o.finalState[trackedFinalProperty] = @[trackedFinalProperty]\n    # Since we might keep tracked properties later during streaming, we need to know which we think are unused.\n    o.unusedTrackedPropertyKeys = (@trackedPropertiesKeys[propIndex] for used, propIndex in @trackedPropertiesUsed when not used)\n    o\n\n  @deserialize: (o, world, classMap, levelComponents) ->\n    t = new Thang world, o.spriteName, o.id\n    for [componentClassName, componentConfig] in o.components\n      unless componentClass = classMap[componentClassName]\n        console.debug 'Compiling new Component while deserializing:', componentClassName\n        componentModel = _.find levelComponents, name: componentClassName\n        componentClass = world.loadClassFromCode componentModel.js, componentClassName, 'component'\n        world.classMap[componentClassName] = componentClass\n      t.addComponents [componentClass, componentConfig]\n    t.unusedTrackedPropertyKeys = o.unusedTrackedPropertyKeys\n    t.unusedTrackedPropertyValues = (t[prop] for prop in o.unusedTrackedPropertyKeys)\n    for prop, val of o.finalState\n      # TODO: take some (but not all) of deserialize logic from ThangState to handle other types\n      t[prop] = val\n    t\n\n  serializeForAether: ->\n    {CN: @constructor.className, id: @id}\n\n  getLankOptions: ->\n    colorConfigs = @teamColors or @world?.getTeamColors() or {}\n    options = {colorConfig: {}}\n    if @id is 'Hero Placeholder' and not @world.getThangByID 'Hero Placeholder 1'\n      return options  # No team colors for heroes on single-player levels\n    if @team and teamColor = colorConfigs[@team]\n      options.colorConfig.team = teamColor\n    if @color and color = @grabColorConfig @color\n      options.colorConfig.color = color\n    if @colors\n      options.colorConfig[colorType] = colorValue for colorType, colorValue of @colors\n    options\n\n  grabColorConfig: (color) ->\n    {\n      green: {hue: 0.33, saturation: 0.5, lightness: 0.5}\n      black: {hue: 0, saturation: 0, lightness: 0.25}\n      violet: {hue: 0.83, saturation: 0.5, lightness: 0.5}\n    }[color]\n","{clone, typedArraySupport} = require './world_utils'\nVector = require './vector'\n\nif typedArraySupport\n  FloatArrayType = Float32Array  # Better performance than Float64Array\n  bytesPerFloat = FloatArrayType.BYTES_PER_ELEMENT ? FloatArrayType.prototype.BYTES_PER_ELEMENT\nelse\n  bytesPerFloat = 4\n\nmodule.exports = class ThangState\n  @className: 'ThangState'\n  @trackedPropertyTypes: [\n    'boolean'\n    'number'\n    'string'\n    'array'  # will turn everything into strings\n    'object'  # grrr\n    'Vector'\n    'Thang'  # serialized as ids, like strings\n  ]\n\n  hasRestored: false\n  constructor: (thang) ->\n    @props = []  # parallel array to @thang's trackedPropertiesKeys/Types\n    return unless thang\n    @thang = thang\n    for prop, propIndex in thang.trackedPropertiesKeys\n      type = thang.trackedPropertiesTypes[propIndex]\n      value = thang[prop]\n      if type is 'Vector'\n        @props.push value?.copy()  # could try storing [x, y, z] or {x, y, z} here instead if this is expensive\n      else if type is 'object' or type is 'array'\n        @props.push clone(value, true)\n      else\n        @props.push value\n\n  # Either pass storage and type, or don't pass either of them\n  getStoredProp: (propIndex, type, storage) ->\n    # Optimize it\n    unless type\n      type = @trackedPropertyTypes[propIndex]\n      storage = @trackedPropertyValues[propIndex]\n    if type is 'Vector'\n      value = new Vector storage[3 * @frameIndex], storage[3 * @frameIndex + 1], storage[3 * @frameIndex + 2]\n    else if type is 'string'\n      specialKey = storage[@frameIndex]\n      value = @specialKeysToValues[specialKey]\n    else if type is 'Thang'\n      specialKey = storage[@frameIndex]\n      value = @thang.world.getThangByID @specialKeysToValues[specialKey]\n    else if type is 'array'\n      specialKey = storage[@frameIndex]\n      valueString = @specialKeysToValues[specialKey]\n      if valueString and valueString.length > 1\n        # Trim leading Group Separator and trailing Record Separator, split by Record Separators, restore string array.\n        value = valueString.substring(1, valueString.length - 1).split '\\x1E'\n      else\n        value = []\n    else\n      value = storage[@frameIndex]\n    value\n\n  getStateForProp: (prop) ->\n    # Get the property, whether we have it stored in @props or in @trackedPropertyValues. Optimize it.\n    # Figured based on http://jsperf.com/object-vs-array-vs-native-linked-list/13 that it should be faster with small arrays to do the indexOf reads (each up to 24x faster) than to do a single object read, and then we don't have to maintain an extra @props object; just keep array\n    propIndex = @trackedPropertyKeys.indexOf prop\n    if propIndex is -1\n      initialPropIndex = @thang.unusedTrackedPropertyKeys.indexOf prop\n      return null if initialPropIndex is -1\n      return @thang.unusedTrackedPropertyValues[initialPropIndex]\n    value = @props[propIndex]\n    return value if value isnt undefined or @hasRestored\n    return @props[propIndex] = @getStoredProp propIndex\n\n  restore: ->\n    # Restore trackedProperties' values to @thang, retrieving them from @trackedPropertyValues if needed. Optimize it.\n    return @ if @thang._state is @ and not @thang.partialState\n    unless @hasRestored  # Restoring in a deserialized World for first time\n      for prop, propIndex in @thang.unusedTrackedPropertyKeys when @trackedPropertyKeys.indexOf(prop) is -1\n        @thang[prop] = @thang.unusedTrackedPropertyValues[propIndex]\n      props = []\n      for prop, propIndex in @trackedPropertyKeys\n        type = @trackedPropertyTypes[propIndex]\n        storage = @trackedPropertyValues[propIndex]\n        props.push @thang[prop] = @getStoredProp propIndex, type, storage\n        #console.log @frameIndex, @thang.id, prop, propIndex, type, storage, 'got', @thang[prop]\n      @props = props\n      @trackedPropertyTypes = @trackedPropertyValues = @specialKeysToValues = null  # leave @trackedPropertyKeys for indexing\n      @hasRestored = true\n    else  # Restoring later times\n      for prop, propIndex in @thang.unusedTrackedPropertyKeys when @trackedPropertyKeys.indexOf(prop) is -1\n        @thang[prop] = @thang.unusedTrackedPropertyValues[propIndex]\n      for prop, propIndex in @trackedPropertyKeys\n        @thang[prop] = @props[propIndex]\n    @thang.partialState = false\n    @thang.stateChanged = true\n    @\n\n  restorePartial: (ratio) ->\n    # Don't think we need to worry about unusedTrackedPropertyValues here.\n    # If it's not tracked yet, it'll very rarely partially change between frames; we can afford to miss the first one.\n    inverse = 1 - ratio\n    for prop, propIndex in @trackedPropertyKeys when prop is 'pos' or prop is 'rotation'\n      if @hasRestored\n        value = @props[propIndex]\n      else\n        type = @trackedPropertyTypes[propIndex]\n        storage = @trackedPropertyValues[propIndex]\n        value = @getStoredProp propIndex, type, storage\n      if prop is 'pos'\n        if (@thang.teleport and @thang.pos.distanceSquared(value) > 900) or (@thang.pos.x is 0 and @thang.pos.y is 0)\n          # Don't interpolate; it was probably a teleport. https://github.com/codecombat/codecombat/issues/738\n          @thang.pos = value\n        else\n          @thang.pos = @thang.pos.copy()\n          @thang.pos.x = inverse * @thang.pos.x + ratio * value.x\n          @thang.pos.y = inverse * @thang.pos.y + ratio * value.y\n          @thang.pos.z = inverse * @thang.pos.z + ratio * value.z\n      else if prop is 'rotation'\n        @thang.rotation = inverse * @thang.rotation + ratio * value\n      @thang.partialState = true\n    @thang.stateChanged = true\n    @\n\n  serialize: (frameIndex, trackedPropertyIndices, trackedPropertyTypes, trackedPropertyValues, specialValuesToKeys, specialKeysToValues) ->\n    # Performance hotspot--called once per tracked property per Thang per frame. Optimize the crap out of it.\n    for type, newPropIndex in trackedPropertyTypes\n      originalPropIndex = trackedPropertyIndices[newPropIndex]\n      storage = trackedPropertyValues[newPropIndex]\n      value = @props[originalPropIndex]\n      if value\n        # undefined, null, false, 0 won't trigger in this serialization code scheme anyway, so we can't differentiate between them when deserializing\n        if type is 'Vector'\n          storage[3 * frameIndex] = value.x\n          storage[3 * frameIndex + 1] = value.y\n          storage[3 * frameIndex + 2] = value.z\n        else if type is 'string'\n          specialKey = specialValuesToKeys[value]\n          unless specialKey\n            specialKey = specialKeysToValues.length\n            specialValuesToKeys[value] = specialKey\n            specialKeysToValues.push value\n            storage[frameIndex] = specialKey\n          storage[frameIndex] = specialKey\n        else if type is 'Thang'\n          value = value.id\n          specialKey = specialValuesToKeys[value]\n          unless specialKey\n            specialKey = specialKeysToValues.length\n            specialValuesToKeys[value] = specialKey\n            specialKeysToValues.push value\n            storage[frameIndex] = specialKey\n          storage[frameIndex] = specialKey\n        else if type is 'array'\n          # We make sure the array keys won't collide with any string keys by using some unprintable characters.\n          stringPieces = ['\\x1D']  # Group Separator\n          for element in value\n            if element and element.id  # Was checking element.isThang, but we can't store non-strings anyway\n              element = element.id\n            stringPieces.push element, '\\x1E'  # Record Separator(s)\n          value = stringPieces.join('')\n          specialKey = specialValuesToKeys[value]\n          unless specialKey\n            specialKey = specialKeysToValues.length\n            specialValuesToKeys[value] = specialKey\n            specialKeysToValues.push value\n            storage[frameIndex] = specialKey\n          storage[frameIndex] = specialKey\n        else\n          storage[frameIndex] = value\n        #console.log @thang.id, 'assigned prop', originalPropIndex, newPropIndex, value, type, 'at', frameIndex, 'to', storage[frameIndex]\n    null\n\n  @deserialize: (world, frameIndex, thang, trackedPropertyKeys, trackedPropertyTypes, trackedPropertyValues, specialKeysToValues) ->\n    # Optimize like no tomorrow--most performance-sensitive part of the whole app, called once per WorldFrame per Thang per trackedProperty, blocking the UI\n    ts = new ThangState\n    ts.thang = thang\n    ts.frameIndex = frameIndex\n    ts.trackedPropertyKeys = trackedPropertyKeys\n    ts.trackedPropertyTypes = trackedPropertyTypes\n    ts.trackedPropertyValues = trackedPropertyValues\n    ts.specialKeysToValues = specialKeysToValues\n    ts\n\n  @transferableBytesNeededForType: (type, nFrames) ->\n    bytes = switch type\n      when 'boolean' then 1\n      when 'number' then bytesPerFloat\n      when 'Vector' then bytesPerFloat * 3\n      when 'string' then 4\n      when 'Thang' then 4  # turn them into strings of their ids\n      when 'array'  then 4  # turn them into strings and hope it doesn't explode?\n      else 0\n    # We need to be a multiple of bytesPerFloat otherwise bigger-byte array (Float64Array, etc.) offsets won't work\n    # http://www.kirupa.com/forum/showthread.php?378737-Typed-Arrays-Y-U-No-offset-at-values-other-than-multiples-of-element-size\n    bytesPerFloat * Math.ceil(nFrames * bytes / bytesPerFloat)\n\n  @createArrayForType: (type, nFrames, buffer, offset) ->\n    bytes = @transferableBytesNeededForType type, nFrames\n    storage = switch type\n      when 'boolean'\n        new Uint8Array(buffer, offset, nFrames)\n      when 'number'\n        new FloatArrayType(buffer, offset, nFrames)\n      when 'Vector'\n        new FloatArrayType(buffer, offset, nFrames * 3)\n      when 'string'\n        new Uint32Array(buffer, offset, nFrames)\n      when 'Thang'\n        new Uint32Array(buffer, offset, nFrames)\n      when 'array'\n        new Uint32Array(buffer, offset, nFrames)\n      else\n        []\n    [storage, bytes]\n\nunless typedArraySupport\n  # Fall back to normal arrays in IE 9\n  ThangState.createArrayForType = (type, nFrames, buffer, offset) ->\n    bytes = @transferableBytesNeededForType type, nFrames\n    elementsPerFrame = if type is 'Vector' then 3 else 1\n    storage = (0 for i in [0 ... nFrames * elementsPerFrame])\n    [storage, bytes]\n","# https://github.com/hornairs/blog/blob/master/assets/coffeescripts/flocking/vector.coffee\nclass Vector\n  @className: 'Vector'\n  # Class methods for nondestructively operating\n  for name in ['add', 'subtract', 'multiply', 'divide', 'limit', 'normalize', 'rotate']\n    do (name) ->\n      Vector[name] = (a, b, useZ) ->\n        a.copy()[name](b, useZ)\n  for name in ['magnitude', 'heading', 'distance', 'dot', 'equals', 'copy', 'distanceSquared']\n    do (name) ->\n      Vector[name] = (a, b, useZ) ->\n        a[name](b, useZ)\n\n  isVector: true\n  apiProperties: ['x', 'y', 'z', 'magnitude', 'heading', 'distance', 'dot', 'equals', 'copy', 'distanceSquared', 'add', 'subtract', 'multiply', 'divide', 'limit', 'normalize', 'rotate']\n\n  constructor: (x=0, y=0, z=0) ->\n    return new Vector x, y, z unless @ instanceof Vector\n    [@x, @y, @z] = [x, y, z]\n\n  copy: ->\n    new Vector(@x, @y, @z)\n\n\n  # Mutating methods:\n\n  normalize: (useZ) ->\n    m = @magnitude useZ\n    @divide m, useZ if m > 0\n    @\n\n  esper_normalize: (useZ) ->\n    @copy().normalize(useZ)\n\n  limit: (max) ->\n    if @magnitude() > max\n      @normalize()\n      @multiply(max)\n    else\n      @\n\n  esper_limit: (max) ->\n    @copy().limit(max)\n\n  subtract: (other, useZ) ->\n    @x -= other.x\n    @y -= other.y\n    @z -= other.z if useZ\n    @\n\n  esper_subtract: (other, useZ) ->\n    @copy().subtract(other, useZ)\n\n  add: (other, useZ) ->\n    @x += other.x\n    @y += other.y\n    @z += other.z if useZ\n    @\n\n  esper_add: (other, useZ) ->\n    @copy().add(other, useZ)\n\n  divide: (n, useZ) ->\n    [@x, @y] = [@x / n, @y / n]\n    @z = @z / n if useZ\n    @\n\n  esper_divide: (n, useZ) ->\n    @copy().divide(n, useZ)\n\n  multiply: (n, useZ) ->\n    [@x, @y] = [@x * n, @y * n]\n    @z = @z * n if useZ\n    @\n\n  esper_multiply: (n, useZ) ->\n    @copy().multiply(n, useZ)\n\n  # Rotate it around the origin\n  # If we ever want to make this also use z: https://en.wikipedia.org/wiki/Axes_conventions\n  rotate: (theta) ->\n    return @ unless theta\n    [@x, @y] = [Math.cos(theta) * @x - Math.sin(theta) * @y, Math.sin(theta) * @x + Math.cos(theta) * @y]\n    @\n\n  esper_rotate: (theta) ->\n    @copy().rotate(theta)\n\n  # Non-mutating methods:\n\n  magnitude: (useZ) ->\n    sum = @x * @x + @y * @y\n    sum += @z * @z if useZ\n    Math.sqrt sum\n\n  magnitudeSquared: (useZ) ->\n    sum = @x * @x + @y * @y\n    sum += @z * @z if useZ\n    sum\n\n  heading: ->\n    -1 * Math.atan2(-1 * @y, @x)\n\n  distance: (other, useZ) ->\n    dx = @x - other.x\n    dy = @y - other.y\n    sum = dx * dx + dy * dy\n    if useZ\n      dz = @z - other.z\n      sum += dz * dz\n    Math.sqrt sum\n\n  distanceSquared: (other, useZ) ->\n    dx = @x - other.x\n    dy = @y - other.y\n    sum = dx * dx + dy * dy\n    if useZ\n      dz = @z - other.z\n      sum += dz * dz\n    sum\n\n  dot: (other, useZ) ->\n    sum = @x * other.x + @y * other.y\n    sum += @z * other.z if useZ\n    sum\n\n  # Not the strict projection, the other isn't converted to a unit vector first.\n  projectOnto: (other, useZ) ->\n    other.copy().multiply(@dot(other, useZ), useZ)\n\n  isZero: (useZ) ->\n    result = @x is 0 and @y is 0\n    result = result and @z is 0 if useZ\n    result\n\n  equals: (other, useZ) ->\n    result = other and @x is other.x and @y is other.y\n    result = result and @z is other.z if useZ\n    result\n\n  invalid: () ->\n    return (@x is Infinity) || isNaN(@x) || @y is Infinity || isNaN(@y) || @z is Infinity || isNaN(@z)\n\n  toString: (precision = 2) ->\n    return \"{x: #{@x.toFixed(precision)}, y: #{@y.toFixed(precision)}, z: #{@z.toFixed(precision)}}\"\n\n\n  serialize: ->\n    {CN: @constructor.className, x: @x, y: @y, z: @z}\n\n  @deserialize: (o, world, classMap) ->\n    new Vector o.x, o.y, o.z\n\n  serializeForAether: -> @serialize()\n  @deserializeFromAether: (o) -> @deserialize o\n\nmodule.exports = Vector\n","Vector = require './vector'\nRectangle = require './rectangle'\nEllipse = require './ellipse'\nLineSegment = require './line_segment'\nWorldFrame = require './world_frame'\nThang = require './thang'\nThangState = require './thang_state'\nRand = require './rand'\nWorldScriptNote = require './world_script_note'\n{now, consolidateThangs, typedArraySupport} = require './world_utils'\nComponent = require 'lib/world/component'\nSystem = require 'lib/world/system'\nPROGRESS_UPDATE_INTERVAL = 100\nDESERIALIZATION_INTERVAL = 10\nREAL_TIME_BUFFER_MIN = 2 * PROGRESS_UPDATE_INTERVAL\nREAL_TIME_BUFFER_MAX = 3 * PROGRESS_UPDATE_INTERVAL\nREAL_TIME_BUFFERED_WAIT_INTERVAL = 0.5 * PROGRESS_UPDATE_INTERVAL\nREAL_TIME_COUNTDOWN_DELAY = 3000  # match CountdownScreen\nITEM_ORIGINAL = '53e12043b82921000051cdf9'\nEXISTS_ORIGINAL = '524b4150ff92f1f4f8000024'\nCOUNTDOWN_LEVELS = ['sky-span']\n\nmodule.exports = class World\n  @className: 'World'\n  age: 0\n  ended: false\n  preloading: false  # Whether we are just preloading a world in case we soon cast it\n  debugging: false  # Whether we are just rerunning to debug a world we've already cast\n  headless: false  # Whether we are just simulating for goal states instead of all serialized results\n  framesSerializedSoFar: 0\n  framesClearedSoFar: 0\n  apiProperties: ['age', 'dt']\n  realTimeBufferMax: REAL_TIME_BUFFER_MAX / 1000\n  constructor: (@userCodeMap, classMap) ->\n    # classMap is needed for deserializing Worlds, Thangs, and other classes\n    @classMap = classMap ? {Vector: Vector, Rectangle: Rectangle, Thang: Thang, Ellipse: Ellipse, LineSegment: LineSegment}\n    Thang.resetThangIDs()\n\n    @userCodeMap ?= {}\n    @thangs = []\n    @thangMap = {}\n    @systems = []\n    @systemMap = {}\n    @scriptNotes = []\n    @rand = new Rand 0  # Existence System may change this seed\n    @frames = [new WorldFrame(@, 0)]\n\n  destroy: ->\n    @goalManager?.destroy()\n    thang.destroy() for thang in @thangs\n    @[key] = undefined for key of @\n    @destroyed = true\n    @destroy = ->\n\n  getFrame: (frameIndex) ->\n    # Optimize it a bit--assume we have all if @ended and are at the previous frame otherwise\n    frames = @frames\n    if @ended\n      frame = frames[frameIndex]\n    else if frameIndex\n      frame = frames[frameIndex - 1].getNextFrame()\n      frames.push frame\n    else\n      frame = frames[0]\n    @age = frameIndex * @dt\n    frame\n\n  getThangByID: (id) ->\n    @thangMap[id]\n\n  setThang: (thang) ->\n    thang.stateChanged = true\n    for old, i in @thangs\n      if old.id is thang.id\n        @thangs[i] = thang\n        break\n    @thangMap[thang.id] = thang\n\n  thangDialogueSounds: (startFrame=0) ->\n    return [] unless startFrame < @frames.length\n    [sounds, seen] = [[], {}]\n    for frameIndex in [startFrame ... @frames.length]\n      frame = @frames[frameIndex]\n      for thangID, state of frame.thangStateMap\n        continue unless state.thang.say and sayMessage = state.getStateForProp 'sayMessage'\n        soundKey = state.thang.spriteName + ':' + sayMessage\n        unless seen[soundKey]\n          sounds.push [state.thang.spriteName, sayMessage]\n          seen[soundKey] = true\n    sounds\n\n  setGoalManager: (@goalManager) ->\n\n  addError: (error) ->\n    (@runtimeErrors ?= []).push error\n    (@unhandledRuntimeErrors ?= []).push error\n\n  loadFrames: (loadedCallback, errorCallback, loadProgressCallback, preloadedCallback, skipDeferredLoading, loadUntilFrame) ->\n    return if @aborted\n    @totalFrames = 2 if @justBegin\n    console.log 'Warning: loadFrames called on empty World (no thangs).' unless @thangs.length\n    continueLaterFn = =>\n      @loadFrames(loadedCallback, errorCallback, loadProgressCallback, preloadedCallback, skipDeferredLoading, loadUntilFrame) unless @destroyed\n    if @realTime and not @countdownFinished\n      @realTimeSpeedFactor = 1\n      unless @showsCountdown\n        if @levelID in ['woodland-cleaver', 'village-guard', 'shield-rush']\n          @realTimeSpeedFactor = 2\n        else if @levelID in ['thornbush-farm', 'back-to-back', 'ogre-encampment', 'peasant-protection', 'munchkin-swarm', 'munchkin-harvest', 'swift-dagger', 'shrapnel', 'arcane-ally', 'touch-of-death', 'bonemender']\n          @realTimeSpeedFactor = 3\n      if @showsCountdown\n        return setTimeout @finishCountdown(continueLaterFn), REAL_TIME_COUNTDOWN_DELAY\n      else\n        @finishCountdown continueLaterFn\n    t1 = now()\n    @t0 ?= t1\n    @worldLoadStartTime ?= t1\n    @lastRealTimeUpdate ?= 0\n    frameToLoadUntil = if loadUntilFrame then loadUntilFrame + 1 else @totalFrames  # Might stop early if debugging.\n    i = @frames.length\n    while true\n      if @indefiniteLength\n        break if not @realTime # realtime has been stopped\n        break if @victory? # game won or lost  # TODO: give a couple seconds of buffer after victory is set instead of ending instantly\n      else\n        break if i >= frameToLoadUntil\n        break if i >= @totalFrames\n      return unless @shouldContinueLoading t1, loadProgressCallback, skipDeferredLoading, continueLaterFn\n      @adjustFlowSettings loadUntilFrame if @debugging\n      try\n        @getFrame(i)\n        ++i  # Increment this after we have succeeded in getting the frame, otherwise we'll have to do that frame again\n      catch error\n        @addError error  # Not an Aether.errors.UserCodeError; maybe we can't recover\n      unless @preloading or @debugging\n        for error in (@unhandledRuntimeErrors ? [])\n          return unless errorCallback error  # errorCallback tells us whether the error is recoverable\n        @unhandledRuntimeErrors = []\n    @finishLoadingFrames loadProgressCallback, loadedCallback, preloadedCallback\n\n  finishLoadingFrames: (loadProgressCallback, loadedCallback, preloadedCallback) ->\n    unless @debugging\n      @ended = true\n      system.finish @thangs for system in @systems\n    if @preloading\n      preloadedCallback()\n    else\n      loadProgressCallback? 1\n      loadedCallback()\n\n  finishCountdown: (continueLaterFn) -> =>\n    return if @destroyed\n    @countdownFinished = true\n    continueLaterFn()\n\n  shouldDelayRealTimeSimulation: (t) ->\n    return false unless @realTime\n    timeSinceStart = (t - @worldLoadStartTime) * @realTimeSpeedFactor\n    timeLoaded = @frames.length * @dt * 1000\n    timeBuffered = timeLoaded - timeSinceStart\n    if @indefiniteLength\n      return timeBuffered > 0\n    else\n      return timeBuffered > REAL_TIME_BUFFER_MAX * @realTimeSpeedFactor\n\n  shouldUpdateRealTimePlayback: (t) ->\n    return false unless @realTime\n    return false if @frames.length * @dt is @lastRealTimeUpdate\n    timeLoaded = @frames.length * @dt * 1000\n    timeSinceStart = (t - @worldLoadStartTime) * @realTimeSpeedFactor\n    remainingBuffer = @lastRealTimeUpdate * 1000 - timeSinceStart\n    if @indefiniteLength\n      return remainingBuffer <= 0\n    else\n      return remainingBuffer < REAL_TIME_BUFFER_MIN * @realTimeSpeedFactor\n\n  shouldContinueLoading: (t1, loadProgressCallback, skipDeferredLoading, continueLaterFn) ->\n    t2 = now()\n    chunkSize = @frames.length - @framesSerializedSoFar\n    simedTime = @frames.length / @frameRate\n\n    chunkTime = switch\n      when simedTime > 15 then 7\n      when simedTime > 10 then 5\n      when simedTime > 5 then 3\n      when simedTime > 2 then 1\n      else 0.5\n\n    bailoutTime = Math.max(2000*chunkTime, 10000)\n\n    dt = t2 - t1\n\n    if @realTime\n      shouldUpdateProgress = @shouldUpdateRealTimePlayback t2\n      shouldDelayRealTimeSimulation = not shouldUpdateProgress and @shouldDelayRealTimeSimulation t2\n    else\n      shouldUpdateProgress = (dt > PROGRESS_UPDATE_INTERVAL and (chunkSize / @frameRate >= chunkTime) or dt > bailoutTime)\n      shouldDelayRealTimeSimulation = false\n    return true unless shouldUpdateProgress or shouldDelayRealTimeSimulation\n    # Stop loading frames for now; continue in a moment.\n    if shouldUpdateProgress\n      @lastRealTimeUpdate = @frames.length * @dt if @realTime\n      #console.log 'we think it is now', (t2 - @worldLoadStartTime) / 1000, 'so delivering', @lastRealTimeUpdate\n      loadProgressCallback? @frames.length / @totalFrames unless @preloading\n    t1 = t2\n    if t2 - @t0 > 1000\n      console.log '  Loaded', @frames.length, 'of', @totalFrames, '(+' + (t2 - @t0).toFixed(0) + 'ms)' unless @realTime\n      @t0 = t2\n    if skipDeferredLoading\n      continueLaterFn()\n    else\n      delay = 0\n      if shouldDelayRealTimeSimulation\n        if @indefiniteLength\n          delay = 1000 / 30\n        else\n          delay = REAL_TIME_BUFFERED_WAIT_INTERVAL\n      setTimeout continueLaterFn, delay\n    false\n\n  adjustFlowSettings: (loadUntilFrame) ->\n    for thang in @thangs when thang.isProgrammable\n      userCode = @userCodeMap[thang.id] ? {}\n      for methodName, aether of userCode\n        framesToLoadFlowBefore = if methodName is 'plan' or methodName is 'makeBid' then 200 else 1  # Adjust if plan() is taking even longer\n        aether._shouldSkipFlow = @frames.length < loadUntilFrame - framesToLoadFlowBefore\n\n  finalizePreload: (loadedCallback) ->\n    @preloading = false\n    loadedCallback() if @ended\n\n  abort: ->\n    @aborted = true\n\n  addFlagEvent: (flagEvent) ->\n    @flagHistory.push flagEvent\n\n  addRealTimeInputEvent: (realTimeInputEvent) ->\n    @realTimeInputEvents.push realTimeInputEvent\n\n  loadFromLevel: (level, willSimulate=true) ->\n    @levelID = level.slug\n    @levelComponents = level.levelComponents\n    @thangTypes = level.thangTypes\n    @loadScriptsFromLevel level\n    @loadSystemsFromLevel level\n    @loadThangsFromLevel level, willSimulate\n    @showsCountdown = @levelID in COUNTDOWN_LEVELS or _.any(@thangs, (t) -> (t.programmableProperties and 'findFlags' in t.programmableProperties) or t.inventory?.flag)\n    @picoCTFProblem = level.picoCTFProblem if level.picoCTFProblem\n    if @picoCTFProblem?.instances and not @picoCTFProblem.flag_sha1\n      @picoCTFProblem = _.merge @picoCTFProblem, @picoCTFProblem.instances[0]\n    system.start @thangs for system in @systems\n\n  loadSystemsFromLevel: (level) ->\n    # Remove old Systems\n    @systems = []\n    @systemMap = {}\n\n    # Load new Systems\n    for levelSystem in level.systems\n      systemModel = levelSystem.model\n      config = levelSystem.config\n      systemClass = @loadClassFromCode systemModel.js, systemModel.name, 'system'\n      #console.log \"using db system class ---\\n\", systemClass, \"\\n--- from code ---n\", systemModel.js, \"\\n---\"\n      system = new systemClass @, config\n      @addSystems system\n    null\n\n  loadThangsFromLevel: (level, willSimulate) ->\n    # Remove old Thangs\n    @thangs = []\n    @thangMap = {}\n\n    # Load new Thangs\n    toAdd = (@loadThangFromLevel thangConfig, level.levelComponents, level.thangTypes for thangConfig in level.thangs ? [])\n    @extraneousThangs = consolidateThangs toAdd if willSimulate  # Combine walls, for example; serialize the leftovers later\n    @addThang thang for thang in toAdd\n    null\n\n  loadThangFromLevel: (thangConfig, levelComponents, thangTypes, equipBy=null) ->\n    components = []\n    for component, componentIndex in thangConfig.components\n      componentModel = _.find levelComponents, (c) ->\n        c.original is component.original and c.version.major is (component.majorVersion ? 0)\n      componentClass = @loadClassFromCode componentModel.js, componentModel.name, 'component'\n      components.push [componentClass, component.config]\n      if component.original is ITEM_ORIGINAL\n        isItem = true\n        component.config.ownerID = equipBy if equipBy\n      else if component.original is EXISTS_ORIGINAL\n        existsConfigIndex = componentIndex\n    if isItem and existsConfigIndex?\n      # For memory usage performance, make sure these don't get any tracked properties assigned.\n      components[existsConfigIndex][1] = {exists: false, stateless: true}\n    thangTypeOriginal = thangConfig.thangType\n    thangTypeModel = _.find thangTypes, (t) -> t.original is thangTypeOriginal\n    return console.error thangConfig.id ? equipBy, 'could not find ThangType for', thangTypeOriginal unless thangTypeModel\n    thangTypeName = thangTypeModel.name\n    thang = new Thang @, thangTypeName, thangConfig.id\n    try\n      thang.addComponents components...\n    catch e\n      console.error 'couldn\\'t load components for', thangTypeOriginal, thangConfig.id, 'because', e.toString(), e.stack\n    thang\n\n  addThang: (thang) ->\n    @thangs.unshift thang  # Interactions happen in reverse order of specification/drawing\n    @setThang thang\n    @updateThangState thang\n    thang.updateRegistration()\n    thang\n\n  loadScriptsFromLevel: (level) ->\n    @scriptNotes = []\n    @scripts = []\n    @addScripts level.scripts...\n\n  loadClassFromCode: (js, name, kind='component') ->\n    # Cache them based on source code so we don't have to worry about extra compilations\n    @componentCodeClassMap ?= {}\n    @systemCodeClassMap ?= {}\n    map = if kind is 'component' then @componentCodeClassMap else @systemCodeClassMap\n    c = map[js]\n    return c if c\n    try\n      c = map[js] = eval js\n    catch err\n      console.error \"Couldn't compile #{kind} code:\", err, \"\\n\", js\n      c = map[js] = {}\n    c.className = name\n    c\n\n  updateThangState: (thang) ->\n    @frames[@frames.length-1].thangStateMap[thang.id] = thang.getState()\n\n  size: ->\n    @calculateBounds() unless @width? and @height?\n    return [@width, @height] if @width? and @height?\n\n  getBounds: ->\n    @calculateBounds() unless @bounds?\n    return @bounds\n\n  calculateBounds: ->\n    bounds = {left: 0, top: 0, right: 0, bottom: 0}\n    hasLand = _.some @thangs, 'isLand'\n    for thang in @thangs when thang.isLand or (not hasLand and thang.rectangle)  # Look at Lands only\n      rect = thang.rectangle().axisAlignedBoundingBox()\n      bounds.left = Math.min(bounds.left, rect.x - rect.width / 2)\n      bounds.right = Math.max(bounds.right, rect.x + rect.width / 2)\n      bounds.bottom = Math.min(bounds.bottom, rect.y - rect.height / 2)\n      bounds.top = Math.max(bounds.top, rect.y + rect.height / 2)\n    @width = bounds.right - bounds.left\n    @height = bounds.top - bounds.bottom\n    @bounds = bounds\n    [@width, @height]\n\n  publishNote: (channel, event) ->\n    event ?= {}\n    channel = 'world:' + channel\n    for script in @scripts ? []\n      continue if script.channel isnt channel\n      scriptNote = new WorldScriptNote script, event\n      continue if scriptNote.invalid\n      @scriptNotes.push scriptNote\n    return unless @goalManager\n    @goalManager.submitWorldGenerationEvent(channel, event, @frames.length)\n\n  getGoalState: (goalID) ->\n    @goalManager.getGoalState(goalID)\n\n  setGoalState: (goalID, status) ->\n    @goalManager.setGoalState(goalID, status)\n\n  endWorld: (victory=false, delay=3, tentative=false) ->\n    @totalFrames = Math.min(@totalFrames, @frames.length + Math.floor(delay / @dt))  # end a few seconds later\n    @victory = victory  # TODO: should just make this signify the winning superteam\n    @victoryIsTentative = tentative\n    status = if @victory then 'won' else 'lost'\n    @publishNote status\n    console.log \"The world ended in #{status} on frame #{@totalFrames}\"\n\n  addSystems: (systems...) ->\n    @systems = @systems.concat systems\n    for system in systems\n      @systemMap[system.constructor.className] = system\n  getSystem: (systemClassName) ->\n    @systemMap?[systemClassName]\n\n  addScripts: (scripts...) ->\n    @scripts = (@scripts ? []).concat scripts\n\n  addTrackedProperties: (props...) ->\n    @trackedProperties = (@trackedProperties ? []).concat props\n\n  serialize: ->\n    # Code hotspot; optimize it\n    @freeMemoryBeforeFinalSerialization() if @ended\n    startFrame = @framesSerializedSoFar\n    endFrame = @frames.length\n    if @indefiniteLength\n      toClear = Math.max(@framesSerializedSoFar-10, 0)\n      for i in _.range(@framesClearedSoFar, toClear)\n        @frames[i] = null\n      @framesClearedSoFar = @framesSerializedSoFar\n    #console.log \"... world serializing frames from\", startFrame, \"to\", endFrame, \"of\", @totalFrames\n    [transferableObjects, nontransferableObjects] = [0, 0]\n    serializedFlagHistory = (_.omit(_.clone(flag), 'processed') for flag in @flagHistory)\n    o = {totalFrames: @totalFrames, maxTotalFrames: @maxTotalFrames, frameRate: @frameRate, dt: @dt, victory: @victory, userCodeMap: {}, trackedProperties: {}, flagHistory: serializedFlagHistory, difficulty: @difficulty, scores: @getScores(), randomSeed: @randomSeed, picoCTFFlag: @picoCTFFlag}\n    o.trackedProperties[prop] = @[prop] for prop in @trackedProperties or []\n\n    for thangID, methods of @userCodeMap\n      serializedMethods = o.userCodeMap[thangID] = {}\n      for methodName, method of methods\n        serializedMethods[methodName] = method.serialize?() ? method # serialize the method again if it has been deserialized\n\n    t0 = now()\n    o.trackedPropertiesThangIDs = []\n    o.trackedPropertiesPerThangIndices = []\n    o.trackedPropertiesPerThangKeys = []\n    o.trackedPropertiesPerThangTypes = []\n    trackedPropertiesPerThangValues = []  # We won't send these, just the offsets and the storage buffer\n    o.trackedPropertiesPerThangValuesOffsets = []  # Needed to reconstruct ArrayBufferViews on other end, since Firefox has bugs transfering those: https://bugzilla.mozilla.org/show_bug.cgi?id=841904 and https://bugzilla.mozilla.org/show_bug.cgi?id=861925  # Actually, as of January 2014, it should be fixed. So we could try to undo the workaround.\n    transferableStorageBytesNeeded = 0\n    nFrames = endFrame - startFrame\n    for thang in @thangs\n      # Don't serialize empty trackedProperties for stateless Thangs which haven't changed (like obstacles).\n      # Check both, since sometimes people mark stateless Thangs but then change them, and those should still be tracked, and the inverse doesn't work on the other end (we'll just think it doesn't exist then).\n      # If streaming the world, a thang marked stateless that actually change will get messed up. I think.\n      continue if thang.stateless and not _.some(thang.trackedPropertiesUsed, Boolean)\n      o.trackedPropertiesThangIDs.push thang.id\n      trackedPropertiesIndices = []\n      trackedPropertiesKeys = []\n      trackedPropertiesTypes = []\n      for used, propIndex in thang.trackedPropertiesUsed\n        continue unless used\n        trackedPropertiesIndices.push propIndex\n        trackedPropertiesKeys.push thang.trackedPropertiesKeys[propIndex]\n        trackedPropertiesTypes.push thang.trackedPropertiesTypes[propIndex]\n      o.trackedPropertiesPerThangIndices.push trackedPropertiesIndices\n      o.trackedPropertiesPerThangKeys.push trackedPropertiesKeys\n      o.trackedPropertiesPerThangTypes.push trackedPropertiesTypes\n      trackedPropertiesPerThangValues.push []\n      o.trackedPropertiesPerThangValuesOffsets.push []\n      for type in trackedPropertiesTypes\n        transferableStorageBytesNeeded += ThangState.transferableBytesNeededForType(type, nFrames)\n    if typedArraySupport\n      o.storageBuffer = new ArrayBuffer(transferableStorageBytesNeeded)\n    else\n      o.storageBuffer = []\n    storageBufferOffset = 0\n    for trackedPropertiesValues, thangIndex in trackedPropertiesPerThangValues\n      trackedPropertiesValuesOffsets = o.trackedPropertiesPerThangValuesOffsets[thangIndex]\n      for type, propIndex in o.trackedPropertiesPerThangTypes[thangIndex]\n        [storage, bytesStored] = ThangState.createArrayForType type, nFrames, o.storageBuffer, storageBufferOffset\n        trackedPropertiesValues.push storage\n        trackedPropertiesValuesOffsets.push storageBufferOffset\n        ++transferableObjects if bytesStored\n        ++nontransferableObjects unless bytesStored\n        if typedArraySupport\n          storageBufferOffset += bytesStored\n        else\n          # Instead of one big array with each storage as a view into it, they're all separate, so let's keep 'em around for flattening.\n          storageBufferOffset += storage.length\n          o.storageBuffer.push storage\n\n    o.specialKeysToValues = [null, Infinity, NaN]\n    # Whatever is in specialKeysToValues index 0 will be default for anything missing, so let's make sure it's null.\n    # Don't think we can include undefined or it'll be treated as a sparse array; haven't tested performance.\n    o.specialValuesToKeys = {}\n    for specialValue, i in o.specialKeysToValues\n      o.specialValuesToKeys[specialValue] = i\n\n    t1 = now()\n    o.frameHashes = []\n    for frameIndex in [startFrame ... endFrame]\n      o.frameHashes.push @frames[frameIndex].serialize(frameIndex - startFrame, o.trackedPropertiesThangIDs, o.trackedPropertiesPerThangIndices, o.trackedPropertiesPerThangTypes, trackedPropertiesPerThangValues, o.specialValuesToKeys, o.specialKeysToValues)\n    t2 = now()\n\n    unless typedArraySupport\n      flattened = []\n      for storage in o.storageBuffer\n        for value in storage\n          flattened.push value\n      o.storageBuffer = flattened\n\n    #console.log 'Allocating memory:', (t1 - t0).toFixed(0), 'ms; assigning values:', (t2 - t1).toFixed(0), 'ms, so', ((t2 - t1) / nFrames).toFixed(3), 'ms per frame for', nFrames, 'frames'\n    #console.log 'Got', transferableObjects, 'transferable objects and', nontransferableObjects, 'nontransferable; stored', transferableStorageBytesNeeded, 'bytes transferably'\n\n    o.thangs = (t.serialize() for t in @thangs.concat(@extraneousThangs ? []))\n    o.scriptNotes = (sn.serialize() for sn in @scriptNotes)\n    if o.scriptNotes.length > 200\n      console.log 'Whoa, serializing a lot of WorldScriptNotes here:', o.scriptNotes.length\n    @freeMemoryAfterEachSerialization() unless @ended\n    {serializedWorld: o, transferableObjects: [o.storageBuffer], startFrame: startFrame, endFrame: endFrame}\n\n  @deserialize: (o, classMap, oldSerializedWorldFrames, finishedWorldCallback, startFrame, endFrame, level, streamingWorld) ->\n    # Code hotspot; optimize it\n    #console.log 'Deserializing', o, 'length', JSON.stringify(o).length\n    #console.log JSON.stringify(o)\n    #console.log 'Got special keys and values:', o.specialValuesToKeys, o.specialKeysToValues\n    perf = {}\n    perf.t0 = now()\n    nFrames = endFrame - startFrame\n    if streamingWorld\n      w = streamingWorld\n      # Make sure we get any Aether updates from the new frames into the already-deserialized streaming world Aethers.\n      for thangID, methods of o.userCodeMap\n        for methodName, serializedAether of methods\n          for aetherStateKey in ['flow', 'metrics', 'style', 'problems']\n            w.userCodeMap[thangID] ?= {}\n            w.userCodeMap[thangID][methodName] ?= {}\n            w.userCodeMap[thangID][methodName][aetherStateKey] = serializedAether[aetherStateKey]\n    else\n      w = new World o.userCodeMap, classMap\n    [w.totalFrames, w.maxTotalFrames, w.frameRate, w.dt, w.scriptNotes, w.victory, w.flagHistory, w.difficulty, w.scores, w.randomSeed, w.picoCTFFlag] = [o.totalFrames, o.maxTotalFrames, o.frameRate, o.dt, o.scriptNotes ? [], o.victory, o.flagHistory, o.difficulty, o.scores, o.randomSeed, o.picoCTFFlag]\n    w[prop] = val for prop, val of o.trackedProperties\n\n    perf.t1 = now()\n    if w.thangs.length\n      for thangConfig in o.thangs\n        if thang = w.thangMap[thangConfig.id]\n          for prop, val of thangConfig.finalState\n            thang[prop] = val\n        else\n          w.thangs.push thang = Thang.deserialize(thangConfig, w, classMap, level.levelComponents)\n          w.setThang thang\n    else\n      w.thangs = (Thang.deserialize(thang, w, classMap, level.levelComponents) for thang in o.thangs)\n      w.setThang thang for thang in w.thangs\n    w.scriptNotes = (WorldScriptNote.deserialize(sn, w, classMap) for sn in o.scriptNotes)\n    perf.t2 = now()\n\n    o.trackedPropertiesThangs = (w.getThangByID thangID for thangID in o.trackedPropertiesThangIDs)\n    o.trackedPropertiesPerThangValues = []\n    for trackedPropertyTypes, thangIndex in o.trackedPropertiesPerThangTypes\n      o.trackedPropertiesPerThangValues.push (trackedPropertiesValues = [])\n      trackedPropertiesValuesOffsets = o.trackedPropertiesPerThangValuesOffsets[thangIndex]\n      for type, propIndex in trackedPropertyTypes\n        storage = ThangState.createArrayForType(type, nFrames, o.storageBuffer, trackedPropertiesValuesOffsets[propIndex])[0]\n        unless typedArraySupport\n          # This could be more efficient\n          i = trackedPropertiesValuesOffsets[propIndex]\n          storage = o.storageBuffer.slice i, i + storage.length\n        trackedPropertiesValues.push storage\n    perf.t3 = now()\n\n    perf.batches = 0\n    perf.framesCPUTime = 0\n    w.frames = [] unless streamingWorld\n    clearTimeout @deserializationTimeout if @deserializationTimeout\n\n    if w.indefiniteLength\n      clearTo = Math.max(w.frames.length - 100, 0)\n      if clearTo > w.framesClearedSoFar\n        for i in _.range(w.framesClearedSoFar, clearTo)\n          w.frames[i] = null\n      w.framesClearedSoFar = clearTo\n\n    @deserializationTimeout = _.delay @deserializeSomeFrames, 1, o, w, finishedWorldCallback, perf, startFrame, endFrame\n    w  # Return in-progress deserializing world\n\n  # Spread deserialization out across multiple calls so the interface stays responsive\n  @deserializeSomeFrames: (o, w, finishedWorldCallback, perf, startFrame, endFrame) =>\n    ++perf.batches\n    startTime = now()\n    for frameIndex in [w.frames.length ... endFrame]\n      w.frames.push WorldFrame.deserialize(w, frameIndex - startFrame, o.trackedPropertiesThangIDs, o.trackedPropertiesThangs, o.trackedPropertiesPerThangKeys, o.trackedPropertiesPerThangTypes, o.trackedPropertiesPerThangValues, o.specialKeysToValues, o.frameHashes[frameIndex - startFrame], w.dt * frameIndex)\n      elapsed = now() - startTime\n      if elapsed > DESERIALIZATION_INTERVAL and frameIndex < endFrame - 1\n        #console.log \"  Deserialization not finished, let's do it again soon. Have:\", w.frames.length, \", wanted from\", startFrame, \"to\", endFrame\n        perf.framesCPUTime += elapsed\n        @deserializationTimeout = _.delay @deserializeSomeFrames, 1, o, w, finishedWorldCallback, perf, startFrame, endFrame\n        return\n    @deserializationTimeout = null\n    perf.framesCPUTime += elapsed\n    @finishDeserializing w, finishedWorldCallback, perf, startFrame, endFrame\n\n  @finishDeserializing: (w, finishedWorldCallback, perf, startFrame, endFrame) ->\n    perf.t4 = now()\n    w.ended = true\n    nFrames = endFrame - startFrame\n    totalCPUTime = perf.t3 - perf.t0 + perf.framesCPUTime\n    #console.log 'Deserialization:', totalCPUTime.toFixed(0) + 'ms (' + (totalCPUTime / nFrames).toFixed(3) + 'ms per frame).', perf.batches, 'batches. Did', startFrame, 'to', endFrame, 'in', (perf.t4 - perf.t0).toFixed(0) + 'ms wall clock time.'\n    if false\n      console.log '  Deserializing--constructing new World:', (perf.t1 - perf.t0).toFixed(2) + 'ms'\n      console.log '  Deserializing--Thangs and ScriptNotes:', (perf.t2 - perf.t1).toFixed(2) + 'ms'\n      console.log '  Deserializing--reallocating memory:', (perf.t3 - perf.t2).toFixed(2) + 'ms'\n      console.log '  Deserializing--WorldFrames:', (perf.t4 - perf.t3).toFixed(2) + 'ms wall clock time,', (perf.framesCPUTime).toFixed(2) + 'ms CPU time'\n    finishedWorldCallback w\n\n  findFirstChangedFrame: (oldWorld) ->\n    return 0 unless oldWorld\n    for newFrame, i in @frames\n      oldFrame = oldWorld.frames[i]\n      break unless oldFrame and ((newFrame.hash is oldFrame.hash) or not newFrame.hash? or not oldFrame.hash?)  # undefined gets in there when streaming at the last frame of each batch for some reason\n    firstChangedFrame = i\n    if @frames.length is @totalFrames\n      if @frames[i]\n        console.log 'First changed frame is', firstChangedFrame, 'with hash', @frames[i].hash, 'compared to', oldWorld.frames[i]?.hash\n      else\n        console.log 'No frames were changed out of all', @frames.length\n    firstChangedFrame\n\n  freeMemoryBeforeFinalSerialization: ->\n    @levelComponents = null\n    @thangTypes = null\n\n  freeMemoryAfterEachSerialization: ->\n    @frames[i] = null for frame, i in @frames when i < @frames.length - 1\n\n  pointsForThang: (thangID, camera=null) ->\n    # Optimized\n    @pointsForThangCache ?= {}\n    cacheKey = thangID\n    allPoints = @pointsForThangCache[cacheKey]\n    unless allPoints\n      allPoints = []\n      lastFrameIndex = @frames.length - 1\n      lastPos = x: null, y: null\n      for frameIndex in [lastFrameIndex .. 0] by -1\n        frame = @frames[frameIndex]\n        continue unless frame # may have been evicted for game dev levels\n        if pos = frame.thangStateMap[thangID]?.getStateForProp 'pos'\n          pos = camera.worldToSurface {x: pos.x, y: pos.y} if camera  # without z\n          if not lastPos.x? or (Math.abs(lastPos.x - pos.x) + Math.abs(lastPos.y - pos.y)) > 1\n            lastPos = pos\n        allPoints.push lastPos.y, lastPos.x unless lastPos.y is 0 and lastPos.x is 0\n      allPoints.reverse()\n      @pointsForThangCache[cacheKey] = allPoints\n\n    return allPoints\n\n  actionsForThang: (thangID, keepIdle=false) ->\n    # Optimized\n    @actionsForThangCache ?= {}\n    cacheKey = thangID + '_' + Boolean(keepIdle)\n    cached = @actionsForThangCache[cacheKey]\n    return cached if cached\n    states = (frame.thangStateMap[thangID] for frame in @frames)\n    actions = []\n    lastAction = ''\n    for state, i in states\n      action = state?.getStateForProp 'action'\n      continue unless action and (action isnt lastAction or state.actionActivated)\n      continue unless state.action isnt 'idle' or keepIdle\n      actions.push {frame: i, pos: state.pos, name: action}\n      lastAction = action\n    @actionsForThangCache[cacheKey] = actions\n    return actions\n\n  getTeamColors: ->\n    teamConfigs = @teamConfigs or {}\n    colorConfigs = {}\n    colorConfigs[teamName] = config.color for teamName, config of teamConfigs\n    colorConfigs\n\n  teamForPlayer: (n) ->\n    playableTeams = @playableTeams ? ['humans']\n    playableTeams[n % playableTeams.length]\n\n  getScores: ->\n    time: @age\n    'damage-taken': @getSystem('Combat')?.damageTakenForTeam 'humans'\n    'damage-dealt': @getSystem('Combat')?.damageDealtForTeam 'humans'\n    'gold-collected': @getSystem('Inventory')?.teamGold.humans?.collected\n    'difficulty': @difficulty\n","ThangState = require './thang_state'\n\nmodule.exports = class WorldFrame\n  @className: 'WorldFrame'\n\n  constructor: (@world, @time=0) ->\n    @thangStateMap = {}\n    @setState() if @world\n\n  getNextFrame: ->\n    # Optimized. Must be called while thangs are current at this frame.\n    nextTime = @time + @world.dt\n    return null if nextTime > @world.lifespan and not @world.indefiniteLength\n    @hash = @world.rand.seed\n    @hash += system.update() for system in @world.systems\n    nextFrame = new WorldFrame(@world, nextTime)\n    return nextFrame\n\n  setState: ->\n    for thang in @world.thangs when not thang.stateless\n      @thangStateMap[thang.id] = thang.getState()\n\n  restoreState: ->\n    thangState.restore() for thangID, thangState of @thangStateMap\n    for thang in @world.thangs\n      if not @thangStateMap[thang.id] and not thang.stateless\n        #console.log 'Frame', @time, 'restoring state for', thang.id, 'and saying it don\\'t exist'\n        thang.exists = false\n\n  restorePartialState: (ratio) ->\n    thangState.restorePartial ratio for thangID, thangState of @thangStateMap\n\n  restoreStateForThang: (thang) ->\n    thangState = @thangStateMap[thang.id]\n    if not thangState\n      if not thang.stateless\n        thang.exists = false\n        #console.log 'Frame', @time, 'restoring state for', thang.id, 'in particular and saying it don\\'t exist'\n      return\n    thangState.restore()\n\n  clearEvents: -> thang.currentEvents = [] for thang in @world.thangs\n\n  toString: ->\n    map = ((' ' for x in [0 .. @world.width])  \\\n           for y in [0 .. @world.height])\n    symbols = '.ox@dfga[]/D'\n    for thang, i in @world.thangs when thang.rectangle\n      rect = thang.rectangle().axisAlignedBoundingBox()\n      for y in [Math.floor(rect.y - rect.height / 2) ... Math.ceil(rect.y + rect.height / 2)]\n        for x in [Math.floor(rect.x - rect.width / 2) ... Math.ceil(rect.x + rect.width / 2)]\n          map[y][x] = symbols[i % symbols.length] if 0 <= y < @world.height and 0 <= x < @world.width\n    @time + '\\n' + (xs.join(' ') for xs in map).join('\\n') + '\\n'\n\n  serialize: (frameIndex, trackedPropertiesThangIDs, trackedPropertiesPerThangIndices, trackedPropertiesPerThangTypes, trackedPropertiesPerThangValues, specialValuesToKeys, specialKeysToValues) ->\n    # Optimize\n    for thangID, thangIndex in trackedPropertiesThangIDs\n      thangState = @thangStateMap[thangID]\n      if thangState\n        thangState.serialize(frameIndex, trackedPropertiesPerThangIndices[thangIndex], trackedPropertiesPerThangTypes[thangIndex], trackedPropertiesPerThangValues[thangIndex], specialValuesToKeys, specialKeysToValues)\n    @hash\n\n  @deserialize: (world, frameIndex, trackedPropertiesThangIDs, trackedPropertiesThangs, trackedPropertiesPerThangKeys, trackedPropertiesPerThangTypes, trackedPropertiesPerThangValues, specialKeysToValues, hash, age) ->\n    # Optimize\n    wf = new WorldFrame null, age\n    wf.world = world\n    wf.hash = hash\n    for thangID, thangIndex in trackedPropertiesThangIDs\n      wf.thangStateMap[thangID] = ThangState.deserialize world, frameIndex, trackedPropertiesThangs[thangIndex], trackedPropertiesPerThangKeys[thangIndex], trackedPropertiesPerThangTypes[thangIndex], trackedPropertiesPerThangValues[thangIndex], specialKeysToValues\n    wf\n","{clone} = require './world_utils'\n{scriptMatchesEventPrereqs} = require './script_event_prereqs'\n\nmodule.exports = class WorldScriptNote\n  @className: 'WorldScriptNote'\n  constructor: (script, @event, world) ->\n    return unless script?\n    @invalid = true\n    return unless scriptMatchesEventPrereqs(script, @event)\n    # Could add the scriptPrereqsSatisfied or seen/repeats stuff if needed\n    @invalid = false\n    @channel = script.channel\n    @event ?= {}\n    @event.replacedNoteChain = script.noteChain\n\n  serialize: ->\n    o = {channel: @channel, event: {}}\n    for key, value of @event\n      if value?.isThang\n        value = {isThang: true, id: value.id}\n      else if _.isArray value\n        for subval, i in value\n          if subval?.isThang\n            value[i] = {isThang: true, id: subval.id}\n      o.event[key] = value\n    o\n\n  @deserialize: (o, world, classMap) ->\n    scriptNote = new WorldScriptNote\n    scriptNote.channel = o.channel\n    scriptNote.event = {}\n    for key, value of o.event\n      if value? and typeof value is 'object' and value.isThang\n        value = world.getThangByID value.id\n      else if _.isArray value\n        for subval, i in value\n          if subval? and typeof subval is 'object' and subval.isThang\n            value[i] = world.getThangByID subval.id\n      else if value? and typeof value is 'object' and value.CN\n        value = classMap[value.CN].deserialize value, world, classMap\n      scriptNote.event[key] = value\n    scriptNote\n","Vector = require './vector'\nRectangle = require './rectangle'\nEllipse = require './ellipse'\nLineSegment = require './line_segment'\nGrid = require './Grid'\n\nmodule.exports.typedArraySupport = typedArraySupport = Float32Array?  # Not in IE until IE 10; we'll fall back to normal arrays\n#module.exports.typedArraySupport = typedArraySupport = false  # imitate IE9 (and in God.coffee)\n\nunless ArrayBufferView?\n  # https://code.google.com/p/chromium/issues/detail?id=60449\n  if typedArraySupport\n    # We have it, it's just not exposed\n    someArray = new Uint8Array(0)\n    if someArray.__proto__\n      # Most browsers\n      ArrayBufferView = someArray.__proto__.__proto__.constructor\n    else\n      # IE before 11\n      ArrayBufferView = Object.getPrototypeOf(Object.getPrototypeOf(someArray)).constructor\n  else\n    # If we don't have typed arrays, we don't need an ArrayBufferView\n    ArrayBufferView = null\n\nmodule.exports.clone = clone = (obj, skipThangs=false) ->\n  # http://coffeescriptcookbook.com/chapters/classes_and_objects/cloning\n  if not obj? or typeof obj isnt 'object'\n    return obj\n\n  if obj instanceof Date\n    return new Date(obj.getTime())\n\n  if obj instanceof RegExp\n    flags = ''\n    flags += 'g' if obj.global?\n    flags += 'i' if obj.ignoreCase?\n    flags += 'm' if obj.multiline?\n    flags += 'y' if obj.sticky?\n    return new RegExp(obj.source, flags)\n\n  if (obj instanceof Vector) or (obj instanceof Rectangle) or (obj instanceof Ellipse) or (obj instanceof LineSegment)\n    return obj.copy()\n\n  if skipThangs and obj.isThang\n    return obj\n\n  if _.isArray obj\n    return obj.slice()\n\n  if ArrayBufferView and obj instanceof ArrayBufferView\n    return new obj.constructor obj\n\n  newInstance = new obj.constructor()\n  for key of obj\n    newInstance[key] = clone obj[key], skipThangs\n\n  newInstance\n\n# Walk a key chain down to the value. Can optionally set newValue instead.\nmodule.exports.downTheChain = downTheChain = (obj, keyChain, newValue=undefined) ->\n  return null unless obj\n  return obj[keyChain] unless _.isArray keyChain\n  value = obj\n  while keyChain.length and value\n    if newValue isnt undefined and keyChain.length is 1\n      value[keyChain[0]] = newValue\n      return newValue\n    value = value[keyChain[0]]\n    keyChain = keyChain[1..]\n  return value\n\nmodule.exports.now = (if window?.performance?.now? then (-> window.performance.now()) else (-> new Date()))\n\nmodule.exports.consolidateThangs = consolidateThangs = (thangs) ->\n  # We can gain a performance increase by consolidating all regular walls into a minimal covering, non-intersecting set a la Gridmancer.\n  debug = false\n  isStructural = (t) ->\n    t.stateless and t.collides and t.collisionCategory is 'obstacles' and t.shape in ['box', 'sheet'] and  # Can only do wall-like obstacle Thangs.\n    t.spriteName isnt 'Ice Wall' and t.restitution is 1.0 and  # Fixed restitution value on 2016-03-15, but it causes discrepancies, so disabled for Kelvintaph levels.\n    /Wall/.test(t.spriteName) and  # Not useful to do Thangs that aren't actually walls because they're usually not on a grid\n    (t.pos.x - t.width / 2 >= 0) and (t.pos.y - t.height / 2 >= 0)  # Grid doesn't handle negative numbers, so don't coalesce walls below/left of 0, 0.\n  structural = _.remove thangs, isStructural\n  return unless structural.length\n  rightmost = _.max structural, (t) -> t.pos.x + t.width / 2\n  topmost = _.max structural, (t) -> t.pos.y + t.height / 2\n  leftmost = _.min structural, (t) -> t.pos.x - t.width / 2\n  bottommost = _.min structural, (t) -> t.pos.y - t.height / 2\n  console.log 'got rightmost', rightmost.id, 'topmost', topmost.id, 'lefmostmost', leftmost.id, 'bottommost', bottommost.id, 'out of', structural.length, 'structural thangs' if debug\n  left = Math.min 0, leftmost.pos.x - leftmost.width / 2\n  bottom = Math.min 0, bottommost.pos.y - bottommost.height / 2\n  if (left < 0) or (bottom < 0)\n    console.error 'Negative structural Thangs aren\\'t supported, sorry!'  # TODO: largestRectangle, AI System, and anything else that accesses grid directly need updating to finish this\n  left = 0\n  bottom = 0\n  width = rightmost.pos.x + rightmost.width / 2 - left\n  height = topmost.pos.y + topmost.height / 2 - bottom\n  padding = 0\n  console.log 'got max width', width, 'height', height, 'left', left, 'bottom', bottom, 'of thangs', thangs.length, 'structural', structural.length if debug\n  grid = new Grid structural, width, height, padding, left, bottom\n\n  dissection = []\n  addStructuralThang = (rect) ->\n    thang = structural[dissection.length]  # Grab one we already know is configured properly.\n    console.error 'Hmm, our dissection has more Thangs than the original structural Thangs?', dissection.length unless thang\n    thang.pos.x = rect.x\n    thang.pos.y = rect.y\n    thang.width = rect.width\n    thang.height = rect.height\n    thang.destroyBody()\n    thang.createBodyDef()\n    thang.createBody()\n    dissection.push thang\n\n  dissectRectangles grid, addStructuralThang, false, debug\n\n  # Now add the new structural thangs back to thangs and return the ones not in the dissection.\n  console.log 'Turned', structural.length, 'structural Thangs into', dissection.length, 'dissecting Thangs.'\n  thangs.push dissection...\n  structural[dissection.length ... structural.length]\n\n\nmodule.exports.dissectRectangles = dissectRectangles = (grid, rectangleCallback, wantEmpty, debug) ->\n  # Mark Maxham's fast sweeper approach: https://github.com/codecombat/codecombat/issues/1090\n  console.log grid.toString() if debug\n  for x in grid.rows grid.left, grid.left + grid.width\n    y = grid.clampColumn grid.bottom\n    while y < grid.clampColumn grid.bottom + grid.height\n      y2 = y  # Note our current y.\n      ++y2 until occ x, y2, grid, wantEmpty  # Sweep through y to expand 1xN rect.\n      if y2 > y  # If we get a hit, sweep X with that swath.\n        x2 = x + 1\n        ++x2 until occCol x2, y, y2, grid, wantEmpty\n        w = x2 - x\n        h = y2 - y\n        rect = addRect grid, x, y, w, h, wantEmpty\n        rectangleCallback rect\n        console.log grid.toString() if debug\n        y = y2\n      ++y\n\nocc = (x, y, grid, wantEmpty) ->\n  return true if y > grid.bottom + grid.height or x > grid.left + grid.width\n  console.error 'trying to check invalid coordinates', x, y, 'from grid', grid.bottom, grid.left, grid.width, grid.height unless grid.grid[y]?[x]\n  Boolean(grid.grid[y][x].length) is wantEmpty\n\noccCol = (x, y1, y2, grid, wantEmpty) ->\n  for j in [y1 ... y2]\n    if occ(x, j, grid, wantEmpty)\n      return true\n  false\n\naddRect = (grid, leftX, bottomY, width, height, wantEmpty) ->\n  for x in [leftX ... leftX + width]\n    for y in [bottomY ... bottomY + height]\n      grid.grid[y][x] = if wantEmpty then [true] else []\n  new Rectangle leftX + width / 2, bottomY + height / 2, width, height\n"]}