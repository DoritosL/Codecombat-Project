{"version":3,"sources":["app/models/LevelSession.coffee"],"names":[],"mappings":"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","file":"public/javascripts/app/models/LevelSession.js","sourcesContent":["CocoModel = require './CocoModel'\n\nmodule.exports = class LevelSession extends CocoModel\n  @className: 'LevelSession'\n  @schema: require 'schemas/models/level_session'\n  urlRoot: '/db/level.session'\n\n  initialize: ->\n    super()\n    @on 'sync', (e) =>\n      state = @get('state') or {}\n      state.scripts ?= {}\n      @set('state', state)\n\n  updatePermissions: ->\n    permissions = @get 'permissions', true\n    permissions = (p for p in permissions when p.target isnt 'public')\n    @set 'permissions', permissions\n\n  getSourceFor: (spellKey) ->\n    # spellKey ex: 'tharin/plan'\n    code = @get('code')\n    parts = spellKey.split '/'\n    code?[parts[0]]?[parts[1]]\n\n  readyToRank: ->\n    return false unless @get('levelID')  # If it hasn't been denormalized, then it's not ready.\n    return false unless c1 = @get('code')\n    return false unless team = @get('team')\n    return true unless c2 = @get('submittedCode')\n    thangSpellArr = (s.split('/') for s in @get('teamSpells')[team])\n    for item in thangSpellArr\n      thang = item[0]\n      spell = item[1]\n      return true if c1[thang][spell] isnt c2[thang]?[spell]\n    false\n\n  isMultiplayer: ->\n    @get('submittedCodeLanguage')? and @get('team')?\n\n  completed: ->\n    @get('state')?.complete || @get('submitted') || false\n\n  shouldAvoidCorruptData: (attrs) ->\n    return false unless me.team is 'humans'\n    if _.string.startsWith (attrs?.code ? @get('code'))?.anya?.makeBid ? '', 'var __interceptThis'\n      noty text: \"Not saving session--it's trying to overwrite Anya's code with transpiled output. Please let us know and help us reproduce this bug!\", layout: 'topCenter', type: 'error', killer: false, timeout: 120000\n      return true\n    false\n\n  save: (attrs, options) ->\n    return if @shouldAvoidCorruptData attrs\n    super attrs, options\n\n  increaseDifficulty: (callback) ->\n    state = @get('state') ? {}\n    state.difficulty = (state.difficulty ? 0) + 1\n    delete state.lastUnsuccessfulSubmissionTime\n    @set 'state', state\n    @trigger 'change-difficulty'\n    @save null, success: callback\n\n  timeUntilResubmit: ->\n    state = @get('state') ? {}\n    return 0 unless last = state.lastUnsuccessfulSubmissionTime\n    last = new Date(last) if _.isString last\n    # Wait at least this long before allowing submit button active again.\n    wait = (last - new Date()) + 22 * 60 * 60 * 1000\n    if wait > 24 * 60 * 60 * 1000\n      # System clock must've gotten busted; max out at one day's wait.\n      wait = 24 * 60 * 60 * 1000\n      state.lastUnsuccessfulSubmissionTime = new Date()\n      @set 'state', state\n    wait\n\n  recordScores: (scores, level) ->\n    return unless scores\n    state = @get 'state'\n    oldTopScores = state.topScores ? []\n    newTopScores = []\n    now = new Date()\n    for scoreType in level.get('scoreTypes') ? []\n      oldTopScore = _.find oldTopScores, type: scoreType\n      newScore = scores[scoreType]\n      unless newScore?\n        newTopScores.push oldTopScore\n        continue\n      newScore *= -1 if scoreType in ['time', 'damage-taken']  # Make it so that higher is better\n      if not oldTopScore? or newScore > oldTopScore.score\n        newTopScores.push type: scoreType, date: now, score: newScore\n      else\n        newTopScores.push oldTopScore\n    state.topScores = newTopScores\n    @set 'state', state\n\n  generateSpellsObject: (options={}) ->\n    {level} = options\n    {createAetherOptions} = require 'lib/aether_utils'\n    aetherOptions = createAetherOptions functionName: 'plan', codeLanguage: @get('codeLanguage'), skipProtectAPI: options.level?.isType('game-dev')\n    spellThang = thang: {id: 'Hero Placeholder'}, aether: new Aether aetherOptions\n    spells = \"hero-placeholder/plan\": thang: spellThang, name: 'plan'\n    source = @get('code')?['hero-placeholder']?.plan ? ''\n    try\n      spellThang.aether.transpile source\n    catch e\n      console.log \"Couldn't transpile!\\n#{source}\\n\", e\n      spellThang.aether.transpile ''\n    spells\n\n  isFake: -> @id is 'A Fake Session ID'\n"]}