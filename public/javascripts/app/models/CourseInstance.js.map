{"version":3,"sources":["app/models/CourseInstance.coffee"],"names":[],"mappings":";AAAA;EAAA;;;;AAAA,YAAY,QAAQ,aAAR;;AACZ,SAAS,QAAQ,uCAAR;;AAET,MAAM,CAAC,OAAP,GAAuB;;;;;;;EACrB,cAAC,UAAD,GAAY;;EACZ,cAAC,OAAD,GAAS;;2BACT,UAAS;;2BAET,YAAW,SAAC,MAAD,EAAS,IAAT;AACT;IAAA,UAAU;MACR,QAAQ,MADA;MAER,KAAK,CAAC,CAAC,MAAF,CAAS,IAAT,EAAY,KAAZ,IAAqB,UAFlB;MAGR,MAAM;QAAE,QAAQ,MAAV;OAHE;;IAKV,CAAC,CAAC,MAAF,CAAS,OAAT,EAAkB,IAAlB;IACA,QAAQ,IAAC,MAAD,CAAO,OAAP;IACR,IAAG,WAAU,EAAE,CAAC,EAAhB;MACE,KAAO,EAAE,CAAC,GAAH,CAAO,iBAAP,CAAP;QACE,EAAE,CAAC,GAAH,CAAO,iBAAP,EAA0B,EAA1B,EADF;;MAEA,EAAE,CAAC,GAAH,CAAO,iBAAP,CAAyB,CAAC,IAA1B,CAA+B,IAAC,GAAhC,EAHF;;AAIA,WAAO;EAZE;;2BAcX,aAAY,SAAC,OAAD,EAAU,IAAV;AACV;IAAA,UAAU;MACR,QAAQ,MADA;MAER,KAAK,CAAC,CAAC,MAAF,CAAS,IAAT,EAAY,KAAZ,IAAqB,UAFlB;MAGR,MAAM;QAAE,gBAAF;OAHE;MAIR,SAAS;eAAA;iBACP,KAAC,QAAD,CAAS,aAAT,EAAwB;YAAE,gBAAF;WAAxB;QADO;MAAA,QAJD;;IAOV,CAAC,CAAC,MAAF,CAAS,OAAT,EAAkB,IAAlB;IACA,QAAQ,IAAC,MAAD,CAAO,OAAP;IACR,UAAG,EAAE,CAAC,EAAH,eAAS,OAAT,WAAH;MACE,KAAO,EAAE,CAAC,GAAH,CAAO,iBAAP,CAAP;QACE,EAAE,CAAC,GAAH,CAAO,iBAAP,EAA0B,EAA1B,EADF;;MAEA,EAAE,CAAC,GAAH,CAAO,iBAAP,CAAyB,CAAC,IAA1B,CAA+B,IAAC,GAAhC,EAHF;;AAIA,WAAO;EAdG;;2BAgBZ,eAAc,SAAC,MAAD,EAAS,IAAT;AACZ;IAAA,UAAU;MACR,KAAK,CAAC,CAAC,MAAF,CAAS,IAAT,EAAY,KAAZ,IAAqB,UADlB;MAER,MAAM,QAFE;MAGR,MAAM;QAAE,QAAQ,MAAV;OAHE;;IAKV,CAAC,CAAC,MAAF,CAAS,OAAT,EAAkB,IAAlB;IACA,QAAQ,IAAC,MAAD,CAAO,OAAP;IACR,IAAwE,WAAU,EAAE,CAAC,EAArF;MAAA,EAAE,CAAC,GAAH,CAAO,iBAAP,EAA0B,CAAC,CAAC,OAAF,CAAU,EAAE,CAAC,GAAH,CAAO,iBAAP,CAAV,EAAqC,IAAC,GAAtC,CAA1B;;AACA,WAAO;EATK;;2BAWd,gBAAe;WACb,6CAA0C,CAAC,IAAC,IAAD,CAAK,UAAL,CAAD,CAA1C,GAA4D,mBAA5D,GAA+E,IAAC;EADnE;;2BAGf,YAAW,SAAC,MAAD,EAAS,IAAT;IACT,SAAS,MAAM,CAAC,EAAP,IAAa;WACtB,aAAW,IAAC,IAAD,CAAK,SAAL,KAAmB,EAA9B;EAFS;;;;GAjDiC","file":"public/javascripts/app/models/CourseInstance.js","sourcesContent":["CocoModel = require './CocoModel'\nschema = require 'schemas/models/course_instance.schema'\n\nmodule.exports = class CourseInstance extends CocoModel\n  @className: 'CourseInstance'\n  @schema: schema\n  urlRoot: '/db/course_instance'\n\n  addMember: (userID, opts) ->\n    options = {\n      method: 'POST'\n      url: _.result(@, 'url') + '/members'\n      data: { userID: userID }\n    }\n    _.extend options, opts\n    jqxhr = @fetch options\n    if userID is me.id\n      unless me.get('courseInstances')\n        me.set('courseInstances', [])\n      me.get('courseInstances').push(@id)\n    return jqxhr\n  \n  addMembers: (userIDs, opts) ->\n    options = {\n      method: 'POST'\n      url: _.result(@, 'url') + '/members'\n      data: { userIDs }\n      success: =>\n        @trigger 'add-members', { userIDs }\n    }\n    _.extend options, opts\n    jqxhr = @fetch(options)\n    if me.id in userIDs\n      unless me.get('courseInstances')\n        me.set('courseInstances', [])\n      me.get('courseInstances').push(@id)\n    return jqxhr\n\n  removeMember: (userID, opts) ->\n    options = {\n      url: _.result(@, 'url') + '/members'\n      type: 'DELETE'\n      data: { userID: userID }\n    }\n    _.extend options, opts\n    jqxhr = @fetch(options)\n    me.set('courseInstances', _.without(me.get('courseInstances'), @id)) if userID is me.id\n    return jqxhr\n\n  firstLevelURL: ->\n    \"/play/level/dungeons-of-kithgard?course=#{@get('courseID')}&course-instance=#{@id}\"\n  \n  hasMember: (userID, opts) ->\n    userID = userID.id or userID\n    userID in (@get('members') or [])\n"]}