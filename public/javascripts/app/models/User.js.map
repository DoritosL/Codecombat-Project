{"version":3,"sources":["app/models/User.coffee"],"names":[],"mappings":"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","file":"public/javascripts/app/models/User.js","sourcesContent":["GRAVATAR_URL = 'https://www.gravatar.com/'\ncache = {}\nCocoModel = require './CocoModel'\nThangType = require './ThangType'\nLevel = require './Level'\nutils = require 'core/utils'\n\nmodule.exports = class User extends CocoModel\n  @className: 'User'\n  @schema: require 'schemas/models/user'\n  urlRoot: '/db/user'\n  notyErrors: false\n\n  isAdmin: -> 'admin' in @get('permissions', true)\n  isArtisan: -> 'artisan' in @get('permissions', true)\n  isInGodMode: -> 'godmode' in @get('permissions', true)\n  isAnonymous: -> @get('anonymous', true)\n  displayName: -> @get('name', true)\n  broadName: ->\n    return '(deleted)' if @get('deleted')\n    name = _.filter([@get('firstName'), @get('lastName')]).join(' ')\n    return name if name\n    name = @get('name')\n    return name if name\n    [emailName, emailDomain] = @get('email')?.split('@') or []\n    return emailName if emailName\n    return 'Anonymous'\n\n  getPhotoURL: (size=80, useJobProfilePhoto=false, useEmployerPageAvatar=false) ->\n    photoURL = if useJobProfilePhoto then @get('jobProfile')?.photoURL else null\n    photoURL ||= @get('photoURL')\n    if photoURL\n      prefix = if photoURL.search(/\\?/) is -1 then '?' else '&'\n      return \"#{photoURL}#{prefix}s=#{size}\" if photoURL.search('http') isnt -1  # legacy\n      return \"/file/#{photoURL}#{prefix}s=#{size}\"\n    return \"/db/user/#{@id}/avatar?s=#{size}&employerPageAvatar=#{useEmployerPageAvatar}\"\n\n  getRequestVerificationEmailURL: ->\n    @url() + \"/request-verify-email\"\n\n  getSlugOrID: -> @get('slug') or @get('_id')\n\n  set: ->\n    if arguments[0] is 'jobProfileApproved' and @get(\"jobProfileApproved\") is false and not @get(\"jobProfileApprovedDate\")\n      @set \"jobProfileApprovedDate\", (new Date()).toISOString()\n    super arguments...\n\n  @getUnconflictedName: (name, done) ->\n    # deprecate in favor of @checkNameConflicts, which uses Promises and returns the whole response\n    $.ajax \"/auth/name/#{encodeURIComponent(name)}\",\n      cache: false\n      success: (data) -> done(data.suggestedName)\n\n  @checkNameConflicts: (name) ->\n    new Promise (resolve, reject) ->\n      $.ajax \"/auth/name/#{encodeURIComponent(name)}\",\n        cache: false\n        success: resolve\n        error: (jqxhr) -> reject(jqxhr.responseJSON)\n\n  @checkEmailExists: (email) ->\n    new Promise (resolve, reject) ->\n      $.ajax \"/auth/email/#{encodeURIComponent(email)}\",\n        cache: false\n        success: resolve\n        error: (jqxhr) -> reject(jqxhr.responseJSON)\n\n  getEnabledEmails: ->\n    (emailName for emailName, emailDoc of @get('emails', true) when emailDoc.enabled)\n\n  setEmailSubscription: (name, enabled) ->\n    newSubs = _.clone(@get('emails')) or {}\n    (newSubs[name] ?= {}).enabled = enabled\n    @set 'emails', newSubs\n\n  isEmailSubscriptionEnabled: (name) -> (@get('emails') or {})[name]?.enabled\n\n  isStudent: -> @get('role') is 'student'\n\n  isTeacher: ->\n    return @get('role') in ['teacher', 'technology coordinator', 'advisor', 'principal', 'superintendent', 'parent']\n\n  isSessionless: ->\n    # TODO: Fix old users who got mis-tagged as teachers\n    # TODO: Should this just be isTeacher, eventually?\n    Boolean((utils.getQueryVariable('dev', false) or me.isTeacher()) and utils.getQueryVariable('course', false))\n\n  setRole: (role, force=false) ->\n    oldRole = @get 'role'\n    return if oldRole is role or (oldRole and not force)\n    @set 'role', role\n    @patch()\n    application.tracker?.updateRole()\n    return @get 'role'\n\n  a = 5\n  b = 100\n  c = b\n\n  # y = a * ln(1/b * (x + c)) + 1\n  @levelFromExp: (xp) ->\n    if xp > 0 then Math.floor(a * Math.log((1 / b) * (xp + c))) + 1 else 1\n\n  # x = b * e^((y-1)/a) - c\n  @expForLevel: (level) ->\n    if level > 1 then Math.ceil Math.exp((level - 1)/ a) * b - c else 0\n\n  @tierFromLevel: (level) ->\n    # TODO: math\n    # For now, just eyeball it.\n    tiersByLevel[Math.min(level, tiersByLevel.length - 1)]\n\n  @levelForTier: (tier) ->\n    # TODO: math\n    for tierThreshold, level in tiersByLevel\n      return level if tierThreshold >= tier\n\n  level: ->\n    totalPoint = @get('points')\n    totalPoint = totalPoint + 1000000 if me.isInGodMode()\n    User.levelFromExp(totalPoint)\n\n  tier: ->\n    User.tierFromLevel @level()\n\n  gems: ->\n    gemsEarned = @get('earned')?.gems ? 0\n    gemsEarned = gemsEarned + 100000 if me.isInGodMode()\n    gemsPurchased = @get('purchased')?.gems ? 0\n    gemsSpent = @get('spent') ? 0\n    Math.floor gemsEarned + gemsPurchased - gemsSpent\n\n  heroes: ->\n    heroes = (me.get('purchased')?.heroes ? []).concat([ThangType.heroes.captain, ThangType.heroes.knight, ThangType.heroes.champion, ThangType.heroes.duelist])\n    heroes.push ThangType.heroes['code-ninja'] if window.serverConfig.codeNinjas\n    #heroes = _.values ThangType.heroes if me.isAdmin()\n    heroes\n  items: -> (me.get('earned')?.items ? []).concat(me.get('purchased')?.items ? []).concat([ThangType.items['simple-boots']])\n  levels: -> (me.get('earned')?.levels ? []).concat(me.get('purchased')?.levels ? []).concat(Level.levels['dungeons-of-kithgard'])\n  ownsHero: (heroOriginal) -> me.isInGodMode() || heroOriginal in @heroes()\n  #ownsItem: (itemOriginal) -> itemOriginal in @items()  # See redefinition while getDungeonLevelsGroup test is active\n  #ownsLevel: (levelOriginal) -> levelOriginal in @levels()  # See redefinition while getDungeonLevelsGroup test is active\n\n  getHeroClasses: ->\n    idsToSlugs = _.invert ThangType.heroes\n    myHeroSlugs = (idsToSlugs[id] for id in @heroes())\n    myHeroClasses = []\n    myHeroClasses.push heroClass for heroClass, heroSlugs of ThangType.heroClasses when _.intersection(myHeroSlugs, heroSlugs).length\n    myHeroClasses\n\n  getAnnouncesActionAudioGroup: ->\n    return @announcesActionAudioGroup if @announcesActionAudioGroup\n    group = me.get('testGroupNumber') % 4\n    @announcesActionAudioGroup = switch group\n      when 0 then 'all-audio'\n      when 1 then 'no-audio'\n      when 2 then 'just-take-damage'\n      when 3 then 'without-take-damage'\n    @announcesActionAudioGroup = 'all-audio' if me.isAdmin()\n    application.tracker.identify announcesActionAudioGroup: @announcesActionAudioGroup unless me.isAdmin()\n    @announcesActionAudioGroup\n\n  getCampaignAdsGroup: ->\n    return @campaignAdsGroup if @campaignAdsGroup\n    # group = me.get('testGroupNumber') % 2\n    # @campaignAdsGroup = switch group\n    #   when 0 then 'no-ads'\n    #   when 1 then 'leaderboard-ads'\n    @campaignAdsGroup = 'leaderboard-ads'\n    @campaignAdsGroup = 'no-ads' if me.isAdmin()\n    application.tracker.identify campaignAdsGroup: @campaignAdsGroup unless me.isAdmin()\n    @campaignAdsGroup\n\n  # Signs and Portents was receiving updates after test started, and also had a big bug on March 4, so just look at test from March 5 on.\n  # ... and stopped working well until another update on March 10, so maybe March 11+...\n  # ... and another round, and then basically it just isn't completing well, so we pause the test until we can fix it.\n  getFourthLevelGroup: ->\n    return 'forgetful-gemsmith'\n    return @fourthLevelGroup if @fourthLevelGroup\n    group = me.get('testGroupNumber') % 8\n    @fourthLevelGroup = switch group\n      when 0, 1, 2, 3 then 'signs-and-portents'\n      when 4, 5, 6, 7 then 'forgetful-gemsmith'\n    @fourthLevelGroup = 'signs-and-portents' if me.isAdmin()\n    application.tracker.identify fourthLevelGroup: @fourthLevelGroup unless me.isAdmin()\n    @fourthLevelGroup\n\n  getDefaultLanguageGroup: ->\n    # A/B test default programming language in home version\n    return @defaultLanguageGroup if @defaultLanguageGroup\n    group = me.get('testGroupNumber') % 2\n    @defaultLanguageGroup = switch group\n      when 0 then 'javascript'\n      when 1 then 'python'\n    application.tracker.identify defaultLanguageGroup: @defaultLanguageGroup unless me.isAdmin()\n    @defaultLanguageGroup\n\n  getVideoTutorialStylesIndex: (numVideos=0)->\n    # A/B Testing video tutorial styles\n    # Not a constant number of videos available (e.g. could be 0, 1, 3, or 4 currently)\n    return 0 unless numVideos > 0\n    return me.get('testGroupNumber') % numVideos\n\n  getYearSubscriptionGroup: ->\n    return @yearSubscriptionGroup if @yearSubscriptionGroup\n    @yearSubscriptionGroup = utils.getYearSubscriptionGroup(me.get('testGroupNumber'))\n    application.tracker.identify yearSubscriptionGroup: @yearSubscriptionGroup unless me.isAdmin()\n    @yearSubscriptionGroup\n\n  getDungeonLevelsGroup: ->\n    # Fully dismantle this after Hour of Code week is done\n    return @dungeonLevelsGroup if @dungeonLevelsGroup\n    @dungeonLevelsGroup = 'none'\n    @dungeonLevelsHidden = ['cell-commentary', 'kithgard-librarian', 'loop-da-loop', 'haunted-kithmaze', 'dread-door', 'closing-the-distance']\n    skipTest = me.isAdmin() or me.isPremium() or features.freeOnly or me.isOnPremiumServer()\n    if skipTest\n      [@dungeonLevelsGroup, @dungeonLevelsHidden] = ['control', []]\n    @dungeonLevelsGroup\n\n  getDungeonLevelsHidden: ->\n    @getDungeonLevelsGroup()\n    @dungeonLevelsHidden\n\n  dungeonLevelSlugsToOriginals:\n    'cell-commentary': '57aa1bd5e5636725008854c0'\n    'kithgard-librarian': '5604169b60537b8705386a59'\n    'loop-da-loop': '565ce2291b940587057366dd'\n    'haunted-kithmaze': '545a5914d820eb0000f6dc0a'\n    'dread-door': '5418d40f4c16460000ab9ac2'\n    'closing-the-distance': '541b288e1ccc8eaae19f3c25'\n    'fire-dancing': '55ca293b9bc1892c835b0136'\n    'the-second-kithmaze': '5418cf256bae62f707c7e1c3'\n    'descending-further': '5452a84d57e83800009730e4'\n    'known-enemy': '5452adea57e83800009730ee'\n    'cupboards-of-kithgard': '54e0cdefe308cb510555a7f5'\n    'a-mayhem-of-munchkins': '55ca29439bc1892c835b0137'\n    'tactical-strike': '5452cfa706a59e000067e4f5'\n\n  dungeonItemSlugsToOriginals:\n    'programmaticon-i': '53e4108204c00d4607a89f78'\n    'wooden-shield': '53e22aa153457600003e3ef5'\n\n  dungeonLevelUnlocksToRewrite: [\n    {levels: ['kithgard-librarian'], unlockedInsteadOf: 'cell-commentary', groups: ['kithgard-librarian']}\n    {levels: ['fire-dancing'], item: 'programmaticon-i', unlockedInsteadOf: 'cell-commentary', groups: ['loop-da-loop', 'haunted-kithmaze', 'none']}\n    {levels: ['fire-dancing'], item: 'programmaticon-i', unlockedInsteadOf: 'kithgard-librarian', groups: ['cell-commentary']}\n    {levels: ['haunted-kithmaze'], unlockedInsteadOf: 'loop-da-loop', groups: ['haunted-kithmaze']}\n    {levels: ['the-second-kithmaze', 'descending-further'], unlockedInsteadOf: 'haunted-kithmaze', groups: ['conservative', 'loop-da-loop']}\n    {levels: ['the-second-kithmaze', 'descending-further'], unlockedInsteadOf: 'loop-da-loop', groups: ['cell-commentary', 'kithgard-librarian', 'none']}\n    {levels: ['known-enemy', 'cupboards-of-kithgard'], unlockedInsteadOf: 'dread-door', groups: ['conservative', 'cell-commentary', 'kithgard-librarian', 'loop-da-loop', 'haunted-kithmaze', 'none']}\n    {levels: ['a-mayhem-of-munchkins', 'tactical-strike'], item: 'wooden-shield', unlockedInsteadOf: 'closing-the-distance', groups: ['conservative', 'cell-commentary', 'kithgard-librarian', 'loop-da-loop', 'haunted-kithmaze', 'none']}\n  ]\n\n  ownsLevel: (levelOriginal) ->\n    # Temporary hack; revert to simpler ownsLevel above when test is concluded\n    return true if levelOriginal in @levels()\n    @dungeonLevelOriginalsToSlugs ?= _.invert @dungeonLevelSlugsToOriginals\n    levelSlug = @dungeonLevelOriginalsToSlugs[levelOriginal]\n    return false unless levelSlug\n    for levelUnlockRewrite in @dungeonLevelUnlocksToRewrite when @getDungeonLevelsGroup() in levelUnlockRewrite.groups\n      if levelSlug in levelUnlockRewrite.levels\n        return @ownsLevel @dungeonLevelSlugsToOriginals[levelUnlockRewrite.unlockedInsteadOf]\n    false\n\n  ownsItem: (itemOriginal) ->\n    # Temporary hack; revert to simpler ownsItem above when test is concluded\n    return true if itemOriginal in @items()\n    @dungeonItemOriginalsToSlugs ?= _.invert @dungeonItemSlugsToOriginals\n    itemSlug = @dungeonItemOriginalsToSlugs[itemOriginal]\n    return false unless itemSlug\n    for levelUnlockRewrite in @dungeonLevelUnlocksToRewrite when @getDungeonLevelsGroup() in levelUnlockRewrite.groups\n      if itemSlug is levelUnlockRewrite.item\n        return @ownsLevel @dungeonLevelSlugsToOriginals[levelUnlockRewrite.unlockedInsteadOf]\n    false\n\n  hasSubscription: ->\n    return false unless stripe = @get('stripe')\n    return true if stripe.sponsorID\n    return true if stripe.subscriptionID\n    return true if stripe.free is true\n    return true if _.isString(stripe.free) and new Date() < new Date(stripe.free)\n\n  isPremium: ->\n    return true if me.isInGodMode()\n    return true if me.isAdmin()\n    return true if me.hasSubscription()\n    return false\n\n  isOnPremiumServer: ->\n    return true if me.get('country') in ['brazil']\n    return true if me.get('country') in ['china'] and (me.isPremium() or me.get('stripe'))\n    return false\n\n  sendVerificationCode: (code) ->\n    $.ajax({\n      method: 'POST'\n      url: \"/db/user/#{@id}/verify/#{code}\"\n      success: (attributes) =>\n        this.set attributes\n        @trigger 'email-verify-success'\n      error: =>\n        @trigger 'email-verify-error'\n    })\n\n  isEnrolled: -> @prepaidStatus() is 'enrolled'\n\n  prepaidStatus: -> # 'not-enrolled', 'enrolled', 'expired'\n    coursePrepaid = @get('coursePrepaid')\n    return 'not-enrolled' unless coursePrepaid\n    return 'enrolled' unless coursePrepaid.endDate\n    return if coursePrepaid.endDate > new Date().toISOString() then 'enrolled' else 'expired'\n\n  prepaidType: ->\n    # TODO: remove once legacy prepaidIDs are migrated to objects\n    return undefined unless @get('coursePrepaid') or @get('coursePrepaidID')\n    # NOTE: Default type is 'course' if no type is marked on the user's copy\n    return @get('coursePrepaid')?.type or 'course'\n\n  prepaidIncludesCourse: (course) ->\n    return false unless @get('coursePrepaid') or @get('coursePrepaidID')\n    includedCourseIDs = @get('coursePrepaid')?.includedCourseIDs\n    courseID = course.id or course\n    # NOTE: Full licenses implicitly include all courses\n    return !includedCourseIDs or courseID in includedCourseIDs\n\n  # Function meant for \"me\"\n\n  spy: (user, options={}) ->\n    user = user.id or user # User instance, user ID, email or username\n    options.url = '/auth/spy'\n    options.type = 'POST'\n    options.data ?= {}\n    options.data.user = user\n    @fetch(options)\n\n  stopSpying: (options={}) ->\n    options.url = '/auth/stop-spying'\n    options.type = 'POST'\n    @fetch(options)\n\n  logout: (options={}) ->\n    options.type = 'POST'\n    options.url = '/auth/logout'\n    FB?.logout?()\n    options.success ?= ->\n      location = _.result(currentView, 'logoutRedirectURL')\n      if location\n        window.location = location\n      else\n        window.location.reload()\n    @fetch(options)\n\n  signupWithPassword: (name, email, password, options={}) ->\n    options.url = _.result(@, 'url') + '/signup-with-password'\n    options.type = 'POST'\n    options.data ?= {}\n    _.extend(options.data, {name, email, password})\n    options.contentType = 'application/json'\n    options.data = JSON.stringify(options.data)\n    jqxhr = @fetch(options)\n    jqxhr.then ->\n      window.tracker?.trackEvent 'Finished Signup', category: \"Signup\", label: 'CodeCombat'\n    return jqxhr\n\n  signupWithFacebook: (name, email, facebookID, options={}) ->\n    options.url = _.result(@, 'url') + '/signup-with-facebook'\n    options.type = 'POST'\n    options.data ?= {}\n    _.extend(options.data, {name, email, facebookID, facebookAccessToken: application.facebookHandler.token()})\n    options.contentType = 'application/json'\n    options.data = JSON.stringify(options.data)\n    jqxhr = @fetch(options)\n    jqxhr.then ->\n      window.tracker?.trackEvent 'Facebook Login', category: \"Signup\", label: 'Facebook'\n      window.tracker?.trackEvent 'Finished Signup', category: \"Signup\", label: 'Facebook'\n    return jqxhr\n\n  signupWithGPlus: (name, email, gplusID, options={}) ->\n    options.url = _.result(@, 'url') + '/signup-with-gplus'\n    options.type = 'POST'\n    options.data ?= {}\n    _.extend(options.data, {name, email, gplusID, gplusAccessToken: application.gplusHandler.token()})\n    options.contentType = 'application/json'\n    options.data = JSON.stringify(options.data)\n    jqxhr = @fetch(options)\n    jqxhr.then ->\n      window.tracker?.trackEvent 'Google Login', category: \"Signup\", label: 'GPlus'\n      window.tracker?.trackEvent 'Finished Signup', category: \"Signup\", label: 'GPlus'\n    return jqxhr\n\n  fetchGPlusUser: (gplusID, options={}) ->\n    options.data ?= {}\n    options.data.gplusID = gplusID\n    options.data.gplusAccessToken = application.gplusHandler.token()\n    @fetch(options)\n\n  loginGPlusUser: (gplusID, options={}) ->\n    options.url = '/auth/login-gplus'\n    options.type = 'POST'\n    options.data ?= {}\n    options.data.gplusID = gplusID\n    options.data.gplusAccessToken = application.gplusHandler.token()\n    @fetch(options)\n\n  fetchFacebookUser: (facebookID, options={}) ->\n    options.data ?= {}\n    options.data.facebookID = facebookID\n    options.data.facebookAccessToken = application.facebookHandler.token()\n    @fetch(options)\n\n  loginFacebookUser: (facebookID, options={}) ->\n    options.url = '/auth/login-facebook'\n    options.type = 'POST'\n    options.data ?= {}\n    options.data.facebookID = facebookID\n    options.data.facebookAccessToken = application.facebookHandler.token()\n    @fetch(options)\n\n  loginPasswordUser: (usernameOrEmail, password, options={}) ->\n    options.url = '/auth/login'\n    options.type = 'POST'\n    options.data ?= {}\n    _.extend(options.data, { username: usernameOrEmail, password })\n    @fetch(options)\n\n  makeCoursePrepaid: ->\n    coursePrepaid = @get('coursePrepaid')\n    return null unless coursePrepaid\n    Prepaid = require 'models/Prepaid'\n    return new Prepaid(coursePrepaid)\n\n  # TODO: Probably better to denormalize this into the user\n  getLeadPriority: ->\n    request = $.get('/db/user/-/lead-priority')\n    request.then ({ priority }) ->\n      application.tracker.identify({ priority })\n    request\n\n  becomeStudent: (options={}) ->\n    options.url = '/db/user/-/become-student'\n    options.type = 'PUT'\n    @fetch(options)\n\n  remainTeacher: (options={}) ->\n    options.url = '/db/user/-/remain-teacher'\n    options.type = 'PUT'\n    @fetch(options)\n\n  destudent: (options={}) ->\n    options.url = _.result(@, 'url') + '/destudent'\n    options.type = 'POST'\n    @fetch(options)\n\n  deteacher: (options={}) ->\n    options.url = _.result(@, 'url') + '/deteacher'\n    options.type = 'POST'\n    @fetch(options)\n\n  checkForNewAchievement: (options={}) ->\n    options.url = _.result(@, 'url') + '/check-for-new-achievement'\n    options.type = 'POST'\n    jqxhr = @fetch(options)\n\n    # Setting @loading to false because otherwise, if the user tries to edit their settings while checking\n    # for new achievements, the changes won't be saved. This is because AccountSettingsView relies on\n    # hasLocalChanges, and that is only true if, when set is called, the model isn't \"loading\".\n    @loading = false\n\n    return jqxhr\n    \n  finishedAnyLevels: -> Boolean((@get('stats') or {}).gamesCompleted)\n\n  isFromUk: -> @get('country') is 'united-kingdom'\n\ntiersByLevel = [-1, 0, 0.05, 0.14, 0.18, 0.32, 0.41, 0.5, 0.64, 0.82, 0.91, 1.04, 1.22, 1.35, 1.48, 1.65, 1.78, 1.96, 2.1, 2.24, 2.38, 2.55, 2.69, 2.86, 3.03, 3.16, 3.29, 3.42, 3.58, 3.74, 3.89, 4.04, 4.19, 4.32, 4.47, 4.64, 4.79, 4.96,\n  5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 10, 10.5, 11, 11.5, 12, 12.5, 13, 13.5, 14, 14.5, 15\n]\n"]}