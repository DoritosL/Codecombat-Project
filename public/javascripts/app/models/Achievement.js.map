{"version":3,"sources":["app/models/Achievement.coffee"],"names":[],"mappings":";AAAA;EAAA;;;AAAA,YAAY,QAAQ,aAAR;;AACZ,QAAQ,QAAQ,eAAR;;AAER,MAAM,CAAC,OAAP,GAAuB;;;;;;;EACrB,WAAC,UAAD,GAAY;;EACZ,WAAC,OAAD,GAAS,QAAQ,4BAAR;;wBACT,UAAS;;wBACT,qBAAoB;;wBAEpB,eAAc;WACZ;EADY;;wBAGd,iBAAgB;AACd;IAAA,OAAO,IAAC,IAAD,CAAK,UAAL,EAAiB,IAAjB;IACP,IAA6D,IAAI,CAAC,IAAL,IAAa,KAAK,CAAC,gBAAhF;AAAA,aAAO,KAAK,CAAC,gBAAiB,KAAI,CAAC,IAAL,CAAvB,CAAkC,IAAI,CAAC,UAAvC,EAAP;;EAFc;;wBAIhB,OAAM;IACJ,IAAC,aAAD;WACA,uCAAM,SAAN;EAFI;;EAIN,WAAC,aAAD,GACE;IAAA,GAAG,kBAAH;IACA,GAAG,mBADH;IAEA,GAAG,oBAFH;IAGA,GAAG,kBAHH;IAIA,GAAG,qBAJH;;;wBAMF,WAAU;WAAG,WAAW,CAAC,YAAa,KAAC,IAAD,CAAK,YAAL,EAAmB,IAAnB;EAA5B;;EAEV,WAAC,gBAAD,GAAkB;;wBAElB,cAAa;IACX,IAAG,IAAC,IAAD,CAAK,MAAL,CAAH;aAAoB,WAAW,IAAC,IAAD,CAAK,MAAL,EAA/B;KAAA;aAAiD,WAAW,CAAC,gBAA7D;;EADW;;wBAGb,WAAU;WAAG;EAAH;;wBAGV,mBAAkB;AAChB;IAAA,IAA0B,IAAC,eAA3B;AAAA,aAAO,IAAC,gBAAR;;IACA,SAAS,QAAQ,CAAC,aAAT,CAAuB,QAAvB;IACT,QAAQ,IAAI;IACZ,KAAK,CAAC,GAAN,GAAY,IAAC,YAAD;IACZ,QAAQ,CAAC,CAAC,QAAF;IACR,KAAK,CAAC,MAAN,GAAe;aAAA;AACb;QAAA,MAAM,CAAC,KAAP,GAAe,KAAK,CAAC;QACrB,MAAM,CAAC,MAAP,GAAgB,KAAK,CAAC;QACtB,UAAU,MAAM,CAAC,UAAP,CAAkB,IAAlB;QACV,OAAO,CAAC,SAAR,CAAkB,KAAlB,EAAyB,CAAzB,EAA4B,CAA5B;QACA,UAAU,OAAO,CAAC,YAAR,CAAqB,CAArB,EAAwB,CAAxB,EAA2B,MAAM,CAAC,KAAlC,EAAyC,MAAM,CAAC,MAAhD;QACV,UAAU,KAAK,CAAC,SAAN,CAAgB,OAAhB;QACV,OAAO,CAAC,YAAR,CAAqB,OAArB,EAA8B,CAA9B,EAAiC,CAAjC;QACA,KAAC,eAAD,GAAkB,MAAM,CAAC,SAAP;eAClB,KAAK,CAAC,OAAN,CAAc,KAAC,eAAf;MATa;IAAA;WAUf;EAhBgB;;wBAkBlB,oBAAmB;WAAG,IAAC;EAAJ;;wBAEnB,WAAU;WAAG,KAAK,CAAC,IAAN,CAAW,IAAC,WAAZ,EAAwB,MAAxB;EAAH;;wBAEV,kBAAiB;WAAG,KAAK,CAAC,IAAN,CAAW,IAAC,WAAZ,EAAwB,aAAxB;EAAH;;;;GAxDwB","file":"public/javascripts/app/models/Achievement.js","sourcesContent":["CocoModel = require './CocoModel'\nutils = require '../core/utils'\n\nmodule.exports = class Achievement extends CocoModel\n  @className: 'Achievement'\n  @schema: require 'schemas/models/achievement'\n  urlRoot: '/db/achievement'\n  editableByArtisans: true\n\n  isRepeatable: ->\n    @get('proportionalTo')?\n\n  getExpFunction: ->\n    func = @get('function', true)\n    return utils.functionCreators[func.kind](func.parameters) if func.kind of utils.functionCreators\n\n  save: ->\n    @populateI18N()\n    super(arguments...)\n\n  @styleMapping:\n    1: 'achievement-wood'\n    2: 'achievement-stone'\n    3: 'achievement-silver'\n    4: 'achievement-gold'\n    5: 'achievement-diamond'\n\n  getStyle: -> Achievement.styleMapping[@get 'difficulty', true]\n\n  @defaultImageURL: '/images/achievements/default.png'\n\n  getImageURL: ->\n    if @get 'icon' then '/file/' + @get('icon') else Achievement.defaultImageURL\n\n  hasImage: -> @get('icon')?\n\n  # TODO Could cache the default icon separately\n  cacheLockedImage: ->\n    return @lockedImageURL if @lockedImageURL\n    canvas = document.createElement 'canvas'\n    image = new Image\n    image.src = @getImageURL()\n    defer = $.Deferred()\n    image.onload = =>\n      canvas.width = image.width\n      canvas.height = image.height\n      context = canvas.getContext '2d'\n      context.drawImage image, 0, 0\n      imgData = context.getImageData 0, 0, canvas.width, canvas.height\n      imgData = utils.grayscale imgData\n      context.putImageData imgData, 0, 0\n      @lockedImageURL = canvas.toDataURL()\n      defer.resolve @lockedImageURL\n    defer\n\n  getLockedImageURL: -> @lockedImageURL\n\n  i18nName: -> utils.i18n @attributes, 'name'\n\n  i18nDescription: -> utils.i18n @attributes, 'description'\n"]}