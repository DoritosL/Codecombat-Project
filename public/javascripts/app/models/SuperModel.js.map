{"version":3,"sources":["app/models/SuperModel.coffee"],"names":[],"mappings":";AAAA;EAAA;;;;AAAA,MAAM,CAAC,OAAP,GAAuB;;;EACR;;IACX,IAAC,IAAD,GAAO;IACP,IAAC,MAAD,GAAS;IACT,IAAC,SAAD,GAAY;IACZ,IAAC,UAAD,GAAa;IACb,IAAC,IAAD,GAAO;IACP,IAAC,YAAD,GAAe;IAEf,IAAC,OAAD,GAAU;IACV,IAAC,YAAD,GAAe;EATJ;;uBAkBb,SAAQ;AAEN;IAAA,OAAO,CAAC,IAAR,CAAa,4CAAb;IACA,OAAO,CAAC,IAAR,CAAe,CAAC,CAAC,CAAC,MAAF,CAAS,IAAC,UAAV,CAAoB,CAAC,MAAtB,IAA6B,aAA5C;IACA,aAAa;AACb;AAAA;;YAA0C;;;MACxC,OAAO,CAAC,IAAR,CAAa,IAAb,EAAmB,QAAQ,CAAC,IAA5B,EAAkC,QAAlC,EAA4C,QAAQ,CAAC,QAArD,EAA+D,QAAQ,CAAC,KAAxE;MACA,KAAgC,QAAQ,CAAC,QAAzC;QAAA,UAAU,CAAC,IAAX,CAAgB,QAAhB;;AAFF;WAGA;EARM;;uBAUR,gBAAe;AAEb;IAAA;;AAAO;AAAA;WAAA;;qBAAA,CAAC,CAAC,GAAF,CAAM,KAAN;AAAA;;;AACP,WAAO,CAAC,CAAC,IAAF,CAAO,GAAP,IAAc,CAAC,CAAC,IAAF,CAAO,CAAC,CAAC,MAAF,CAAS,GAAT,CAAP;EAHR;;uBAKf,YAAW,SAAC,KAAD,EAAQ,IAAR,EAAc,YAAd,EAA4B,KAA5B;AAET;;MAFqC,QAAM;;IAE3C,IAAwB,CAAC,CAAC,QAAF,CAAW,YAAX,CAAxB;MAAA,QAAQ,aAAR;;IACA,IAAuB,CAAC,CAAC,QAAF,CAAW,IAAX,CAAvB;MAAA,eAAe,KAAf;;IAKA,8BAAoD,YAAY,CAAE,eAAd,KAAuB,KAAvB,IAAiC,SAAQ,kBAA7F;MAAA,cAAc,IAAC,cAAD,CAAe,KAAK,CAAC,MAAN,EAAf,EAAd;;IACA,IAAG,WAAH;MACE,IAAG,WAAW,CAAC,MAAf;QACE,MAAM,IAAC,iBAAD,CAAkB,WAAlB,EAA+B,IAA/B,EAAqC,YAArC,EAAmD,CAAnD;QACN,GAAG,CAAC,UAAJ;AACA,eAAO,IAHT;OAAA;QAKE,MAAM,IAAC,iBAAD,CAAkB,WAAlB,EAA+B,IAA/B,EAAqC,YAArC,EAAmD,KAAnD;QACN,GAAG,CAAC,WAAJ;AACA,eAAO,IAPT;OADF;KAAA;MAUE,IAAC,cAAD,CAAe,KAAf;MACA,MAAM,IAAC,iBAAD,CAAkB,KAAlB,EAAyB,IAAzB,EAA+B,YAA/B,EAA6C,KAA7C;MACN,IAAG,KAAK,CAAC,MAAT;QAAqB,GAAG,CAAC,UAAJ,GAArB;OAAA;QAA2C,GAAG,CAAC,IAAJ,GAA3C;;AACA,aAAO,IAbT;;EATS;;uBAwBX,iBAAgB,SAAC,UAAD,EAAa,IAAb,EAAmB,YAAnB,EAAiC,KAAjC;AAEd;;MAF+C,QAAM;;IAErD,IAAwB,CAAC,CAAC,QAAF,CAAW,YAAX,CAAxB;MAAA,QAAQ,aAAR;;IACA,IAAuB,CAAC,CAAC,QAAF,CAAW,IAAX,CAAvB;MAAA,eAAe,KAAf;;IAEA,MAAM,UAAU,CAAC,MAAX;IACN,IAAG,mBAAmB,IAAC,YAAY,KAAnC;MACE,OAAO,CAAC,KAAR,CAAc,sBAAd,EAAsC,GAAtC,EAA2C,gBAA3C,EAA6D,gBAAgB,CAAC,MAA9E;MACA,IAAG,gBAAgB,CAAC,MAApB;QACE,MAAM,IAAC,iBAAD,CAAkB,gBAAlB,EAAoC,IAApC,EAA0C,YAA1C,EAAwD,CAAxD;QACN,GAAG,CAAC,UAAJ;AACA,eAAO,IAHT;OAAA;QAKE,MAAM,IAAC,iBAAD,CAAkB,gBAAlB,EAAoC,IAApC,EAA0C,YAA1C,EAAwD,KAAxD;QACN,GAAG,CAAC,WAAJ;AACA,eAAO,IAPT;OAFF;KAAA;MAWE,IAAC,cAAD,CAAe,UAAf;MACA,qBAAqB,SAAC,CAAD;QACnB,IAAG,UAAU,CAAC,GAAX,KAAkB,CAAC,CAAC,GAAvB;iBACE,IAAC,mBAAD,CAAoB,CAApB,EADF;SAAA;UAGE,OAAO,CAAC,IAAR,CAAa,+BAAb,EAA8C,CAA9C;UACA,OAAO,CAAC,IAAR,CAAa,sBAAb,EAAqC,CAArC;iBACA,IAAC,aAAD,CAAc,UAAd,EAA0B,MAA1B,EAAkC,kBAAlC,EALF;;MADmB;MAOrB,IAAC,aAAD,CAAc,UAAd,EAA0B,MAA1B,EAAkC,kBAAlC;MACA,MAAM,IAAC,iBAAD,CAAkB,UAAlB,EAA8B,IAA9B,EAAoC,YAApC,EAAkD,KAAlD;MACN,IAAc,CAAI,CAAC,GAAG,CAAC,SAAJ,IAAiB,GAAG,CAAC,QAAtB,CAAlB;QAAA,GAAG,CAAC,IAAJ;;AACA,aAAO,IAtBT;;EANc;;uBA+BhB,aAAY,SAAC,KAAD,EAAQ,KAAR;AACV;IAAA,MAAM,IAAC,iBAAD,CAAkB,KAAlB,EAAyB,EAAzB,EAA6B,EAA7B,EAAiC,KAAjC;WACN,GAAG,CAAC,MAAJ;EAFU;;uBAIZ,kBAAiB,SAAC,UAAD,EAAa,KAAb;AACf;IAAA,MAAM,IAAC,iBAAD,CAAkB,UAAlB,EAA8B,EAA9B,EAAkC,EAAlC,EAAsC,KAAtC;WACN,GAAG,CAAC,MAAJ;EAFe;;uBAIjB,eAAc,SAAC,KAAD,EAAQ,KAAR;AACZ;;MADoB,QAAM;;IAC1B,MAAU,aAAS,EAAT,EAAa,KAAb;IACV,GAAG,CAAC,KAAJ,GAAY;IACZ,KAAK,CAAC,IAAN,CAAW;aAAG,GAAG,CAAC,UAAJ;IAAH,CAAX;IACA,KAAK,CAAC,IAAN,CAAW;aAAG,GAAG,CAAC,UAAJ;IAAH,CAAX;IACA,IAAC,cAAD,CAAe,GAAf,EAAoB,KAApB;AACA,WAAO;EANK;;uBAQd,gBAAe,SAAC,MAAD,EAAS,KAAT;AAAqB;;MAAZ,QAAM;;AAAM;SAAA;;mBAAA,IAAC,aAAD,CAAc,KAAd,EAAqB,KAArB;AAAA;;EAArB;;uBAGf,oBAAmB,SAAC,KAAD;WAAW;EAAX;;uBAInB,WAAU,SAAC,iBAAD,EAAoB,EAApB;AACR;IAAA,IAA4C,CAAC,CAAC,QAAF,CAAW,iBAAX,CAA5C;AAAA,aAAO,IAAC,cAAD,CAAe,iBAAf,EAAP;;IACA,IAAQ,sBAAkB;MAAA,KAAK,EAAL;KAAlB;AACR,WAAO,IAAC,cAAD,CAAe,CAAC,CAAC,MAAF,EAAf;EAHC;;uBAKV,gBAAe,SAAC,QAAD;IACb,IAAyB,CAAC,CAAC,UAAF,CAAa,QAAb,CAAzB;MAAA,WAAW,WAAX;;AACA,WAAO,IAAC,OAAO,UAAR,IAAqB;EAFf;;uBAIf,qBAAoB,SAAC,UAAD,EAAa,QAAb,EAAuB,MAAvB;;MAAuB,SAAO;;WAChD,CAAC,CAAC,IAAF,CAAO,IAAC,OAAR,EAAgB,SAAC,CAAD;aACd,CAAC,CAAC,GAAF,CAAM,UAAN,MAAqB,QAArB,IAAkC,CAAC,CAAC,WAAW,CAAC,SAAd,KAA2B,UAAU,CAAC,SAAxE,IAAsF,CAAC,CAAI,MAAJ,IAAc,OAAO,CAAP,CAAf;IADxE,CAAhB;EADkB;;uBAIpB,oCAAmC,SAAC,UAAD,EAAa,QAAb,EAAuB,YAAvB;;MAAuB,eAAa;;WACrE,CAAC,CAAC,IAAF,CAAO,IAAC,OAAR,EAAgB,SAAC,CAAD;AACd;MAAA,KAAc,KAAI,CAAC,CAAC,GAAF,CAAM,SAAN,CAAJ,CAAd;AAAA;;aACA,CAAC,CAAC,GAAF,CAAM,UAAN,MAAqB,QAArB,IAAkC,CAAC,CAAC,KAAF,KAAW,YAA7C,IAA8D,CAAC,CAAC,WAAW,CAAC,SAAd,KAA2B,UAAU,CAAC;IAFtF,CAAhB;EADiC;;uBAKnC,YAAW,SAAC,UAAD;AAIT;IAAA,IAAyF,UAAzF;AAAA;;AAAQ;AAAA;aAAA;;cAA6B,CAAC,CAAC,WAAW,CAAC,SAAd,KAA2B,UAAU,CAAC;yBAAnE;;AAAA;;oBAAR;;AACA,WAAO,CAAC,CAAC,MAAF,CAAS,IAAC,OAAV;EALE;;uBAOX,gBAAe,SAAC,KAAD;WACb,IAAC,OAAO,MAAK,CAAC,MAAN,GAAR,GAA0B;EADb;;uBAGf,gBAAe,SAAC,UAAD;AACb,WAAO,IAAC,YAAY,WAAU,CAAC,MAAX,GAAb,IAAqC;EAD/B;;uBAGf,gBAAe,SAAC,UAAD;AAEb;IAAA,MAAM,UAAU,CAAC,MAAX;IACN,IAAG,mCAAuB,IAAC,YAAY,KAAb,KAAuB,UAAjD;AACE,aAAO,OAAO,CAAC,IAAR,CAAa,8BAA4B,GAA5B,GAAgC,yCAA7C,EADT;;WAEA,IAAC,mBAAD,CAAoB,UAApB;EALa;;uBAOf,qBAAoB,SAAC,UAAD;AAClB;IAAA,IAAkD,UAAU,CAAC,UAA7D;MAAA,IAAC,YAAY,WAAU,CAAC,MAAX,GAAb,GAAoC,WAApC;;AAEA;AAAA;;MACE,cAAc,IAAC,cAAD,CAAe,KAAK,CAAC,MAAN,EAAf;MACd,IAAG,WAAH;QACE,QAAQ,CAAC,CAAC,MAAF,CAAS,IAAT,EAAe,EAAf,EAAmB,KAAK,CAAC,UAAzB;QACR,WAAW,CAAC,GAAZ,CAAgB,KAAhB,EAAuB;UAAC,QAAQ,IAAT;UAAe,WAAW,IAA1B;SAAvB,EAFF;OAAA;QAKE,IAAC,cAAD,CAAe,KAAf,EALF;;AAFF;WAQA;EAXkB;;uBAepB,WAAU;AACR,WAAO,CAAC,IAAC,SAAD,KAAa,GAAd,KAAsB,CAAC,CAAI,IAAC,MAAN,CAAtB,IAAsC,IAAC;EADtC;;uBAGV,mBAAkB,SAAC,iBAAD,EAAoB,IAApB,EAA0B,YAA1B,EAAwC,KAAxC;AAEhB;;MAFwD,QAAM;;IAE9D,IAAwB,CAAC,CAAC,QAAF,CAAW,YAAX,CAAxB;MAAA,QAAQ,aAAR;;IACA,IAAuB,CAAC,CAAC,QAAF,CAAW,IAAX,CAAvB;MAAA,eAAe,KAAf;;IAEA,iBAAiB,CAAC,WAAlB,GAAgC,iBAAiB,CAAC,WAAlB,IAAiC,IAAC,kBAAD,CAAmB,iBAAnB;IACjE,IAAC,UAAD,CAAW,IAAX;IACA,MAAU,kBAAc,iBAAd,EAAiC,IAAjC,EAAuC,YAAvC,EAAqD,KAArD;IACV,IAAC,cAAD,CAAe,GAAf,EAAoB,KAApB;AACA,WAAO;EATS;;uBAWlB,sBAAqB,SAAC,iBAAD;WACnB,IAAC,eAAD,CAAgB,CAAC,CAAC,IAAF,CAAO,IAAC,UAAR,EAAmB,SAAC,QAAD;iCAAc,QAAQ,CAAE,eAAV,KAAmB;IAAjC,CAAnB,CAAhB;EADmB;;uBAGrB,qBAAoB,SAAC,IAAD,EAAO,YAAP,EAAqB,KAArB;AAElB;;MAFuC,QAAM;;IAE7C,IAAwB,CAAC,CAAC,QAAF,CAAW,YAAX,CAAxB;MAAA,QAAQ,aAAR;;IACA,IAAuB,CAAC,CAAC,QAAF,CAAW,IAAX,CAAvB;MAAA,eAAe,KAAf;;IAEA,IAAC,UAAD,CAAW,IAAX;IACA,MAAU,oBAAgB,IAAhB,EAAsB,YAAtB,EAAoC,KAApC;IACV,IAAC,cAAD,CAAe,GAAf,EAAoB,KAApB;AACA,WAAO;EARW;;uBAUpB,uBAAsB,SAAC,IAAD,EAAO,KAAP;AACpB;;MAD2B,QAAM;;IACjC,IAAgB,CAAC,CAAC,QAAF,CAAW,IAAX,CAAhB;MAAA,QAAQ,KAAR;;IACA,IAAC,UAAD,CAAW,IAAX;IACA,MAAU,sBAAkB,IAAlB,EAAwB,KAAxB;IACV,IAAC,cAAD,CAAe,GAAf,EAAoB,KAApB;AACA,WAAO;EALa;;uBAOtB,YAAW,SAAC,IAAD;;uBAIX,gBAAe,SAAC,QAAD,EAAW,KAAX;IACb,IAAC,IAAD;IACA,QAAQ,CAAC,GAAT,GAAe,IAAC;IAChB,IAAC,UAAU,KAAC,IAAD,CAAX,GAAmB;IACnB,IAAC,aAAD,CAAc,QAAd,EAAwB,QAAxB,EAAkC,IAAC,iBAAnC;IACA,IAAC,SAAD,CAAU,QAAV,EAAoB,QAApB,EAA8B,IAAC,iBAA/B;IACA,IAAC,MAAD,IAAU;IACV,IAA2B,IAAC,MAA5B;aAAA,CAAC,CAAC,KAAF,CAAQ,IAAC,eAAT;;EAPa;;uBASf,iBAAgB,SAAC,QAAD;IACd,KAAc,IAAC,UAAU,SAAQ,CAAC,GAAT,CAAzB;AAAA;;IACA,IAAC,UAAU,SAAQ,CAAC,GAAT,CAAX,GAA2B;IAC3B,IAAU,QAAQ,CAAC,QAAnB;MAAA,EAAE,IAAC,KAAH;;IACA,EAAE,IAAC;WACH,CAAC,CAAC,KAAF,CAAQ,IAAC,eAAT;EALc;;uBAOhB,mBAAkB,SAAC,CAAD;IAChB,KAAc,IAAC,UAAU,EAAC,CAAC,GAAF,CAAzB;AAAA;;IACA,IAAC,IAAD,IAAQ,CAAC,CAAC;IACV,CAAC,CAAC,KAAF,CAAQ,IAAC,eAAT;IACA,CAAC,CAAC,KAAF;IACA,IAAC,cAAD,CAAe,CAAf,EAAkB,QAAlB,EAA4B,IAAC,iBAA7B;WACA,IAAC,QAAD,CAAS,iBAAT,EAA4B,CAA5B;EANgB;;uBAQlB,mBAAkB,SAAC,CAAD;IAChB,KAAc,IAAC,UAAU,EAAC,CAAC,GAAF,CAAzB;AAAA;;IACA,IAAC,OAAD,GAAU;IACV,IAAC,QAAD,CAAS,QAAT,EAAmB;MAAA,UAAU,CAAV;KAAnB;WACA,CAAC,CAAC,KAAF;EAJgB;;uBAMlB,iBAAgB;AAId;IAAA,UAAa,IAAC,MAAJ,GAAe,IAAC,IAAD,GAAO,IAAC,MAAvB,GAAkC;IAC5C,UAAU,IAAI,CAAC,GAAL,CAAS,IAAC,YAAV,EAAuB,OAAvB;IACV,IAAU,IAAC,SAAD,IAAa,OAAvB;AAAA;;IACA,IAAC,SAAD,GAAY;IACZ,IAAC,QAAD,CAAS,iBAAT,EAA4B,IAAC,SAA7B;IACA,IAA0B,IAAC,SAAD,EAA1B;aAAA,IAAC,QAAD,CAAS,YAAT;;EATc;;uBAWhB,iBAAgB,SAAC,WAAD;IAAC,IAAC,eAAD;EAAD;;uBAChB,gBAAe;WAAG,IAAC,SAAD,GAAY;EAAf;;uBACf,mBAAkB;IAChB,IAAC,YAAD,GAAe;WACf,CAAC,CAAC,KAAF,CAAQ,IAAC,eAAT;EAFgB;;uBAIlB,cAAa;AAAG,WAAO,IAAC;EAAX;;uBAEb,cAAa,SAAC,GAAD;AACX,WAAO,IAAC,UAAU;EADP;;uBAIb,gBAAe;WACT,YAAQ;aAAA,SAAC,OAAD,EAAU,MAAV;QACV,IAAqB,KAAC,SAAD,EAArB;AAAA,iBAAO,QAAQ,KAAR,EAAP;;QACA,KAAC,KAAD,CAAM,QAAN,EAAgB,SAAC,GAAD;AACd;UADgB,WAAD,IAAC;UAChB,QAAQ,QAAQ,CAAC;iBACjB,OAAO;YAAC,kDAA2B,CAAE,iBAApB,IAA+B,KAAK,CAAC,YAArC,IAAqD,eAA/D;WAAP;QAFc,CAAhB;eAGA,KAAC,KAAD,CAAM,YAAN,EAAoB;iBAAG,QAAQ,KAAR;QAAH,CAApB;MALU;IAAA,QAAR;EADS;;;;GAhQyB,QAAQ,CAAC;;AAwQ7C;;;EACS,kBAAC,IAAD,EAAO,KAAP;;MAAO,QAAM;;IACxB,IAAC,KAAD,GAAQ;IACR,IAAC,MAAD,GAAS;IACT,IAAC,IAAD,GAAO,CAAC;IACR,IAAC,UAAD,GAAa;IACb,IAAC,SAAD,GAAY;IACZ,IAAC,MAAD,GAAS;IACT,IAAC,MAAD,GAAS;EAPE;;qBASb,aAAY;IACV,IAAU,IAAC,SAAX;AAAA;;IACA,IAAC,QAAD,CAAS,QAAT,EAAmB,IAAnB;IACA,IAAC,SAAD,GAAY;WACZ,IAAC,UAAD,GAAa;EAJH;;qBAMZ,aAAY;IACV,IAAU,IAAC,SAAX;AAAA;;IACA,IAAC,QAAD,CAAS,QAAT,EAAmB,IAAnB;IACA,IAAC,SAAD,GAAY,IAAC,UAAD,GAAa;WACzB,IAAC,SAAD,GAAY;EAJF;;qBAMZ,cAAa;IACX,IAAC,SAAD,GAAY,IAAC,SAAD,GAAY;WACxB,IAAC,UAAD,GAAa;EAFF;;qBAIb,QAAO;WAEL,IAAC,MAAD,GAAS;EAFJ;;qBAIP,OAAM;WAAG;EAAH;;;;GA9Be,QAAQ,CAAC;;AAgC1B;;;EACS,uBAAC,iBAAD,EAAoB,IAApB,EAA0B,YAA1B,EAAwC,KAAxC;IACX,+CAAM,IAAN,EAAY,KAAZ;IACA,IAAC,MAAD,GAAS;IACT,IAAC,aAAD,GAAgB;IAChB,IAAC,MAAD,GAAS,IAAC,MAAK,CAAC;IAChB,IAAC,eAAD,GAAkB;EALP;;0BAOb,OAAM;IACJ,IAAC,YAAD;IACA,IAAC,WAAD;WACA;EAHI;;0BAgCN,aAAY;IACV,KAA4C,IAAC,MAAK,CAAC,OAAnD;MAAA,IAAC,MAAD,GAAS,IAAC,MAAK,CAAC,KAAP,CAAa,IAAC,aAAd,EAAT;;WACA,IAAC,OAAD;EAFU;;0BAIZ,SAAQ;IACN,IAAC,aAAD,CAAc,IAAC,MAAf,EAAsB,MAAtB,EAA8B;aAAG,IAAC,WAAD;IAAH,CAA9B;WACA,IAAC,aAAD,CAAc,IAAC,MAAf,EAAsB,OAAtB,EAA+B;aAAG,IAAC,WAAD;IAAH,CAA/B;EAFM;;0BAIR,QAAO;IACL,IAAC,MAAD,GAAS;WACT,IAAC,MAAK,CAAC,KAAP,GAAe;EAFV;;;;GAhDmB;;AAoDtB;;;EACS,yBAAC,IAAD,EAAO,YAAP,EAAqB,KAArB;IACX,iDAAM,IAAN,EAAY,KAAZ;IACA,IAAC,aAAD,GAAgB;EAFL;;4BAIb,OAAM;IACJ,IAAC,YAAD;IACA,IAAC,MAAD,GAAS,CAAC,CAAC,IAAF,CAAO,IAAC,aAAR;IAET,IAAC,MAAK,CAAC,IAAP,CAAY;aAAA;eAAG,CAAC,CAAC,KAAF,CAAQ;iBAAG,KAAC,WAAD;QAAH,CAAR;MAAH;IAAA,QAAZ;IACA,IAAC,MAAK,CAAC,IAAP,CAAY;aAAA;eAAG,CAAC,CAAC,KAAF,CAAQ;iBAAG,KAAC,WAAD;QAAH,CAAR;MAAH;IAAA,QAAZ;WACA;EANI;;;;GALsB;;AAaxB;;;;;;;;;GAA0B","file":"public/javascripts/app/models/SuperModel.js","sourcesContent":["module.exports = class SuperModel extends Backbone.Model\n  constructor: ->\n    @num = 0\n    @denom = 0\n    @progress = 0\n    @resources = {}\n    @rid = 0\n    @maxProgress = 1\n\n    @models = {}\n    @collections = {}\n\n  # Since the supermodel has undergone some changes into being a loader and a cache interface,\n  # it's a bit wonky to use. The next couple functions are meant to cover the majority of\n  # use cases across the site. If they are used, the view will automatically handle errors,\n  # retries, progress, and filling the cache. Note that the resource it passes back will not\n  # necessarily have the same model or collection that was passed in, if it was fetched from\n  # the cache.\n\n  report: ->\n    # Useful for debugging why a SuperModel never finishes loading.\n    console.info 'SuperModel report ------------------------'\n    console.info \"#{_.values(@resources).length} resources.\"\n    unfinished = []\n    for resource in _.values(@resources) when resource\n      console.info \"\\t\", resource.name, 'loaded', resource.isLoaded, resource.model\n      unfinished.push resource unless resource.isLoaded\n    unfinished\n    \n  numDuplicates: ->\n    # For debugging. TODO: Prevent duplicates from happening!\n    ids = (m.get('_id') for m in _.values(@models))\n    return _.size(ids) - _.size(_.unique(ids))\n\n  loadModel: (model, name, fetchOptions, value=1) ->\n    # Deprecating name. Handle if name is not included\n    value = fetchOptions if _.isNumber(fetchOptions)\n    fetchOptions = name if _.isObject(name)\n      \n    # hero-ladder levels need remote opponent_session for latest session data (e.g. code)\n    # Can't apply to everything since other features rely on cached models being more recent (E.g. level_session)\n    # E.g.#2 heroConfig isn't necessarily saved to db in world map inventory modal, so we need to load the cached session on level start\n    cachedModel = @getModelByURL(model.getURL()) unless fetchOptions?.cache is false and name is 'opponent_session'\n    if cachedModel\n      if cachedModel.loaded\n        res = @addModelResource(cachedModel, name, fetchOptions, 0)\n        res.markLoaded()\n        return res\n      else\n        res = @addModelResource(cachedModel, name, fetchOptions, value)\n        res.markLoading()\n        return res\n    else\n      @registerModel(model)\n      res = @addModelResource(model, name, fetchOptions, value)\n      if model.loaded then res.markLoaded() else res.load()\n      return res\n\n  loadCollection: (collection, name, fetchOptions, value=1) ->\n    # Deprecating name. Handle if name is not included\n    value = fetchOptions if _.isNumber(fetchOptions)\n    fetchOptions = name if _.isObject(name)\n    \n    url = collection.getURL()\n    if cachedCollection = @collections[url]\n      console.debug 'Collection cache hit', url, 'already loaded', cachedCollection.loaded\n      if cachedCollection.loaded\n        res = @addModelResource(cachedCollection, name, fetchOptions, 0)\n        res.markLoaded()\n        return res\n      else\n        res = @addModelResource(cachedCollection, name, fetchOptions, value)\n        res.markLoading()\n        return res\n    else\n      @addCollection collection\n      onCollectionSynced = (c) ->\n        if collection.url is c.url\n          @registerCollection c\n        else\n          console.warn 'Sync triggered for collection', c\n          console.warn 'Yet got other object', c\n          @listenToOnce collection, 'sync', onCollectionSynced\n      @listenToOnce collection, 'sync', onCollectionSynced\n      res = @addModelResource(collection, name, fetchOptions, value)\n      res.load() if not (res.isLoading or res.isLoaded)\n      return res\n      \n  # Eventually should use only these functions. Use SuperModel just to track progress.\n  trackModel: (model, value) ->\n    res = @addModelResource(model, '', {}, value)\n    res.listen()\n\n  trackCollection: (collection, value) ->\n    res = @addModelResource(collection, '', {}, value)\n    res.listen()\n    \n  trackRequest: (jqxhr, value=1) ->\n    res = new Resource('', value)\n    res.jqxhr = jqxhr\n    jqxhr.done -> res.markLoaded()\n    jqxhr.fail -> res.markFailed()\n    @storeResource(res, value)\n    return jqxhr\n    \n  trackRequests: (jqxhrs, value=1) -> @trackRequest(jqxhr, value) for jqxhr in jqxhrs\n\n  # replace or overwrite\n  shouldSaveBackups: (model) -> false\n\n  # Caching logic\n\n  getModel: (ModelClass_or_url, id) ->\n    return @getModelByURL(ModelClass_or_url) if _.isString(ModelClass_or_url)\n    m = new ModelClass_or_url(_id: id)\n    return @getModelByURL(m.getURL())\n\n  getModelByURL: (modelURL) ->\n    modelURL = modelURL() if _.isFunction(modelURL)\n    return @models[modelURL] or null\n\n  getModelByOriginal: (ModelClass, original, filter=null) ->\n    _.find @models, (m) ->\n      m.get('original') is original and m.constructor.className is ModelClass.className and (not filter or filter(m))\n\n  getModelByOriginalAndMajorVersion: (ModelClass, original, majorVersion=0) ->\n    _.find @models, (m) ->\n      return unless v = m.get('version')\n      m.get('original') is original and v.major is majorVersion and m.constructor.className is ModelClass.className\n\n  getModels: (ModelClass) ->\n    # can't use instanceof. SuperModel gets passed between windows, and one window\n    # will have different class objects than another window.\n    # So compare className instead.\n    return (m for key, m of @models when m.constructor.className is ModelClass.className) if ModelClass\n    return _.values @models\n\n  registerModel: (model) ->\n    @models[model.getURL()] = model\n\n  getCollection: (collection) ->\n    return @collections[collection.getURL()] or collection\n\n  addCollection: (collection) ->\n    # TODO: remove, instead just use registerCollection?\n    url = collection.getURL()\n    if @collections[url]? and @collections[url] isnt collection\n      return console.warn \"Tried to add Collection '#{url}' to SuperModel when we already had it.\"\n    @registerCollection(collection)\n\n  registerCollection: (collection) ->\n    @collections[collection.getURL()] = collection if collection.isCachable\n    # consolidate models\n    for model, i in collection.models\n      cachedModel = @getModelByURL(model.getURL())\n      if cachedModel\n        clone = $.extend true, {}, model.attributes\n        cachedModel.set(clone, {silent: true, fromMerge: true})\n        #console.debug \"Updated cached model <#{cachedModel.get('name') or cachedModel.getURL()}> with new data\"\n      else\n        @registerModel(model)\n    collection\n\n  # Tracking resources being loaded for this supermodel\n\n  finished: ->\n    return (@progress is 1.0) or (not @denom) or @failed\n\n  addModelResource: (modelOrCollection, name, fetchOptions, value=1) ->\n    # Deprecating name. Handle if name is not included\n    value = fetchOptions if _.isNumber(fetchOptions)\n    fetchOptions = name if _.isObject(name)\n    \n    modelOrCollection.saveBackups = modelOrCollection.saveBackups or @shouldSaveBackups(modelOrCollection)\n    @checkName(name)\n    res = new ModelResource(modelOrCollection, name, fetchOptions, value)\n    @storeResource(res, value)\n    return res\n\n  removeModelResource: (modelOrCollection) ->\n    @removeResource _.find(@resources, (resource) -> resource?.model is modelOrCollection)\n\n  addRequestResource: (name, jqxhrOptions, value=1) ->\n    # Deprecating name. Handle if name is not included\n    value = jqxhrOptions if _.isNumber(jqxhrOptions)\n    jqxhrOptions = name if _.isObject(name)\n    \n    @checkName(name)\n    res = new RequestResource(name, jqxhrOptions, value)\n    @storeResource(res, value)\n    return res\n\n  addSomethingResource: (name, value=1) ->\n    value = name if _.isNumber(name)\n    @checkName(name)\n    res = new SomethingResource(name, value)\n    @storeResource(res, value)\n    return res\n\n  checkName: (name) ->\n    #if _.isString(name)\n    #  console.warn(\"SuperModel name property deprecated. Remove '#{name}' from code.\")\n\n  storeResource: (resource, value) ->\n    @rid++\n    resource.rid = @rid\n    @resources[@rid] = resource\n    @listenToOnce(resource, 'loaded', @onResourceLoaded)\n    @listenTo(resource, 'failed', @onResourceFailed)\n    @denom += value\n    _.defer @updateProgress if @denom\n\n  removeResource: (resource) ->\n    return unless @resources[resource.rid]\n    @resources[resource.rid] = null\n    --@num if resource.isLoaded\n    --@denom\n    _.defer @updateProgress\n\n  onResourceLoaded: (r) ->\n    return unless @resources[r.rid]\n    @num += r.value\n    _.defer @updateProgress\n    r.clean()\n    @stopListening r, 'failed', @onResourceFailed\n    @trigger 'resource-loaded', r\n\n  onResourceFailed: (r) ->\n    return unless @resources[r.rid]\n    @failed = true\n    @trigger('failed', resource: r)\n    r.clean()\n\n  updateProgress: =>\n    # Because this is _.defer'd, this might end up getting called after\n    # a bunch of things load all at once.\n    # So make sure we only emit events if @progress has changed.\n    newProg = if @denom then @num / @denom else 1\n    newProg = Math.min @maxProgress, newProg\n    return if @progress >= newProg\n    @progress = newProg\n    @trigger('update-progress', @progress)\n    @trigger('loaded-all') if @finished()\n\n  setMaxProgress: (@maxProgress) ->\n  resetProgress: -> @progress = 0\n  clearMaxProgress: ->\n    @maxProgress = 1\n    _.defer @updateProgress\n\n  getProgress: -> return @progress\n\n  getResource: (rid) ->\n    return @resources[rid]\n    \n  # Promises\n  finishLoading: ->\n    new Promise (resolve, reject) =>\n      return resolve(@) if @finished()\n      @once 'failed', ({resource}) ->\n        jqxhr = resource.jqxhr\n        reject({message: jqxhr.responseJSON?.message or jqxhr.responseText or 'Unknown Error'})\n      @once 'loaded-all', => resolve(@)\n\nclass Resource extends Backbone.Model\n  constructor: (name, value=1) ->\n    @name = name\n    @value = value\n    @rid = -1 # Used for checking state and reloading\n    @isLoading = false\n    @isLoaded = false\n    @model = null\n    @jqxhr = null\n\n  markLoaded: ->\n    return if @isLoaded\n    @trigger('loaded', @)\n    @isLoaded = true\n    @isLoading = false\n\n  markFailed: ->\n    return if @isLoaded\n    @trigger('failed', @)\n    @isLoaded = @isLoading = false\n    @isFailed = true\n\n  markLoading: ->\n    @isLoaded = @isFailed = false\n    @isLoading = true\n\n  clean: ->\n    # request objects get rather large. Clean them up after the request is finished.\n    @jqxhr = null\n\n  load: -> @\n\nclass ModelResource extends Resource\n  constructor: (modelOrCollection, name, fetchOptions, value)->\n    super(name, value)\n    @model = modelOrCollection\n    @fetchOptions = fetchOptions\n    @jqxhr = @model.jqxhr\n    @loadsAttempted = 0\n\n  load: ->\n    @markLoading()\n    @fetchModel()\n    @\n\n#    # TODO: Track progress on requests and don't retry if progress was made recently.\n#    # Probably use _.debounce and attach event listeners to xhr objects.\n#    \n#    # This logic is for handling failed responses for level loading.\n#    timeToWait = 5000\n#    tryLoad = =>\n#      return if this.isLoaded\n#      if @loadsAttempted > 4\n#        @markFailed()\n#        return @\n#      @markLoading()\n#      @model.loading = false # So fetchModel can run again\n#      if @loadsAttempted > 0\n#        console.log \"Didn't load model in #{timeToWait}ms (attempt ##{@loadsAttempted}), trying again: \", _.result(@model, 'url')\n#      @fetchModel()\n#      @listenTo @model, 'error', (levelComponent, request) ->\n#        if request.status not in [408, 504, 522, 524]\n#          clearTimeout(@timeoutID)\n#      clearTimeout(@timeoutID) if @timeoutID\n#      @timeoutID = setTimeout(tryLoad, timeToWait)\n#      if application.testing\n#        application.timeoutsToClear?.push(@timeoutID)\n#      @loadsAttempted += 1\n#      timeToWait *= 1.5\n#    tryLoad()\n#    @\n\n  fetchModel: ->\n    @jqxhr = @model.fetch(@fetchOptions) unless @model.loading\n    @listen()\n\n  listen: ->\n    @listenToOnce @model, 'sync', -> @markLoaded()\n    @listenToOnce @model, 'error', -> @markFailed()\n\n  clean: ->\n    @jqxhr = null\n    @model.jqxhr = null\n\nclass RequestResource extends Resource\n  constructor: (name, jqxhrOptions, value) ->\n    super(name, value)\n    @jqxhrOptions = jqxhrOptions\n\n  load: ->\n    @markLoading()\n    @jqxhr = $.ajax(@jqxhrOptions)\n    # make sure any other success/fail callbacks happen before resource loaded callbacks\n    @jqxhr.done => _.defer => @markLoaded()\n    @jqxhr.fail => _.defer => @markFailed()\n    @\n\nclass SomethingResource extends Resource\n"]}