{"version":3,"sources":["app/views/admin/SchoolLicensesView.coffee"],"names":[],"mappings":"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","file":"public/javascripts/app/views/admin/SchoolLicensesView.js","sourcesContent":["RootView = require 'views/core/RootView'\nCocoCollection = require 'collections/CocoCollection'\nPrepaid = require 'models/Prepaid'\nTrialRequests = require 'collections/TrialRequests'\n\n# TODO: year ranges hard-coded\n\nmodule.exports = class SchoolLicensesView extends RootView\n  id: 'admin-school-licenses-view'\n  template: require 'templates/admin/school-licenses'\n\n  initialize: ->\n    return super() unless me.isAdmin()\n    @startDateRange = new Date()\n    @endDateRange = new Date()\n    @endDateRange.setUTCFullYear(@endDateRange.getUTCFullYear() + 2)\n    @supermodel.addRequestResource({\n      url: '/db/prepaid/-/active-schools'\n      method: 'GET'\n      success: ({prepaidActivityMap, schoolPrepaidsMap}) =>\n        @updateSchools(prepaidActivityMap, schoolPrepaidsMap)\n    }, 0).load()\n    super()\n\n  updateSchools: (prepaidActivityMap, schoolPrepaidsMap) ->\n    timeStart = @startDateRange.getTime()\n    time2017 = new Date('2017').getTime()\n    time2018 = new Date('2018').getTime()\n    timeEnd = @endDateRange.getTime()\n    rangeMilliseconds = timeEnd - timeStart\n    @rangeKeys = [\n      {name :'Today', color: 'blue', startScale: 0, width: Math.round((time2017 - timeStart) / rangeMilliseconds * 100)}\n      {name: '2017', color: 'red', startScale: Math.round((time2017 - timeStart) / rangeMilliseconds * 100), width: Math.round((time2018 - time2017) / rangeMilliseconds * 100)}\n      {name: '2018', color: 'yellow', startScale: Math.round((time2018 - timeStart) / rangeMilliseconds * 100), width: Math.round((timeEnd - time2018) / rangeMilliseconds * 100)}\n    ]\n\n    @schools = []\n    for school, prepaids of schoolPrepaidsMap\n      activity = 0\n      schoolMax = 0\n      schoolUsed = 0\n      collapsedPrepaids = []\n      for prepaid in prepaids\n        activity += prepaidActivityMap[prepaid._id] ? 0\n        startDate = prepaid.startDate\n        endDate = prepaid.endDate\n        max = parseInt(prepaid.maxRedeemers)\n        used = parseInt(prepaid.redeemers?.length ? 0)\n        schoolMax += max\n        schoolUsed += used\n        foundIdenticalDates = false\n        for collapsedPrepaid in collapsedPrepaids\n          if collapsedPrepaid.startDate.substring(0, 10) is startDate.substring(0, 10) and collapsedPrepaid.endDate.substring(0, 10) is endDate.substring(0, 10)\n            collapsedPrepaid.max += parseInt(prepaid.maxRedeemers)\n            collapsedPrepaid.used += parseInt(prepaid.redeemers?.length ? 0)\n            foundIdenticalDates = true\n            break\n        unless foundIdenticalDates\n          collapsedPrepaids.push({startDate, endDate, max, used})\n\n      for collapsedPrepaid in collapsedPrepaids\n        collapsedPrepaid.startScale = (new Date(collapsedPrepaid.startDate).getTime() - @startDateRange.getTime()) / rangeMilliseconds * 100\n        if collapsedPrepaid.startScale < 0\n          collapsedPrepaid.startScale = 0\n          collapsedPrepaid.rangeScale = (new Date(collapsedPrepaid.endDate).getTime() - @startDateRange.getTime()) / rangeMilliseconds * 100\n        else\n          collapsedPrepaid.rangeScale = (new Date(collapsedPrepaid.endDate).getTime() - new Date(collapsedPrepaid.startDate).getTime()) / rangeMilliseconds * 100\n        collapsedPrepaid.rangeScale = 100 - collapsedPrepaid.startScale if collapsedPrepaid.rangeScale + collapsedPrepaid.startScale > 100\n      @schools.push {name: school, activity, max: schoolMax, used: schoolUsed, prepaids: collapsedPrepaids, startDate: collapsedPrepaids[0].startDate, endDate: collapsedPrepaids[0].endDate}\n\n    @schools.sort (a, b) ->\n      b.activity - a.activity or new Date(a.endDate).getTime() - new Date(b.endDate).getTime() or b.max - a.max or b.used - a.used or b.prepaids.length - a.prepaids.length or b.name.localeCompare(a.name)\n\n    @render()\n"]}