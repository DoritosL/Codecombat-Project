{"version":3,"sources":["app/templates/editor/component/thang-components-edit-view.jade","app/views/editor/component/ThangComponentsEditView.coffee"],"names":[],"mappings":"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","file":"public/javascripts/app/views/editor/component/ThangComponentsEditView.js","sourcesContent":["var __templateData = function anonymous(locals\n/**/) {\nvar buf = [];\nbuf.push(\"<div id=\\\"thang-components-column\\\" class=\\\"column\\\"><h3 data-i18n=\\\"editor.level_tab_components\\\">Components</h3><button id=\\\"add-components-button\\\" data-i18n=\\\"editor.add_components\\\" class=\\\"btn\\\">Add Components</button><div class=\\\"treema\\\"></div></div><div id=\\\"thang-components-config-column\\\" class=\\\"column\\\"><h3 data-i18n=\\\"editor.component_configs\\\">Component Configurations</h3><div id=\\\"thang-component-configs\\\"></div></div>\");;return buf.join(\"\");\n};\nif (typeof define === 'function' && define.amd) {\n  define([], function() {\n    return __templateData;\n  });\n} else if (typeof module === 'object' && module && module.exports) {\n  module.exports = __templateData;\n} else {\n  __templateData;\n}","CocoView = require 'views/core/CocoView'\ntemplate = require 'templates/editor/component/thang-components-edit-view'\n\nLevel = require 'models/Level'\nLevelComponent = require 'models/LevelComponent'\nLevelSystem = require 'models/LevelSystem'\nLevelComponents = require 'collections/LevelComponents'\nThangComponentConfigView = require './ThangComponentConfigView'\nAddThangComponentsModal = require './AddThangComponentsModal'\nnodes = require '../level/treema_nodes'\nrequire 'vendor/treema'\n\nThangType = require 'models/ThangType'\nCocoCollection = require 'collections/CocoCollection'\n\nLC = (componentName, config) -> original: LevelComponent[componentName + 'ID'], majorVersion: 0, config: config\nDEFAULT_COMPONENTS =\n  Unit: [LC('Equips'), LC('FindsPaths')]\n  Hero: [LC('Equips'), LC('FindsPaths')]\n  Floor: [\n    LC('Exists', stateless: true)\n    LC('Physical', width: 20, height: 17, depth: 2, shape: 'sheet', pos: {x: 10, y: 8.5, z: 1})\n    LC('Land')\n  ]\n  Wall: [\n    LC('Exists', stateless: true)\n    LC('Physical', width: 4, height: 4, depth: 12, shape: 'box', pos: {x: 2, y: 2, z: 6})\n    LC('Collides', collisionType: 'static', collisionCategory: 'obstacles', mass: 1000, fixedRotation: true, restitution: 1)\n  ]\n  Doodad: [\n    LC('Exists', stateless: true)\n    LC('Physical')\n    LC('Collides', collisionType: 'static', fixedRotation: true)\n  ]\n  Misc: [LC('Exists'), LC('Physical')]\n  Mark: []\n  Item: [LC('Item')]\n  Missile: [LC('Missile')]\n\nmodule.exports = class ThangComponentsEditView extends CocoView\n  id: 'thang-components-edit-view'\n  template: template\n\n  subscriptions:\n    'editor:thang-type-kind-changed': 'onThangTypeKindChanged'\n\n  events:\n    'click #add-components-button': 'onAddComponentsButtonClicked'\n\n  constructor: (options) ->\n    super options\n    @originalsLoaded = {}\n    @components = options.components or []\n    @components = $.extend true, [], @components # just to be sure\n    @setThangType options.thangType\n    @lastComponentLength = @components.length\n    @world = options.world\n    @level = options.level\n    @loadComponents(@components)\n\n  setThangType: (@thangType) ->\n    return unless componentRefs = @thangType?.get('components')\n    @loadComponents(componentRefs)\n\n  loadComponents: (components) ->\n    for componentRef in components\n      # just to handle if ever somehow the same component is loaded twice, through bad data and alike\n      continue if @originalsLoaded[componentRef.original]\n      @originalsLoaded[componentRef.original] = componentRef.original\n\n      levelComponent = new LevelComponent(componentRef)\n      url = \"/db/level.component/#{componentRef.original}/version/#{componentRef.majorVersion}\"\n      levelComponent.setURL(url)\n      resource = @supermodel.loadModel levelComponent\n      continue unless resource.isLoading\n      @listenToOnce resource, 'loaded', ->\n        return if @handlingChange\n        @handlingChange = true\n        @onComponentsAdded()\n        @handlingChange = false\n\n  afterRender: ->\n    super()\n    return unless @supermodel.finished()\n    @buildComponentsTreema()\n    @addThangComponentConfigViews()\n\n  buildComponentsTreema: ->\n    components = _.zipObject((c.original for c in @components), @components)\n    defaultValue = undefined\n    if thangTypeComponents = @thangType?.get('components', true)\n      defaultValue = _.zipObject((c.original for c in thangTypeComponents), thangTypeComponents)\n\n    treemaOptions =\n      supermodel: @supermodel\n      schema: {\n        type: 'object'\n        default: defaultValue\n        additionalProperties: Level.schema.properties.thangs.items.properties.components.items\n      },\n      data: $.extend true, {}, components\n      callbacks: {select: @onSelectComponent, change: @onComponentsTreemaChanged}\n      nodeClasses:\n        'object': ThangComponentsObjectNode\n\n    @componentsTreema = @$el.find('#thang-components-column .treema').treema treemaOptions\n    @componentsTreema.build()\n\n  onComponentsTreemaChanged: =>\n    return if @handlingChange\n    @handlingChange = true\n    componentMap = {}\n    for component in @components\n      componentMap[component.original] = component\n\n    newComponentsList = []\n    for component in _.values(@componentsTreema.data)\n      newComponentsList.push(componentMap[component.original] or component)\n    @components = newComponentsList\n\n    # update the components list here\n    @onComponentsChanged()\n    @handlingChange = false\n\n  onComponentsChanged: =>\n    # happens whenever the list of components changed, one way or another\n    # * if the treema gets changed\n    # * if components are added externally, like by a modal\n    # * if a dependency loads and is added to the list\n\n    if @components.length < @lastComponentLength\n      @onComponentsRemoved()\n    @onComponentsAdded()\n\n  onComponentsRemoved: ->\n    componentMap = {}\n    for component in @components\n      componentMap[component.original] = component\n\n    thangComponentMap = {}\n    if thangTypeComponents = @thangType?.get('components')\n      for thangTypeComponent in thangTypeComponents\n        thangComponentMap[thangTypeComponent.original] = thangTypeComponent\n\n    # Deleting components missing dependencies.\n    while true\n      removedSomething = false\n      for componentRef in _.values(componentMap)\n        componentModel = @supermodel.getModelByOriginalAndMajorVersion(\n          LevelComponent, componentRef.original, componentRef.majorVersion)\n        for dependency in componentModel.get('dependencies') or []\n          unless (componentMap[dependency.original] or thangComponentMap[dependency.original])\n            delete componentMap[componentRef.original]\n            component = @supermodel.getModelByOriginal(\n              LevelComponent, componentRef.original)\n            noty {\n              text: \"Removed dependent component: #{component.get('name')}\"\n              layout: 'topCenter'\n              timeout: 5000\n              type: 'information'\n            }\n            removedSomething = true\n        break if removedSomething\n      break unless removedSomething\n\n    @components = _.values(componentMap)\n\n    # Delete individual component config views that are no longer included.\n    for subview in _.values(@subviews)\n      continue unless subview instanceof ThangComponentConfigView\n      unless (componentMap[subview.component.get('original')] or thangComponentMap[subview.component.get('original')])\n        @removeSubView(subview)\n\n    @updateComponentsList()\n    @reportChanges()\n\n  updateComponentsList: ->\n    # Before I was setting the data to the existing treema but then we had some\n    # nasty sorting/callback bugs. This is less efficient, but it's also less bug prone.\n    @buildComponentsTreema()\n\n  onComponentsAdded: ->\n    return unless @componentsTreema\n    componentMap = {}\n    for component in @components\n      componentMap[component.original] = component\n\n    if thangTypeComponents = @thangType?.get('components')\n      for thangTypeComponent in thangTypeComponents\n        componentMap[thangTypeComponent.original] = thangTypeComponent\n\n    # Go through the map, adding missing dependencies.\n    while true\n      addedSomething = false\n      for componentRef in _.values(componentMap)\n        componentModel = @supermodel.getModelByOriginalAndMajorVersion(\n          LevelComponent, componentRef.original, componentRef.majorVersion)\n        if not componentModel?.loaded\n          @loadComponents([componentRef])\n          continue\n        for dependency in componentModel?.get('dependencies') or []\n          if not componentMap[dependency.original]\n            component = @supermodel.getModelByOriginalAndMajorVersion(\n              LevelComponent, dependency.original, dependency.majorVersion)\n            if not component?.loaded\n              @loadComponents([dependency])\n              # will run onComponentsAdded once more when the model loads\n            else\n              addedSomething = true\n              noty {\n                text: \"Added dependency: #{component.get('name')}\"\n                layout: 'topCenter'\n                timeout: 5000\n                type: 'information'\n              }\n              componentMap[dependency.original] = dependency\n              @components.push dependency\n      break unless addedSomething\n\n\n    # Sort the component list, reorder the component config views\n    @updateComponentsList()\n    @addThangComponentConfigViews()\n    @checkForMissingSystems()\n    @reportChanges()\n\n  addThangComponentConfigViews: ->\n    # Detach all component config views temporarily.\n    componentConfigViews = {}\n    for subview in _.values(@subviews)\n      continue unless subview instanceof ThangComponentConfigView\n      componentConfigViews[subview.component.get('original')] = subview\n      subview.$el.detach()\n\n    # Put back config views into the DOM based on the component list ordering,\n    # adding and registering new ones as needed.\n    configsEl = @$el.find('#thang-component-configs')\n\n    componentRefs = _.merge {}, @componentsTreema.data\n    if thangTypeComponents = @thangType?.get('components')\n      thangComponentRefs = _.zipObject((c.original for c in thangTypeComponents), thangTypeComponents)\n      for thangTypeComponent in thangTypeComponents\n        if componentRef = componentRefs[thangTypeComponent.original]\n          componentRef.additionalDefaults = thangTypeComponent.config\n        else\n          modifiedRef = _.merge {}, thangTypeComponent\n          modifiedRef.additionalDefaults = modifiedRef.config\n          delete modifiedRef.config\n          componentRefs[thangTypeComponent.original] = modifiedRef\n\n    for componentRef in _.values(componentRefs)\n      subview = componentConfigViews[componentRef.original]\n      if not subview\n        subview = @makeThangComponentConfigView(componentRef)\n        continue unless subview\n        @registerSubView(subview)\n      subview.setIsDefaultComponent(not @componentsTreema.data[componentRef.original])\n      configsEl.append(subview.$el)\n\n  makeThangComponentConfigView: (thangComponent) ->\n    component = @supermodel.getModelByOriginal(LevelComponent, thangComponent.original)\n    return unless component?.loaded\n    config = thangComponent.config ? {}\n    configView = new ThangComponentConfigView({\n      supermodel: @supermodel\n      level: @level\n      world: @world\n      config: config\n      component: component\n      additionalDefaults: thangComponent.additionalDefaults\n    })\n    configView.render()\n    @listenTo configView, 'changed', @onConfigChanged\n    configView\n\n  onConfigChanged: (e) ->\n    foundComponent = false\n    for thangComponent in @components\n      if thangComponent.original is e.component.get('original')\n        thangComponent.config = e.config\n        foundComponent = true\n        break\n\n    if not foundComponent\n      @components.push({\n        original: e.component.get('original')\n        majorVersion: e.component.get('version').major\n        config: e.config\n      })\n\n      for subview in _.values(@subviews)\n        continue unless subview instanceof ThangComponentConfigView\n        if subview.component.get('original') is e.component.get('original')\n          _.defer -> subview.setIsDefaultComponent(false)\n          break\n\n    @updateComponentsList()\n    @reportChanges()\n\n  onSelectComponent: (e, nodes) =>\n    @componentsTreema.$el.find('.dependent').removeClass('dependent')\n    @$el.find('.selected-component').removeClass('selected-component')\n    return unless nodes.length is 1\n\n    # find dependent components\n    dependents = {}\n    dependents[nodes[0].getData().original] = true\n    componentsToCheck = [nodes[0].getData().original]\n    while componentsToCheck.length\n      componentOriginal = componentsToCheck.pop()\n      for otherComponentRef in @components\n        continue if otherComponentRef.original is componentOriginal\n        continue if dependents[otherComponentRef.original]\n        otherComponent = @supermodel.getModelByOriginal(LevelComponent, otherComponentRef.original)\n        for dependency in otherComponent.get('dependencies', true)\n          if dependents[dependency.original]\n            dependents[otherComponentRef.original] = true\n            componentsToCheck.push otherComponentRef.original\n\n    # highlight them\n    for child in _.values(@componentsTreema.childrenTreemas)\n      if dependents[child.getData().original]\n        child.$el.addClass('dependent')\n\n    # scroll to the config\n    for subview in _.values(@subviews)\n      continue unless subview instanceof ThangComponentConfigView\n      if subview.component.get('original') is nodes[0].getData().original\n        subview.$el[0].scrollIntoView()\n        subview.$el.addClass('selected-component')\n        break\n\n  onChangeExtantComponents: =>\n    @buildAddComponentTreema()\n    @reportChanges()\n\n  checkForMissingSystems: ->\n    return unless @level\n    extantSystems =\n      (@supermodel.getModelByOriginalAndMajorVersion LevelSystem, sn.original, sn.majorVersion).attributes.name.toLowerCase() for idx, sn of @level.get('systems')\n\n    componentModels = (@supermodel.getModelByOriginal(LevelComponent, c.original) for c in @components)\n    componentSystems = (c.get('system') for c in componentModels when c)\n\n    for system in componentSystems\n      if system isnt 'misc' and system not in extantSystems\n        s = \"Component requires system <strong>#{system}</strong> which is currently not included in this level.\"\n        noty({\n          text: s,\n          layout: 'bottomLeft',\n          type: 'warning'\n        })\n\n  reportChanges: ->\n    @lastComponentLength = @components.length\n    @trigger 'components-changed', $.extend(true, [], @components)\n\n  undo: -> @componentsTreema.undo()\n\n  redo: -> @componentsTreema.redo()\n\n  onAddComponentsButtonClicked: ->\n    modal = new AddThangComponentsModal({skipOriginals: (c.original for c in @components)})\n    @openModalView modal\n    @listenToOnce modal, 'hidden', ->\n      componentsToAdd = modal.getSelectedComponents()\n      sparseComponents = ({original: c.get('original'), majorVersion: c.get('version').major} for c in componentsToAdd)\n      @loadComponents(sparseComponents)\n      @components = @components.concat(sparseComponents)\n      @onComponentsChanged()\n\n  onThangTypeKindChanged: (e) ->\n    return unless defaultComponents = DEFAULT_COMPONENTS[e.kind]\n    for component in defaultComponents when not _.find(@components, original: component.original)\n      @components.push component\n      @onComponentsAdded()\n\n  destroy: ->\n    @componentsTreema?.destroy()\n    super()\n\nclass ThangComponentsObjectNode extends TreemaObjectNode\n  addNewChild: -> @addNewChildForKey('') # HACK to get the object adding to act more like adding to an array\n\n  getChildren: ->\n    children = super(arguments...)\n    children.sort(@sortFunction)\n\n  sortFunction: (a, b) =>\n    a = a.value ? a.defaultData\n    b = b.value ? b.defaultData\n    a = @settings.supermodel.getModelByOriginalAndMajorVersion(LevelComponent, a.original, a.majorVersion)\n    b = @settings.supermodel.getModelByOriginalAndMajorVersion(LevelComponent, b.original, b.majorVersion)\n    return 0 if not (a or b)\n    return 1 if not b\n    return -1 if not a\n    return 1 if a.get('system') > b.get('system')\n    return -1 if a.get('system') < b.get('system')\n    return 1 if a.get('name') > b.get('name')\n    return -1 if a.get('name') < b.get('name')\n    return 0\n"]}