{"version":3,"sources":["app/templates/editor/thang/thang-type-edit-view.jade","app/views/editor/thang/ThangTypeEditView.coffee"],"names":[],"mappings":"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","file":"public/javascripts/app/views/editor/thang/ThangTypeEditView.js","sourcesContent":["var __templateData = function anonymous(locals\n/**/) {\nvar buf = [];\nvar locals_ = (locals || {}),thangType = locals_.thangType,recentlyPlayedLevels = locals_.recentlyPlayedLevels,authorized = locals_.authorized,me = locals_.me,fileSizeString = locals_.fileSizeString,animations = locals_.animations;if ( thangType.loading)\n{\nbuf.push(\"<nav role=\\\"navigation\\\" id=\\\"thang-editor-top-nav\\\" class=\\\"navbar navbar-default\\\"><div class=\\\"container-fluid\\\"><ul class=\\\"nav navbar-nav\\\"><li><a href=\\\"/editor/thang\\\"><span class=\\\"glyphicon-home glyphicon\\\"></span></a></li></ul></div></nav>\");\n}\nelse\n{\nbuf.push(\"<nav role=\\\"navigation\\\" id=\\\"thang-editor-top-nav\\\" class=\\\"navbar navbar-default\\\"><ul class=\\\"nav navbar-nav\\\"><li><a href=\\\"/editor/thang\\\"><span class=\\\"glyphicon-home glyphicon\\\"></span></a></li></ul><ul class=\\\"nav navbar-nav nav-tabs\\\"><li class=\\\"active\\\"><a href=\\\"#editor-thang-main-tab-view\\\" data-toggle=\\\"tab\\\" data-i18n=\\\"editor.thang_main\\\">Main</a></li><li><a href=\\\"#editor-thang-components-tab-view\\\" data-toggle=\\\"tab\\\" data-i18n=\\\"editor.level_tab_components\\\">Components</a></li><li><a href=\\\"#editor-thang-spritesheets-view\\\" data-toggle=\\\"tab\\\" data-i18n=\\\"editor.thang_spritesheets\\\">Spritesheets</a></li><li><a href=\\\"#editor-thang-colors-tab-view\\\" data-toggle=\\\"tab\\\" data-i18n=\\\"editor.thang_colors\\\" id=\\\"color-tab\\\">Colors</a></li><li><a href=\\\"#editor-thang-patches-view\\\" data-toggle=\\\"tab\\\" id=\\\"patches-tab\\\"><span data-i18n=\\\"resources.patches\\\" class=\\\"spr\\\">Patches</span>\");\nvar patches = thangType.get('patches')\nif ( patches && patches.length)\n{\nbuf.push(\"<span class=\\\"badge\\\">\" + (jade.escape(null == (jade.interp = patches.length) ? \"\" : jade.interp)) + \"</span>\");\n}\nbuf.push(\"</a></li></ul><div class=\\\"navbar-header\\\"><span class=\\\"navbar-brand\\\">\" + (jade.escape((jade.interp = thangType.attributes.name) == null ? '' : jade.interp)) + \"</span></div><ul class=\\\"nav navbar-nav navbar-right\\\"><li class=\\\"dropdown\\\"><a data-toggle=\\\"dropdown\\\" class=\\\"play-with-level-parent\\\"><span class=\\\"glyphicon-play glyphicon\\\"></span></a><ul class=\\\"dropdown-menu\\\"><li class=\\\"dropdown-header\\\">Play Which Level?</li><li>\");\n// iterate recentlyPlayedLevels\n;(function(){\n  var $$obj = recentlyPlayedLevels;\n  if ('number' == typeof $$obj.length) {\n\n    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {\n      var level = $$obj[$index];\n\nbuf.push(\"<a\" + (jade.attrs({ 'data-level':(level), \"class\": [('play-with-level-button')] }, {\"data-level\":true})) + \">\" + (jade.escape(null == (jade.interp = level) ? \"\" : jade.interp)) + \"</a>\");\n    }\n\n  } else {\n    var $$l = 0;\n    for (var $index in $$obj) {\n      $$l++;      var level = $$obj[$index];\n\nbuf.push(\"<a\" + (jade.attrs({ 'data-level':(level), \"class\": [('play-with-level-button')] }, {\"data-level\":true})) + \">\" + (jade.escape(null == (jade.interp = level) ? \"\" : jade.interp)) + \"</a>\");\n    }\n\n  }\n}).call(this);\n\nbuf.push(\"<input placeholder=\\\"Type in a level name\\\" class=\\\"play-with-level-input\\\"/></li></ul></li>\");\nif ( authorized)\n{\nbuf.push(\"<li id=\\\"save-button\\\"><a><span class=\\\"glyphicon-floppy-disk glyphicon\\\"></span></a></li>\");\n}\nbuf.push(\"<li class=\\\"dropdown\\\"><a data-toggle=\\\"dropdown\\\"><span class=\\\"glyphicon-chevron-down glyphicon\\\"></span></a><ul class=\\\"dropdown-menu\\\"><li data-i18n=\\\"common.actions\\\" class=\\\"dropdown-header\\\">Actions</li><li\" + (jade.attrs({ \"class\": [(!me.isAdmin() && !me.isArtisan() ? \"disabled\": \"\")] }, {\"class\":true})) + \"><a data-i18n=\\\"common.fork\\\" id=\\\"fork-start-button\\\">Fork</a></li><li\" + (jade.attrs({ \"class\": [(!authorized ? \"disabled\": \"\")] }, {\"class\":true})) + \"><a\" + (jade.attrs({ 'data-toggle':(\"coco-modal\"), 'data-target':(\"modal/RevertModal\"), 'data-i18n':(\"editor.revert\"), 'disabled':(!authorized), 'id':('revert-button') }, {\"data-toggle\":true,\"data-target\":true,\"data-i18n\":true,\"disabled\":true})) + \">Revert</a></li><li\" + (jade.attrs({ \"class\": [(!authorized ? \"disabled\": \"\")] }, {\"class\":true})) + \"><a data-i18n=\\\"editor.pop_i18n\\\" id=\\\"pop-level-i18n-button\\\">Populate i18n</a></li><li class=\\\"divider\\\"></li><li data-i18n=\\\"common.info\\\" class=\\\"dropdown-header\\\">Info</li><li id=\\\"history-button\\\"><a href=\\\"#\\\" data-i18n=\\\"general.version_history\\\">Version History</a></li><li class=\\\"divider\\\"></li><li data-i18n=\\\"common.help\\\" class=\\\"dropdown-header\\\">Help</li><li><a href=\\\"https://github.com/codecombat/codecombat/wiki/Artisan-Home\\\" data-i18n=\\\"editor.wiki\\\" target=\\\"_blank\\\">Wiki</a></li><li><a href=\\\"https://coco-slack-invite.herokuapp.com/\\\" data-i18n=\\\"editor.live_chat\\\" target=\\\"_blank\\\">Live Chat</a></li><li><a href=\\\"http://discourse.codecombat.com/category/artisan\\\" data-i18n=\\\"nav.forum\\\" target=\\\"_blank\\\">Forum</a></li>\");\nif ( !me.isStudent())\n{\nbuf.push(\"<li><a data-i18n=\\\"nav.contact\\\" class=\\\"contact-modal\\\"></a></li>\");\n}\nbuf.push(\"</ul></li></ul></nav>\");\n}\nbuf.push(\"<div class=\\\"outer-content\\\"><div class=\\\"tab-content\\\"><div id=\\\"editor-thang-colors-tab-view\\\" class=\\\"tab-pane\\\"></div><div id=\\\"editor-thang-main-tab-view\\\" class=\\\"tab-pane active\\\"><div id=\\\"settings-col\\\" class=\\\"well\\\"><div class=\\\"row\\\"><div class=\\\"col-sm-3\\\"><img id=\\\"portrait\\\" class=\\\"img-thumbnail\\\"/></div><div class=\\\"col-sm-9\\\"><div class=\\\"file-controls\\\"><button\" + (jade.attrs({ 'disabled':(authorized === true ? undefined : \"true\"), 'id':('upload-button'), \"class\": [('btn'),('btn-sm'),('btn-info')] }, {\"disabled\":true})) + \"><span class=\\\"glyphicon glyphicon-upload\\\"></span><span class=\\\"spl\\\">Upload Animation</span></button><button\" + (jade.attrs({ 'disabled':(authorized === true ? undefined : \"true\"), 'id':('clear-button'), \"class\": [('btn'),('btn-sm'),('btn-danger')] }, {\"disabled\":true})) + \"><span class=\\\"glyphicon glyphicon-remove\\\"></span><span class=\\\"spl\\\">Clear Data</span></button><button\" + (jade.attrs({ 'id':('set-vector-icon'), 'disabled':(authorized === true ? undefined : \"true\"), \"class\": [('btn'),('btn-sm')] }, {\"disabled\":true})) + \"><span class=\\\"glyphicon glyphicon-gbp\\\"></span><span class=\\\"spl\\\">Vector Icon Setup</span></button><button\" + (jade.attrs({ 'id':('export-sprite-sheet-btn'), 'disabled':(authorized === true ? undefined : \"true\"), \"class\": [('btn'),('btn-sm')] }, {\"disabled\":true})) + \"><span class=\\\"glyphicon glyphicon-export\\\"></span><span class=\\\"spl\\\">Export SpriteSheet</span></button><input id=\\\"real-upload-button\\\" type=\\\"file\\\"/></div><div id=\\\"thang-type-file-size\\\">\" + (jade.escape(null == (jade.interp = fileSizeString) ? \"\" : jade.interp)) + \"</div></div></div><div id=\\\"thang-type-treema\\\"></div><div class=\\\"clearfix\\\"></div></div><div id=\\\"display-col\\\" class=\\\"well\\\"><canvas id=\\\"canvas\\\" width=\\\"400\\\" height=\\\"600\\\"></canvas><select id=\\\"animations-select\\\" class=\\\"form-control\\\">\");\n// iterate animations\n;(function(){\n  var $$obj = animations;\n  if ('number' == typeof $$obj.length) {\n\n    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {\n      var animation = $$obj[$index];\n\nbuf.push(\"<option>\" + (jade.escape((jade.interp = animation) == null ? '' : jade.interp)) + \"</option>\");\n    }\n\n  } else {\n    var $$l = 0;\n    for (var $index in $$obj) {\n      $$l++;      var animation = $$obj[$index];\n\nbuf.push(\"<option>\" + (jade.escape((jade.interp = animation) == null ? '' : jade.interp)) + \"</option>\");\n    }\n\n  }\n}).call(this);\n\nbuf.push(\"</select><div><button id=\\\"marker-button\\\" class=\\\"btn btn-small btn-primary\\\"><i class=\\\"icon-map-marker\\\"></i><span class=\\\"spl\\\">Markers</span></button><button id=\\\"play-button\\\" class=\\\"btn btn-small btn-primary\\\"><i class=\\\"icon-play\\\"></i><span class=\\\"spl\\\">Play</span></button><button id=\\\"stop-button\\\" class=\\\"btn btn-small btn-primary\\\"><i class=\\\"icon-stop\\\"></i><span class=\\\"spl\\\">Stop</span></button></div><div class=\\\"slider-cell\\\">Rotation:<span class=\\\"rotation-label\\\"></span><div id=\\\"rotation-slider\\\" class=\\\"selector\\\"></div></div><div class=\\\"slider-cell\\\">Scale:<span class=\\\"scale-label\\\"></span><div id=\\\"scale-slider\\\" class=\\\"selector\\\"></div></div><div class=\\\"slider-cell\\\">Resolution:<span class=\\\"resolution-label\\\"> 4.0x</span><div id=\\\"resolution-slider\\\" class=\\\"selector\\\"></div></div><div class=\\\"slider-cell\\\">Health:<span class=\\\"health-label\\\"> 10hp</span><div id=\\\"health-slider\\\" class=\\\"selector\\\"></div></div></div></div><div id=\\\"editor-thang-components-tab-view\\\" class=\\\"tab-pane\\\"><div id=\\\"thang-components-edit-view\\\"></div></div><div id=\\\"editor-thang-spritesheets-view\\\" class=\\\"tab-pane\\\"><div id=\\\"spritesheets\\\"></div></div><div id=\\\"editor-thang-patches-view\\\" class=\\\"tab-pane\\\"><div class=\\\"patches-view\\\"></div></div></div><div class=\\\"clearfix\\\"></div></div>\");;return buf.join(\"\");\n};\nif (typeof define === 'function' && define.amd) {\n  define([], function() {\n    return __templateData;\n  });\n} else if (typeof module === 'object' && module && module.exports) {\n  module.exports = __templateData;\n} else {\n  __templateData;\n}","ThangType = require 'models/ThangType'\nSpriteParser = require 'lib/sprites/SpriteParser'\nSpriteBuilder = require 'lib/sprites/SpriteBuilder'\nLank = require 'lib/surface/Lank'\nLayerAdapter = require 'lib/surface/LayerAdapter'\nCamera = require 'lib/surface/Camera'\nDocumentFiles = require 'collections/DocumentFiles'\nrequire 'vendor/treema'\n\n# in the template, but need to require to load them\nrequire 'views/modal/RevertModal'\n\nRootView = require 'views/core/RootView'\nThangComponentsEditView = require 'views/editor/component/ThangComponentsEditView'\nThangTypeVersionsModal = require './ThangTypeVersionsModal'\nThangTypeColorsTabView = require './ThangTypeColorsTabView'\nPatchesView = require 'views/editor/PatchesView'\nForkModal = require 'views/editor/ForkModal'\nVectorIconSetupModal = require 'views/editor/thang/VectorIconSetupModal'\nSaveVersionModal = require 'views/editor/modal/SaveVersionModal'\ntemplate = require 'templates/editor/thang/thang-type-edit-view'\nstorage = require 'core/storage'\nExportThangTypeModal = require './ExportThangTypeModal'\n\nrequire 'game-libraries'\n\nCENTER = {x: 200, y: 400}\n\ncommonTasks = [\n  'Upload the art.'\n  'Set up the vector icon.'\n]\n\ndisplayedThangTypeTasks = [\n  'Configure the idle action.'\n  'Configure the positions (registration point, etc.).'\n  'Set shadow diameter to 0 if needed.'\n  'Set scale to 0.3, 0.5, or whatever is appropriate.'\n  'Set rotation to isometric if needed.'\n  'Set accurate Physical size, shape, and default z.'\n  'Set accurate Collides collision information if needed.'\n  'Double-check that fixedRotation is accurate, if it collides.'\n]\n\nanimatedThangTypeTasks = displayedThangTypeTasks.concat [\n  'Configure the non-idle actions.'\n  'Configure any per-action registration points needed.'\n  'Add flipX per action if needed to face to the right.'\n  'Make sure any death and attack actions do not loop.'\n  'Add defaultSimlish if needed.'\n  'Add selection sounds if needed.'\n  'Add per-action sound triggers.'\n  'Add team color groups.'\n]\n\ncontainerTasks = displayedThangTypeTasks.concat [\n  'Select viable terrains if not universal.'\n  'Set Exists stateless: true if needed.'\n]\n\npurchasableTasks = [\n  'Add a tier, or 10 + desired tier if not ready yet.'\n  'Add a gem cost.'\n  'Write a description.'\n  'Click the Populate i18n button.'\n]\n\ndefaultTasks =\n  Unit: commonTasks.concat animatedThangTypeTasks.concat [\n    'Start a new name category in names.coffee if needed.'\n    'Set to Allied to correct team (ogres, humans, or neutral).'\n    'Add AutoTargetsNearest or FightsBack if needed.'\n    'Add other Components like Shoots or Casts if needed.'\n    'Configure other Components, like Moves, Attackable, Attacks, etc.'\n    'Override the HasAPI type if it will not be correctly inferred.'\n    'Add to Existence System power table.'\n  ]\n  Hero: commonTasks.concat animatedThangTypeTasks.concat purchasableTasks.concat [\n    'Set the hero class.'\n    'Add Extended Hero Name.'\n    'Upload Hero Doll Images.'\n    'Upload Pose Image.'\n    'Start a new name category in names.coffee.'\n    'Set up hero stats in Equips, Attackable, Moves.'\n    'Set Collects collectRange to 2, Sees visualRange to 60.'\n    'Add any custom hero abilities.'\n    'Add to ThangType model hard-coded hero ids/classes list.'\n    'Add to LevelHUDView hard-coded hero short names list.'\n    'Add to InventoryView hard-coded hero gender list.'\n    'Add to PlayHeroesModal hard-coded hero positioning logic.'\n    'Add as unlock to a level and add unlockLevelName here.'\n  ]\n  Floor: commonTasks.concat containerTasks.concat [\n    'Add 10 x 8.5 snapping.'\n    'Set fixed rotation.'\n    'Make sure everything is scaled to tile perfectly.'\n    'Adjust SingularSprite floor scale list if necessary.'\n  ]\n  Wall: commonTasks.concat containerTasks.concat [\n    'Add 4x4 snapping.'\n    'Set fixed rotation.'\n    'Set up and tune complicated wall-face actions.'\n    'Make sure everything is scaled to tile perfectly.'\n  ]\n  Doodad: commonTasks.concat containerTasks.concat [\n    'Add to GenerateTerrainModal logic if needed.'\n  ]\n  Misc: commonTasks.concat [\n    'Add any misc tasks for this misc ThangType.'\n  ]\n  Mark: commonTasks.concat [\n    'Check the animation framerate.'\n    'Double-check that bottom of mark is just touching registration point.'\n  ]\n  Item: commonTasks.concat purchasableTasks.concat [\n    'Set the hero class if class-specific.'\n    'Upload Paper Doll Images.'\n    'Configure item stats and abilities.'\n  ]\n  Missile: commonTasks.concat animatedThangTypeTasks.concat [\n    'Make sure there is a launch sound trigger.'\n    'Make sure there is a hit sound trigger.'\n    'Make sure there is a die animation.'\n    'Add Arrow, Shell, Beam, or other missile Component.'\n    'Choose Missile.leadsShots and Missile.shootsAtGround.'\n    'Choose Moves.maxSpeed and other config.'\n    'Choose Expires.lifespan config if needed.'\n    'Set spriteType: singular if needed for proper rendering.'\n    'Add HasAPI if the missile should show up in findEnemyMissiles.'\n  ]\n\nmodule.exports = class ThangTypeEditView extends RootView\n  id: 'thang-type-edit-view'\n  className: 'editor'\n  template: template\n  resolution: 4\n  scale: 3\n  mockThang:\n    health: 10.0\n    maxHealth: 10.0\n    hudProperties: ['health']\n    acts: true\n\n  events:\n    'click #clear-button': 'clearRawData'\n    'click #upload-button': -> @$el.find('input#real-upload-button').click()\n    'click #set-vector-icon': 'onClickSetVectorIcon'\n    'change #real-upload-button': 'animationFileChosen'\n    'change #animations-select': 'showAnimation'\n    'click #marker-button': 'toggleDots'\n    'click #stop-button': 'stopAnimation'\n    'click #play-button': 'playAnimation'\n    'click #history-button': 'showVersionHistory'\n    'click li:not(.disabled) > #fork-start-button': 'startForking'\n    'click #save-button': 'openSaveModal'\n    'click #patches-tab': -> @patchesView.load()\n    'click .play-with-level-button': 'onPlayLevel'\n    'click .play-with-level-parent': 'onPlayLevelSelect'\n    'keyup .play-with-level-input': 'onPlayLevelKeyUp'\n    'click li:not(.disabled) > #pop-level-i18n-button': 'onPopulateLevelI18N'\n    'mousedown #canvas': 'onCanvasMouseDown'\n    'mouseup #canvas': 'onCanvasMouseUp'\n    'mousemove #canvas': 'onCanvasMouseMove'\n    'click #export-sprite-sheet-btn': 'onClickExportSpriteSheetButton'\n\n  onClickSetVectorIcon: ->\n    modal = new VectorIconSetupModal({}, @thangType)\n    @openModalView modal\n    modal.once 'done', => @treema.set('/', @getThangData())\n\n  subscriptions:\n    'editor:thang-type-color-groups-changed': 'onColorGroupsChanged'\n\n  # init / render\n\n  constructor: (options, @thangTypeID) ->\n    super options\n    @mockThang = $.extend(true, {}, @mockThang)\n    @thangType = new ThangType(_id: @thangTypeID)\n    @thangType = @supermodel.loadModel(@thangType).model\n    @thangType.saveBackups = true\n    @listenToOnce @thangType, 'sync', ->\n      @files = @supermodel.loadCollection(new DocumentFiles(@thangType), 'files').model\n      @updateFileSize()\n#    @refreshAnimation = _.debounce @refreshAnimation, 500\n\n  showLoading: ($el) ->\n    $el ?= @$el.find('.outer-content')\n    super($el)\n\n  getRenderData: (context={}) ->\n    context = super(context)\n    context.thangType = @thangType\n    context.animations = @getAnimationNames()\n    context.authorized = not me.get('anonymous')\n    context.recentlyPlayedLevels = storage.load('recently-played-levels') ? ['items']\n    context.fileSizeString = @fileSizeString\n    context\n\n  getAnimationNames: ->\n    _.sortBy _.keys(@thangType.get('actions') or {}), (a) ->\n      {move: 1, cast: 2, attack: 3, idle: 4, portrait: 6}[a] or 5\n\n  afterRender: ->\n    super()\n    return unless @supermodel.finished()\n    @initStage()\n    @buildTreema()\n    @initSliders()\n    @initComponents()\n    @insertSubView(new ThangTypeColorsTabView(@thangType))\n    @patchesView = @insertSubView(new PatchesView(@thangType), @$el.find('.patches-view'))\n    @showReadOnly() if me.get('anonymous')\n    @updatePortrait()\n\n  initComponents: =>\n    options =\n      components: @thangType.get('components') ? []\n      supermodel: @supermodel\n\n    @thangComponentEditView = new ThangComponentsEditView options\n    @listenTo @thangComponentEditView, 'components-changed', @onComponentsChanged\n    @insertSubView @thangComponentEditView\n\n  onComponentsChanged: (components) =>\n    @thangType.set 'components', components\n\n  onColorGroupsChanged: (e) ->\n    @temporarilyIgnoringChanges = true\n    @treema.set 'colorGroups', e.colorGroups\n    @temporarilyIgnoringChanges = false\n\n  makeDot: (color) ->\n    circle = new createjs.Shape()\n    circle.graphics.beginFill(color).beginStroke('black').drawCircle(0, 0, 5)\n    circle.scaleY = 0.2\n    circle.scaleX = 0.5\n    circle\n\n  initStage: ->\n    canvas = @$el.find('#canvas')\n    @stage = new createjs.Stage(canvas[0])\n    @layerAdapter = new LayerAdapter({name:'Default', webGL: true})\n    @topLayer = new createjs.Container()\n\n    @layerAdapter.container.x = @topLayer.x = CENTER.x\n    @layerAdapter.container.y = @topLayer.y = CENTER.y\n    @stage.addChild(@layerAdapter.container, @topLayer)\n    @listenTo @layerAdapter, 'new-spritesheet', @onNewSpriteSheet\n    @camera?.destroy()\n    @camera = new Camera canvas\n\n    @torsoDot = @makeDot('blue')\n    @mouthDot = @makeDot('yellow')\n    @aboveHeadDot = @makeDot('green')\n    @groundDot = @makeDot('red')\n    @topLayer.addChild(@groundDot, @torsoDot, @mouthDot, @aboveHeadDot)\n    @updateGrid()\n    _.defer @refreshAnimation\n    @toggleDots(false)\n\n    createjs.Ticker.setFPS(30)\n    createjs.Ticker.addEventListener('tick', @stage)\n\n  toggleDots: (newShowDots) ->\n    @showDots = if typeof(newShowDots) is 'boolean' then newShowDots else not @showDots\n    @updateDots()\n\n  updateDots: ->\n    @topLayer.removeChild(@torsoDot, @mouthDot, @aboveHeadDot, @groundDot)\n    return unless @currentLank\n    return unless @showDots\n    torso = @currentLank.getOffset 'torso'\n    mouth = @currentLank.getOffset 'mouth'\n    aboveHead = @currentLank.getOffset 'aboveHead'\n    @torsoDot.x = torso.x\n    @torsoDot.y = torso.y\n    @mouthDot.x = mouth.x\n    @mouthDot.y = mouth.y\n    @aboveHeadDot.x = aboveHead.x\n    @aboveHeadDot.y = aboveHead.y\n    @topLayer.addChild(@groundDot, @torsoDot, @mouthDot, @aboveHeadDot)\n\n  stopAnimation: ->\n    @currentLank?.queueAction('idle')\n\n  playAnimation: ->\n    @currentLank?.queueAction(@$el.find('#animations-select').val())\n\n  updateGrid: ->\n    grid = new createjs.Container()\n    line = new createjs.Shape()\n    width = 1000\n    line.graphics.beginFill('#666666').drawRect(-width/2, -0.5, width, 0.5)\n\n    line.x = CENTER.x\n    line.y = CENTER.y\n    y = line.y\n    step = 10 * @scale\n    y -= step while y > 0\n    while y < 500\n      y += step\n      newLine = line.clone()\n      newLine.y = y\n      grid.addChild(newLine)\n\n    x = line.x\n    x -= step while x > 0\n    while x < 400\n      x += step\n      newLine = line.clone()\n      newLine.x = x\n      newLine.rotation = 90\n      grid.addChild(newLine)\n\n    @stage.removeChild(@grid) if @grid\n    @stage.addChildAt(grid, 0)\n    @grid = grid\n\n  updateSelectBox: ->\n    names = @getAnimationNames()\n    select = @$el.find('#animations-select')\n    return if select.find('option').length is names.length\n    select.empty()\n    select.append($('<option></option>').text(name)) for name in names\n\n  # upload\n\n  animationFileChosen: (e) ->\n    @file = e.target.files[0]\n    return unless @file\n    return unless _.string.endsWith @file.type, 'javascript'\n#    @$el.find('#upload-button').prop('disabled', true)\n    @reader = new FileReader()\n    @reader.onload = @onFileLoad\n    @reader.readAsText(@file)\n\n  onFileLoad: (e) =>\n    result = @reader.result\n    parser = new SpriteParser(@thangType)\n    parser.parse(result)\n    @treema.set('raw', @thangType.get('raw'))\n    @updateSelectBox()\n    @refreshAnimation()\n    @updateFileSize()\n\n  updateFileSize: ->\n    file = JSON.stringify(@thangType.attributes)\n    compressed = LZString.compress(file)\n    size = (file.length / 1024).toFixed(1) + \"KB\"\n    compressedSize = (compressed.length / 1024).toFixed(1) + \"KB\"\n    gzipCompressedSize = compressedSize * 1.65  # just based on comparing ogre barracks\n    @fileSizeString = \"Size: #{size} (~#{compressedSize} gzipped)\"\n    @$el.find('#thang-type-file-size').text @fileSizeString\n\n  # animation select\n\n  refreshAnimation: =>\n    @thangType.resetSpriteSheetCache()\n    return @showRasterImage() if @thangType.get('raster')\n    options = @getLankOptions()\n    console.log 'refresh animation....'\n    @showAnimation()\n    @updatePortrait()\n\n  showRasterImage: ->\n    lank = new Lank(@thangType, @getLankOptions())\n    @showLank(lank)\n    @updateScale()\n\n  onNewSpriteSheet: ->\n    $('#spritesheets').empty()\n    for image in @layerAdapter.spriteSheet._images\n      $('#spritesheets').append(image)\n    @layerAdapter.container.x = CENTER.x\n    @layerAdapter.container.y = CENTER.y\n    @updateScale()\n\n  showAnimation: (animationName) ->\n    animationName = @$el.find('#animations-select').val() unless _.isString animationName\n    return unless animationName\n    @mockThang.action = animationName\n    @showAction(animationName)\n    @updateRotation()\n    @updateScale() # must happen after update rotation, because updateRotation calls the sprite update() method.\n\n  showMovieClip: (animationName) ->\n    vectorParser = new SpriteBuilder(@thangType)\n    movieClip = vectorParser.buildMovieClip(animationName)\n    return unless movieClip\n    reg = @thangType.get('positions')?.registration\n    if reg\n      movieClip.regX = -reg.x\n      movieClip.regY = -reg.y\n    scale = @thangType.get('scale')\n    if scale\n      movieClip.scaleX = movieClip.scaleY = scale\n    @showSprite(movieClip)\n\n  getLankOptions: -> {resolutionFactor: @resolution, thang: @mockThang, preloadSounds: false}\n\n  showAction: (actionName) ->\n    options = @getLankOptions()\n    lank = new Lank(@thangType, options)\n    @showLank(lank)\n    lank.queueAction(actionName)\n\n  updatePortrait: ->\n    options = @getLankOptions()\n    portrait = @thangType.getPortraitImage(options)\n    return unless portrait\n    portrait?.attr('id', 'portrait').addClass('img-thumbnail')\n    portrait.addClass 'img-thumbnail'\n    $('#portrait').replaceWith(portrait)\n\n  showLank: (lank) ->\n    @clearDisplayObject()\n    @clearLank()\n    @layerAdapter.resetSpriteSheet()\n    @layerAdapter.addLank(lank)\n    @currentLank = lank\n    @currentLankOffset = null\n\n  showSprite: (sprite) ->\n    @clearDisplayObject()\n    @clearLank()\n    @topLayer.addChild(sprite)\n    @currentObject = sprite\n    @updateDots()\n\n  clearDisplayObject: ->\n    @topLayer.removeChild(@currentObject) if @currentObject?\n\n  clearLank: ->\n    @layerAdapter.removeLank(@currentLank) if @currentLank\n    @currentLank?.destroy()\n\n  # sliders\n\n  initSliders: ->\n    @rotationSlider = @initSlider $('#rotation-slider', @$el), 50, @updateRotation\n    @scaleSlider = @initSlider $('#scale-slider', @$el), 29, @updateScale\n    @resolutionSlider = @initSlider $('#resolution-slider', @$el), 39, @updateResolution\n    @healthSlider = @initSlider $('#health-slider', @$el), 100, @updateHealth\n\n  updateRotation: =>\n    value = parseInt(180 * (@rotationSlider.slider('value') - 50) / 50)\n    @$el.find('.rotation-label').text \" #{value}° \"\n    if @currentLank\n      @currentLank.rotation = value\n      @currentLank.update(true)\n\n  updateScale: =>\n    scaleValue = (@scaleSlider.slider('value') + 1) / 10\n    @layerAdapter.container.scaleX = @layerAdapter.container.scaleY = @topLayer.scaleX = @topLayer.scaleY = scaleValue\n    fixed = scaleValue.toFixed(1)\n    @scale = scaleValue\n    @$el.find('.scale-label').text \" #{fixed}x \"\n    @updateGrid()\n\n  updateResolution: =>\n    value = (@resolutionSlider.slider('value') + 1) / 10\n    fixed = value.toFixed(1)\n    @$el.find('.resolution-label').text \" #{fixed}x \"\n    @resolution = value\n    @refreshAnimation()\n\n  updateHealth: =>\n    value = parseInt((@healthSlider.slider('value')) / 10)\n    @$el.find('.health-label').text \" #{value}hp \"\n    @mockThang.health = value\n    @currentLank?.update()\n\n  # save\n\n  saveNewThangType: (e) ->\n    newThangType = if e.major then @thangType.cloneNewMajorVersion() else @thangType.cloneNewMinorVersion()\n    newThangType.set('commitMessage', e.commitMessage)\n    newThangType.updateI18NCoverage() if newThangType.get('i18nCoverage')\n\n    res = newThangType.save(null, {type: 'POST'})  # Override PUT so we can trigger postNewVersion logic\n    return unless res\n    modal = $('#save-version-modal')\n    @enableModalInProgress(modal)\n\n    res.error =>\n      @disableModalInProgress(modal)\n\n    res.success =>\n      url = \"/editor/thang/#{newThangType.get('slug') or newThangType.id}\"\n      portraitSource = null\n      if @thangType.get('raster')\n        #image = @currentLank.sprite.image  # Doesn't work?\n        image = @currentLank.sprite.spriteSheet._images[0]\n        portraitSource = imageToPortrait image\n        # bit of a hacky way to get that portrait\n      success = =>\n        @thangType.clearBackup()\n        document.location.href = url\n      newThangType.uploadGenericPortrait success, portraitSource\n\n  clearRawData: ->\n    @thangType.resetRawData()\n    @thangType.set 'actions', undefined\n    @clearDisplayObject()\n    @treema.set('/', @getThangData())\n\n  getThangData: ->\n    data = $.extend(true, {}, @thangType.attributes)\n    data = _.pick data, (value, key) => not (key in ['components'])\n\n  buildTreema: ->\n    data = @getThangData()\n    schema = _.cloneDeep ThangType.schema\n    schema.properties = _.pick schema.properties, (value, key) => not (key in ['components'])\n    options =\n      data: data\n      schema: schema\n      files: @files\n      filePath: \"db/thang.type/#{@thangType.get('original')}\"\n      readOnly: me.get('anonymous')\n      callbacks:\n        change: @pushChangesToPreview\n        select: @onSelectNode\n    el = @$el.find('#thang-type-treema')\n    @treema = @$el.find('#thang-type-treema').treema(options)\n    @treema.build()\n    @lastKind = data.kind\n\n  pushChangesToPreview: =>\n    return if @temporarilyIgnoringChanges\n    keysProcessed = {}\n    for key of @thangType.attributes\n      keysProcessed[key] = true\n      continue if key is 'components'\n      @thangType.set(key, @treema.data[key])\n    for key, value of @treema.data when not keysProcessed[key]\n      @thangType.set(key, value)\n\n    @updateSelectBox()\n    @refreshAnimation()\n    @updateDots()\n    @updatePortrait()\n    if (kind = @treema.data.kind) isnt @lastKind\n      @lastKind = kind\n      Backbone.Mediator.publish 'editor:thang-type-kind-changed', kind: kind\n      if kind in ['Doodad', 'Floor', 'Wall'] and not @treema.data.terrains\n        @treema.set '/terrains', ['Grass', 'Dungeon', 'Indoor', 'Desert', 'Mountain', 'Glacier', 'Volcano']  # So editors know to set them.\n      if not @treema.data.tasks\n        @treema.set '/tasks', (name: t for t in defaultTasks[kind])\n\n  onSelectNode: (e, selected) =>\n    selected = selected[0]\n    @topLayer.removeChild(@boundsBox) if @boundsBox\n    return @stopShowingSelectedNode() if not selected\n    path = selected.getPath()\n    parts = path.split('/')\n    return @stopShowingSelectedNode() unless parts.length >= 4 and _.string.startsWith path, '/raw/'\n    key = parts[3]\n    type = parts[2]\n    vectorParser = new SpriteBuilder(@thangType)\n    obj = vectorParser.buildMovieClip(key) if type is 'animations'\n    obj = vectorParser.buildContainerFromStore(key) if type is 'containers'\n    obj = vectorParser.buildShapeFromStore(key) if type is 'shapes'\n\n    bounds = obj?.bounds or obj?.nominalBounds\n    if bounds\n      @boundsBox = new createjs.Shape()\n      @boundsBox.graphics.beginFill('#aaaaaa').beginStroke('black').drawRect(bounds.x, bounds.y, bounds.width, bounds.height)\n      @topLayer.addChild(@boundsBox)\n      obj.regX = @boundsBox.regX = bounds.x + bounds.width / 2\n      obj.regY = @boundsBox.regY = bounds.y + bounds.height / 2\n\n    @showSprite(obj) if obj\n    @showingSelectedNode = true\n    @currentLank?.destroy()\n    @currentLank = null\n    @updateScale()\n    @grid.alpha = 0.0\n\n  stopShowingSelectedNode: ->\n    return unless @showingSelectedNode\n    @grid.alpha = 1.0\n    @showAnimation()\n    @showingSelectedNode = false\n\n  showVersionHistory: (e) ->\n    @openModalView new ThangTypeVersionsModal thangType: @thangType, @thangTypeID\n\n  onPopulateLevelI18N: ->\n    @thangType.populateI18N()\n    _.delay((-> document.location.reload()), 500)\n\n  openSaveModal: ->\n    modal = new SaveVersionModal model: @thangType\n    @openModalView modal\n    @listenToOnce modal, 'save-new-version', @saveNewThangType\n    @listenToOnce modal, 'hidden', -> @stopListening(modal)\n\n  startForking: (e) ->\n    @openModalView new ForkModal model: @thangType, editorPath: 'thang'\n\n  onPlayLevelSelect: (e) ->\n    if @childWindow and not @childWindow.closed\n      # We already have a child window open, so we don't need to ask for a level; we'll use its existing level.\n      e.stopImmediatePropagation()\n      @onPlayLevel e\n    _.defer -> $('.play-with-level-input').focus()\n\n  onPlayLevelKeyUp: (e) ->\n    return unless e.keyCode is 13  # return\n    input = @$el.find('.play-with-level-input')\n    input.parents('.dropdown').find('.play-with-level-parent').dropdown('toggle')\n    level = _.string.slugify input.val()\n    return unless level\n    @onPlayLevel null, level\n    recentlyPlayedLevels = storage.load('recently-played-levels') ? []\n    recentlyPlayedLevels.push level\n    storage.save 'recently-played-levels', recentlyPlayedLevels\n\n  onPlayLevel: (e, level=null) ->\n    level ?= $(e.target).data('level')\n    level = _.string.slugify level\n    if @childWindow and not @childWindow.closed\n      # Reset the LevelView's world, but leave the rest of the state alone\n      @childWindow.Backbone.Mediator.publish 'level:reload-thang-type', thangType: @thangType\n    else\n      # Create a new Window with a blank LevelView\n      scratchLevelID = level + '?dev=true'\n      if me.get('name') is 'Nick'\n        @childWindow = window.open(\"/play/level/#{scratchLevelID}\", 'child_window', 'width=2560,height=1080,left=0,top=-1600,location=1,menubar=1,scrollbars=1,status=0,titlebar=1,toolbar=1', true)\n      else\n        @childWindow = window.open(\"/play/level/#{scratchLevelID}\", 'child_window', 'width=1024,height=560,left=10,top=10,location=0,menubar=0,scrollbars=0,status=0,titlebar=0,toolbar=0', true)\n    @childWindow.focus()\n\n  # Canvas mouse drag handlers\n\n  onCanvasMouseMove: (e) ->\n    return unless p1 = @canvasDragStart\n    p2 = x: e.offsetX, y: e.offsetY\n    offset = x: p2.x - p1.x, y: p2.y - p1.y\n    @currentLank.sprite.x = @currentLankOffset.x + offset.x / @scale\n    @currentLank.sprite.y = @currentLankOffset.y + offset.y / @scale\n    @canvasDragOffset = offset\n\n  onCanvasMouseDown: (e) ->\n    return unless @currentLank\n    @canvasDragStart = x: e.offsetX, y: e.offsetY\n    @currentLankOffset ?= x: @currentLank.sprite.x, y: @currentLank.sprite.y\n\n  onCanvasMouseUp: (e) ->\n    @canvasDragStart = null\n    return unless @canvasDragOffset\n    return unless node = @treema.getLastSelectedTreema()\n    offset = node.get '/'\n    offset.x += Math.round @canvasDragOffset.x\n    offset.y += Math.round @canvasDragOffset.y\n    @canvasDragOffset = null\n    node.set '/', offset\n\n  onClickExportSpriteSheetButton: ->\n    modal = new ExportThangTypeModal({}, @thangType)\n    @openModalView(modal)\n\n  destroy: ->\n    @camera?.destroy()\n    super()\n\nimageToPortrait = (img) ->\n  canvas = document.createElement('canvas')\n  canvas.width = 100\n  canvas.height = 100\n  ctx = canvas.getContext('2d')\n  scaleX = 100 / img.width\n  scaleY = 100 / img.height\n  ctx.scale scaleX, scaleY\n  ctx.drawImage img, 0, 0\n  canvas.toDataURL('image/png')\n"]}