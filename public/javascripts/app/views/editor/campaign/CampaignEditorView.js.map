{"version":3,"sources":["app/templates/editor/campaign/campaign-editor-view.jade","app/views/editor/campaign/CampaignEditorView.coffee"],"names":[],"mappings":"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","file":"public/javascripts/app/views/editor/campaign/CampaignEditorView.js","sourcesContent":["var __templateData = function anonymous(locals\n/**/) {\nvar buf = [];\nvar locals_ = (locals || {}),view = locals_.view,me = locals_.me,anonymous = locals_.anonymous;if ( view.campaign.loading)\n{\nbuf.push(\"<nav role=\\\"navigation\\\" id=\\\"campaign-editor-top-nav\\\" class=\\\"navbar navbar-default\\\"><div class=\\\"container-fluid\\\"><ul class=\\\"nav navbar-nav\\\"><li><a href=\\\"/\\\"><span class=\\\"glyphicon-home glyphicon\\\"></span></a></li></ul></div></nav>\");\n}\nelse\n{\nbuf.push(\"<nav role=\\\"navigation\\\" id=\\\"campaign-editor-top-nav\\\" class=\\\"navbar navbar-default\\\"><ul class=\\\"nav navbar-nav\\\"><li><a href=\\\"/\\\"><span class=\\\"glyphicon-home glyphicon\\\"></span></a></li></ul><ul class=\\\"nav navbar-nav navbar-right\\\">\");\nif ( me.isAdmin())\n{\nbuf.push(\"<li id=\\\"analytics-button\\\"><a><span class=\\\"glyphicon-stats glyphicon\\\"></span></a></li>\");\n}\nif ( me.isAdmin())\n{\nbuf.push(\"<li id=\\\"save-button\\\"><a><span class=\\\"glyphicon-floppy-disk glyphicon\\\"></span></a></li>\");\n}\nbuf.push(\"<li class=\\\"dropdown\\\"><a data-toggle=\\\"dropdown\\\"><span class=\\\"glyphicon-chevron-down glyphicon\\\"></span></a><ul class=\\\"dropdown-menu\\\"><li data-i18n=\\\"common.actions\\\" class=\\\"dropdown-header\\\">Actions</li><li\" + (jade.attrs({ \"class\": [(anonymous ? \"disabled\": \"\")] }, {\"class\":true})) + \"><a data-toggle=\\\"coco-modal\\\" data-target=\\\"modal/RevertModal\\\" data-i18n=\\\"editor.revert\\\" id=\\\"revert-button\\\">Revert</a></li><li\" + (jade.attrs({ \"class\": [(anonymous ? \"disabled\": \"\")] }, {\"class\":true})) + \"><a data-i18n=\\\"editor.pop_i18n\\\" id=\\\"pop-level-i18n-button\\\">Populate i18n</a></li>\");\nif ( me.isAdmin())\n{\nbuf.push(\"<li id=\\\"patches-button\\\"><a><span class=\\\"spr glyphicon-wrench glyphicon\\\"></span><span data-i18n=\\\"resources.patches\\\">Patches</span></a></li>\");\n}\nbuf.push(\"<li class=\\\"divider\\\"></li><li data-i18n=\\\"common.info\\\" class=\\\"dropdown-header\\\">Info</li></ul></li></ul></nav>\");\n}\nbuf.push(\"<div class=\\\"outer-content\\\"><div id=\\\"left-column\\\"><div id=\\\"campaign-treema\\\"></div></div><div id=\\\"right-column\\\"><div id=\\\"campaign-view\\\"></div><div id=\\\"campaign-level-view\\\" class=\\\"hidden\\\"></div><div class=\\\"patches-view hidden\\\"></div></div></div>\");;return buf.join(\"\");\n};\nif (typeof define === 'function' && define.amd) {\n  define([], function() {\n    return __templateData;\n  });\n} else if (typeof module === 'object' && module && module.exports) {\n  module.exports = __templateData;\n} else {\n  __templateData;\n}","RootView = require 'views/core/RootView'\nCampaign = require 'models/Campaign'\nLevel = require 'models/Level'\nAchievement = require 'models/Achievement'\nThangType = require 'models/ThangType'\nCampaignView = require 'views/play/CampaignView'\nCocoCollection = require 'collections/CocoCollection'\ntreemaExt = require 'core/treema-ext'\nutils = require 'core/utils'\nRelatedAchievementsCollection = require 'collections/RelatedAchievementsCollection'\nCampaignAnalyticsModal = require './CampaignAnalyticsModal'\nCampaignLevelView = require './CampaignLevelView'\nSaveCampaignModal = require './SaveCampaignModal'\nPatchesView = require 'views/editor/PatchesView'\n\nrequire 'game-libraries'\n\nachievementProject = ['related', 'rewards', 'name', 'slug']\nthangTypeProject = ['name', 'original']\n\nmodule.exports = class CampaignEditorView extends RootView\n  id: \"campaign-editor-view\"\n  template: require 'templates/editor/campaign/campaign-editor-view'\n  className: 'editor'\n\n  events:\n    'click #analytics-button': 'onClickAnalyticsButton'\n    'click #save-button': 'onClickSaveButton'\n    'click #patches-button': 'onClickPatches'\n\n  subscriptions:\n    'editor:campaign-analytics-modal-closed' : 'onAnalyticsModalClosed'\n\n  constructor: (options, @campaignHandle) ->\n    super(options)\n    @campaign = new Campaign({_id:@campaignHandle})\n    @supermodel.loadModel(@campaign)\n    @listenToOnce @campaign, 'sync', (model, response, jqXHR) ->\n      @campaign.set '_id', response._id\n      @campaign.url = -> '/db/campaign/' + @id\n\n    # Save reference to data used by anlytics modal so it persists across modal open/closes.\n    @campaignAnalytics = {}\n\n    @levels = new CocoCollection([], {\n      model: Level\n      url: \"/db/campaign/#{@campaignHandle}/levels\"\n      project: Campaign.denormalizedLevelProperties\n    })\n    @supermodel.loadCollection(@levels, 'levels')\n\n    @achievements = new CocoCollection([], {\n      model: Achievement\n      url: \"/db/campaign/#{@campaignHandle}/achievements\"\n      project: achievementProject\n    })\n    @supermodel.loadCollection(@achievements, 'achievements')\n\n    @toSave = new Backbone.Collection()\n    @listenToOnce @campaign ,'sync', @loadThangTypeNames\n    @listenToOnce @campaign, 'sync', @onFundamentalLoaded\n    @listenToOnce @levels, 'sync', @onFundamentalLoaded\n    @listenToOnce @achievements, 'sync', @onFundamentalLoaded\n\n  onLeaveMessage: ->\n    for model in @toSave.models\n      diff = model.getDelta()\n      if _.size(diff)\n        console.log 'model, diff', model, diff\n        return 'You have changes!'\n\n  loadThangTypeNames: ->\n    # Load the names of the ThangTypes that this level's Treema nodes might want to display.\n    originals = []\n    for level in _.values(@campaign.get('levels'))\n      originals = originals.concat(_.values(level.requiredGear)) if level.requiredGear\n      originals = originals.concat(_.values(level.restrictedGear)) if level.restrictedGear\n    originals = _.uniq _.flatten originals\n    for original in originals\n      thangType = new ThangType()\n      thangType.setProjection(thangTypeProject)\n      thangType.setURL(\"/db/thang.type/#{original}/version\")\n      @supermodel.loadModel(thangType)\n\n  onFundamentalLoaded: ->\n    # Load any levels which haven't been denormalized into our campaign.\n    return unless @campaign.loaded and @levels.loaded and @achievements.loaded\n    @loadMissingLevelsAndRelatedModels()\n    \n  loadMissingLevelsAndRelatedModels: ->\n    promises = []\n    for level in _.values(@campaign.get('levels'))\n      continue if model = @levels.findWhere(original: level.original)\n      model = new Level({})\n      model.setProjection Campaign.denormalizedLevelProperties\n      model.setURL(\"/db/level/#{level.original}/version\")\n      levelResource = @supermodel.loadModel(model)\n      @levels.add levelResource.model\n      # Handle SuperModel's caching, and make sure loaded levels save and notice changes properly\n      if levelResource.jqxhr\n        levelResource.model.once('sync', ->\n          @setURL(\"/db/level/#{@id}\")\n          @markToRevert()\n        )\n        promises.push(levelResource.jqxhr)\n      achievements = new RelatedAchievementsCollection level.original\n      achievements.setProjection achievementProject\n      achievementsResource = @supermodel.loadCollection(achievements)\n      promises.push(achievementsResource.jqxhr)\n      @listenToOnce achievements, 'sync', (achievementsLoaded) ->\n        @achievements.add(achievementsLoaded.models)\n    return Promise.resolve($.when(promises...))\n\n  onLoaded: ->\n    @updateCampaignLevels()\n    @campaignView.render()\n    super()\n\n  updateCampaignLevels: ->\n    @toSave.add @campaign if @campaign.hasLocalChanges()\n    campaignLevels = $.extend({}, @campaign.get('levels'))\n    for level, levelIndex in @levels.models\n      levelOriginal = level.get('original')\n      campaignLevel = campaignLevels[levelOriginal]\n      continue if not campaignLevel\n      $.extend campaignLevel, _.pick(level.attributes, Campaign.denormalizedLevelProperties)\n      # TODO: better way for it to remember when we intend to not specifically require/restrict gear any more\n      delete campaignLevel.requiredGear if not level.attributes.requiredGear\n      delete campaignLevel.restrictedGear if not level.attributes.restrictedGear\n      campaignLevel.rewards = @formatRewards level\n      # Save campaign to level if it's a main 'hero' campaign so HeroVictoryModal knows where to return.\n      # (Not if it's a defaulted, typeless campaign like game-dev-hoc or auditions.)\n      campaignLevel.campaign = @campaign.get 'slug' if @campaign.get('type') is 'hero'\n      # Save campaign index to level if it's a course campaign, since we show linear level order numbers for course levels.\n      campaignLevel.campaignIndex = (@levels.models.length - levelIndex - 1) if @campaign.get('type', true) is 'course'\n      campaignLevels[levelOriginal] = campaignLevel\n\n    @campaign.set('levels', campaignLevels)\n\n    for level in _.values campaignLevels\n      continue if /test/.test @campaign.get('slug')  # Don't overwrite level stuff for testing Campaigns\n      model = @levels.findWhere {original: level.original}\n      # do not propagate campaignIndex for non-course campaigns\n      propsToPropagate = Campaign.denormalizedLevelProperties\n      if @campaign.get('type') isnt 'course'\n        propsToPropagate = _.without(propsToPropagate, 'campaignIndex')\n      for key in propsToPropagate\n        model.set key, level[key] if model.get(key) isnt level[key]\n      @toSave.add model if model.hasLocalChanges()\n\n  formatRewards: (level) ->\n    achievements = @achievements.where related: level.get('original')\n    rewards = []\n    for achievement in achievements\n      for rewardType, rewardArray of achievement.get('rewards')\n        for reward in rewardArray\n          rewardObject = { achievement: achievement.id }\n\n          if rewardType is 'heroes'\n            rewardObject.hero = reward\n            thangType = new ThangType({}, {project: thangTypeProject})\n            thangType.setURL(\"/db/thang.type/#{reward}/version\")\n            @supermodel.loadModel(thangType)\n\n          if rewardType is 'levels'\n            rewardObject.level = reward\n            if not @levels.findWhere({original: reward})\n              level = new Level({}, {project: Campaign.denormalizedLevelProperties})\n              level.setURL(\"/db/level/#{reward}/version\")\n              @supermodel.loadModel(level)\n\n          if rewardType is 'items'\n            rewardObject.item = reward\n            thangType = new ThangType({}, {project: thangTypeProject})\n            thangType.setURL(\"/db/thang.type/#{reward}/version\")\n            @supermodel.loadModel(thangType)\n\n          rewards.push rewardObject\n    rewards\n\n  propagateCampaignIndexes: ->\n    campaignLevels = $.extend({}, @campaign.get('levels'))\n    index = 0\n    for levelOriginal, campaignLevel of campaignLevels\n      if @campaign.get('type') is 'course'\n        level = @levels.findWhere({original: levelOriginal})\n        if level and level.get('campaignIndex') isnt index\n          level.set('campaignIndex', index)\n      campaignLevel.campaignIndex = index\n      index += 1\n      @campaign.set('levels', campaignLevels)\n\n  onClickPatches: (e) ->\n    @patchesView = @insertSubView(new PatchesView(@campaign), @$el.find('.patches-view'))\n    @patchesView.load()\n    @patchesView.$el.removeClass 'hidden'\n\n  onClickAnalyticsButton: ->\n    @openModalView new CampaignAnalyticsModal {}, @campaignHandle, @campaignAnalytics\n\n  onAnalyticsModalClosed: (options) ->\n    if options.targetLevelSlug? and @treema.childrenTreemas?.levels?.childrenTreemas?\n      for original, level of @treema.childrenTreemas.levels.childrenTreemas\n        if level.data?.slug is options.targetLevelSlug\n          @openCampaignLevelView @supermodel.getModelByOriginal Level, original\n          break\n\n  onClickSaveButton: (e) ->\n    return if @openingModal\n    @openingModal = true\n    @loadMissingLevelsAndRelatedModels().then(=>\n      @openingModal = false\n      @propagateCampaignIndexes()\n      @updateCampaignLevels()\n      @toSave.set @toSave.filter (m) -> m.hasLocalChanges()\n      @openModalView new SaveCampaignModal({}, @toSave)\n    )\n\n  afterRender: ->\n    super()\n    treemaOptions =\n      schema: Campaign.schema\n      data: $.extend({}, @campaign.attributes)\n      filePath: \"db/campaign/#{@campaign.get('_id')}\"\n      callbacks:\n        change: @onTreemaChanged\n        select: @onTreemaSelectionChanged\n        dblclick: @onTreemaDoubleClicked\n        achievementUpdated: @onAchievementUpdated\n      nodeClasses:\n        levels: LevelsNode\n        level: LevelNode\n        campaigns: CampaignsNode\n        campaign: CampaignNode\n        achievement: AchievementNode\n        rewards: RewardsNode\n      supermodel: @supermodel\n\n    @treema = @$el.find('#campaign-treema').treema treemaOptions\n    @treema.build()\n    @treema.open()\n    @treema.childrenTreemas.levels?.open()\n\n    @campaignView = new CampaignView({editorMode: true, supermodel: @supermodel}, @campaignHandle)\n    @campaignView.highlightElement = _.noop # make it stop\n    @listenTo @campaignView, 'level-moved', @onCampaignLevelMoved\n    @listenTo @campaignView, 'adjacent-campaign-moved', @onAdjacentCampaignMoved\n    @listenTo @campaignView, 'level-clicked', @onCampaignLevelClicked\n    @listenTo @campaignView, 'level-double-clicked', @onCampaignLevelDoubleClicked\n    @listenTo @campaign, 'change:i18n', =>\n      @campaign.updateI18NCoverage()\n      @treema.set('/i18n', @campaign.get('i18n'))\n      @treema.set('/i18nCoverage', @campaign.get('i18nCoverage'))\n\n    @insertSubView @campaignView\n\n  onTreemaChanged: (e, nodes) =>\n    unless /test/.test @campaign.get('slug')  # Don't overwrite level stuff for testing Campaigns\n      for node in nodes\n        path = node.getPath()\n        if _.string.startsWith path, '/levels/'\n          parts = path.split('/')\n          original = parts[2]\n          level = @supermodel.getModelByOriginal Level, original\n          campaignLevel = @treema.get \"/levels/#{original}\"\n          level.set key, campaignLevel[key] for key in Campaign.denormalizedLevelProperties\n          @toSave.add level if level.hasLocalChanges()\n\n    @toSave.add @campaign\n    @campaign.set key, value for key, value of @treema.data\n    @campaignView.setCampaign(@campaign)\n\n  onTreemaSelectionChanged: (e, node) =>\n    return unless node[0]?.data?.original?\n    elem = @$(\"div[data-level-original='#{node[0].data.original}']\")\n    elem.toggle('pulsate')\n    setTimeout ()->\n      elem.toggle('pulsate')\n    , 1000\n\n  onTreemaDoubleClicked: (e, node) =>\n    path = node.getPath()\n    return unless _.string.startsWith path, '/levels/'\n    original = path.split('/')[2]\n    @openCampaignLevelView @supermodel.getModelByOriginal Level, original\n\n  onAchievementUpdated: (e, node) =>\n    @supermodel.registerModel e.achievement\n    @achievements.findWhere({_id: e.achievement.id}).set('rewards', e.achievement.get('rewards'))\n    @updateCampaignLevels()  # TODO: only change the rewards for the one we had, don't wipe anything else\n    levelOriginal = node.getPath().split('/')[2]\n    level = @levels.findWhere original: levelOriginal\n    rewardsPath = \"/levels/#{levelOriginal}/rewards\"\n    @treema.set rewardsPath, @formatRewards level\n    @campaignView.setCampaign @campaign\n\n  onCampaignLevelMoved: (e) ->\n    path = \"levels/#{e.levelOriginal}/position\"\n    @treema.set path, e.position\n\n  onAdjacentCampaignMoved: (e) ->\n    path = \"adjacentCampaigns/#{e.campaignID}/position\"\n    @treema.set path, e.position\n\n  onCampaignLevelClicked: (levelOriginal) ->\n    return unless levelTreema = @treema.childrenTreemas?.levels?.childrenTreemas?[levelOriginal]\n    if key.ctrl or key.command\n      url = \"/editor/level/#{levelTreema.data.slug}\"\n      window.open url, '_blank'\n    levelTreema.select()\n    #levelTreema.open()\n\n  onCampaignLevelDoubleClicked: (levelOriginal) ->\n    @openCampaignLevelView @supermodel.getModelByOriginal Level, levelOriginal\n\n  openCampaignLevelView: (level) ->\n    @insertSubView campaignLevelView = new CampaignLevelView({}, level)\n    @listenToOnce campaignLevelView, 'hidden', => @$el.find('#campaign-view').show()\n    @$el.find('#campaign-view').hide()\n\n  onClickLoginButton: ->\n    # Do Nothing\n    # This is a override method to RootView, so that only CampaignView is listenting to login button click\n\n  onClickSignupButton: ->\n    # Do Nothing\n    # This is a override method to RootView, so that only CampaignView is listenting to signup button click\n\nclass LevelsNode extends TreemaObjectNode\n  valueClass: 'treema-levels'\n  @levels: {}\n  ordered: true\n\n  buildValueForDisplay: (valEl, data) ->\n    @buildValueForDisplaySimply valEl, ''+_.size(data)\n\n  childPropertiesAvailable: -> @childSource\n\n  childSource: (req, res) =>\n    s = new Backbone.Collection([], {model:Level})\n    s.url = '/db/level'\n    s.fetch({data: {term:req.term, project: Campaign.denormalizedLevelProperties.join(',')}})\n    s.once 'sync', (collection) =>\n      for level in collection.models\n        LevelsNode.levels[level.get('original')] = level\n        @settings.supermodel.registerModel level\n      mapped = ({label: r.get('name'), value: r.get('original')} for r in collection.models)\n\n      # Sort the results. Prioritize names that start with the search term, then contain the search term.\n      lowerPriority = _.clone(mapped)\n      lowerTerm = req.term.toLowerCase()\n      startsWithTerm = _.filter(lowerPriority, (item) -> _.string.startsWith(item.label.toLowerCase(), lowerTerm))\n      _.pull(lowerPriority, startsWithTerm...)\n      hasTerm = _.filter(lowerPriority, (item) -> _.string.contains(item.label.toLowerCase(), lowerTerm))\n      _.pull(lowerPriority, hasTerm...)\n      sorted = _.flatten([startsWithTerm, hasTerm, lowerPriority])\n      res(sorted)\n\nclass LevelNode extends TreemaObjectNode\n  valueClass: 'treema-level'\n  buildValueForDisplay: (valEl, data) ->\n    name = data.name\n    if data.requiresSubscription\n      name = \"[P] \" + name\n\n    status = ''\n    el = 'strong'\n    if data.adminOnly\n      status += \" (disabled)\"\n      el = 'span'\n    else if data.adventurer\n      status += \" (adventurer)\"\n\n    completion = ''\n\n    valEl.append $(\"<a href='/editor/level/#{_.string.slugify(data.name)}' class='spr'>(e)</a>\")\n    valEl.append $(\"<#{el}></#{el}>\").addClass('treema-shortened').text name\n    if status\n      valEl.append $('<em class=\"spl\"></em>').text status\n    if completion\n      valEl.append $('<span class=\"completion\"></span>').text completion\n\n  populateData: ->\n    return if @data.name?\n    data = _.pick LevelsNode.levels[@keyForParent].attributes, Campaign.denormalizedLevelProperties\n    _.extend @data, data\n\nclass CampaignsNode extends TreemaObjectNode\n  valueClass: 'treema-campaigns'\n  @campaigns: {}\n\n  buildValueForDisplay: (valEl, data) ->\n    @buildValueForDisplaySimply valEl, ''+_.size(data)\n\n  childPropertiesAvailable: -> @childSource\n\n  childSource: (req, res) =>\n    s = new Backbone.Collection([], {model:Campaign})\n    s.url = '/db/campaign'\n    s.fetch({data: {term:req.term, project: Campaign.denormalizedCampaignProperties}})\n    s.once 'sync', (collection) ->\n      CampaignsNode.campaigns[campaign.id] = campaign for campaign in collection.models\n      mapped = ({label: r.get('name'), value: r.id} for r in collection.models)\n      res(mapped)\n\n\nclass CampaignNode extends TreemaObjectNode\n  valueClass: 'treema-campaign'\n  buildValueForDisplay: (valEl, data) ->\n    @buildValueForDisplaySimply valEl, data.name\n\n  populateData: ->\n    return if @data.name?\n    # TODO: Need to be able to update i18n links to other campaigns\n    data = _.pick CampaignsNode.campaigns[@keyForParent].attributes, Campaign.denormalizedCampaignProperties\n    _.extend @data, data\n\nclass AchievementNode extends treemaExt.IDReferenceNode\n  buildSearchURL: (term) -> \"#{@url}?term=#{term}&project=#{achievementProject.join(',')}\"\n\n  buildValueForDisplay: (valEl, data) ->\n    super valEl, data\n    addAchievementEditorLink @, valEl, data\n\nclass RewardsNode extends TreemaArrayNode\n  buildValueForDisplay: (valEl, data) ->\n    super valEl, data\n    achievements = window.currentView.achievements.where related: @parent.data.original\n    achievements = _.sortBy achievements, (a) -> a.get('rewards')?.levels?.length ? 0\n    mainAchievement = achievements[0]\n    return unless mainAchievement\n    addAchievementEditorLink @, valEl, mainAchievement.id\n\naddAchievementEditorLink = (node, valEl, achievementId) ->\n  anchor = $('<a class=\"spl\">(e)</a>')\n  anchor.on 'click', (event) ->\n    childWindow = window.open(\"/editor/achievement/#{achievementId}\", achievementId, 'width=1040,height=900,left=1600,top=0,location=1,menubar=1,scrollbars=1,status=0,titlebar=1,toolbar=1', true)\n    childWindow.achievementSavedCallback = (event) ->\n      node.callbacks.achievementUpdated {achievement: event.achievement}, node\n    childWindow.focus()\n    event.stopPropagation()\n  valEl.find('.treema-shortened').append anchor\n"]}