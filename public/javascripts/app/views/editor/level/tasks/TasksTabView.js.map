{"version":3,"sources":["app/views/editor/level/tasks/TasksTabView.coffee"],"names":[],"mappings":"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","file":"public/javascripts/app/views/editor/level/tasks/TasksTabView.js","sourcesContent":["CocoView = require 'views/core/CocoView'\ntemplate = require 'templates/editor/level/tasks-tab'\nLevel = require 'models/Level'\n\nmodule.exports = class TasksTabView extends CocoView\n  id: 'editor-level-tasks-tab-view'\n  className: 'tab-pane'\n  template: template\n  events:\n    'click .task-row': 'onClickTaskRow'\n    'click .task-input': 'onClickTaskInput'\n    'click .start-edit': 'onClickStartEdit'\n    'click #create-task': 'onClickCreateTask'\n    'keydown #cur-edit': 'onKeyDownCurEdit'\n    'blur #cur-edit': 'onBlurCurEdit'\n\n  subscriptions:\n    'editor:level-loaded': 'onLevelLoaded'\n\n  applyTaskName: (_task, _input) ->\n    name = _input.value\n    potentialTask = @tasks.findWhere({'name':_input})\n    if potentialTask and potentialTask isnt _task\n      noty\n        timeout: 5000\n        text: 'Task with name already exists!'\n        type: 'error'\n        layout: 'topCenter'\n      _input.focus()\n    else if name is ''\n      @tasks.remove _task\n      @pushTasks()\n      @render()\n    else\n      _task.set 'name', name\n      _task.set 'curEdit', false\n      @pushTasks()\n      @render()\n\n  focusEditInput: ->\n    editInput = @$('#cur-edit')[0]\n    if editInput\n      editInput.focus()\n      len = editInput.value.length * 2\n      editInput.setSelectionRange len, len\n\n  getTaskByCID: (_cid) ->\n    return @tasks.get _cid\n\n  taskMap: ->\n    return @tasks?.map((_obj) -> return (name: _obj.get('name'), complete: (_obj.get('complete') || false)))\n\n  taskArray: ->\n    return @tasks?.toArray()\n\n  onLevelLoaded: (e) ->\n    @level = e.level\n    @defaultTasks = tasksForLevel @level\n    @level.set 'tasks', _.clone @defaultTasks\n    Task = Backbone.Model.extend({\n      initialize: ->\n        # We want to keep track of the revertAttributes easily without digging back into the level every time.\n        # So per TaskModel we check to see if there is a revertAttribute associated with the task's name.\n        # If there is a reversion available, we use it, otherwise (e.g. new tasks without a reversion) we just use the Task's current name/completion status.\n        if e?.level?._revertAttributes?.tasks?\n          if _.find(e.level._revertAttributes.tasks, {name:arguments[0].name})\n            @set 'revert', _.find(e.level._revertAttributes.tasks, {name:arguments[0].name})\n          else\n            @set 'revert', arguments[0]\n        else\n          @set 'revert', arguments[0]\n    })\n    TaskList = Backbone.Collection.extend({\n      model: Task\n    })\n    @tasks = new TaskList(@level.get 'tasks')\n    @pushTasks()\n    @render()\n\n  pushTasks: ->\n    @level.set 'tasks', @taskMap()\n\n  onClickTaskRow: (e) ->\n    if not $(e.target).is('input') and not $(e.target).is('a') and not $(e.target).hasClass('start-edit') and @$('#cur-edit').length is 0\n      task = @tasks.get $(e.target).closest('tr').data('task-cid')\n      checkbox = $(e.currentTarget).find('.task-input')[0]\n      if task.get 'complete'\n        task.set 'complete', false\n      else\n        task.set 'complete', true\n      checkbox.checked = task.get 'complete'\n      @pushTasks()\n\n  onClickTaskInput: (e) ->\n    task = @tasks.get $(e.target).closest('tr').data('task-cid')\n    task.set 'complete', e.currentTarget.checked\n    @pushTasks()\n\n  onClickStartEdit: (e) ->\n    if @$('#cur-edit').length is 0\n      task = @tasks.get $(e.target).closest('tr').data('task-cid')\n      task.set 'curEdit', true\n      @render()\n      @focusEditInput()\n\n  onKeyDownCurEdit: (e) ->\n    if e.keyCode is 13\n      editInput = @$('#cur-edit')[0]\n      editInput.blur()\n\n  onBlurCurEdit: (e) ->\n    editInput = @$('#cur-edit')[0]\n    task = @tasks.get $(e.target).closest('tr').data('task-cid')\n    @applyTaskName(task, editInput)\n\n  onClickCreateTask: (e) ->\n    if @$('#cur-edit').length is 0\n      @tasks.add\n        name: ''\n        complete: false\n        curEdit: true\n        revert:\n          name: 'null'\n          complete: false\n      @render()\n      @focusEditInput()\n\n  getTaskURL: (_n) ->\n    if _.find(@defaultTasks, {name:_n})?\n      return _.string.slugify(_n)\n    return null\n\n\nnotWebDev = ['hero', 'course', 'hero-ladder', 'course-ladder', 'game-dev']\nheroBased = ['hero', 'course', 'hero-ladder', 'course-ladder']\nladder = ['hero-ladder', 'course-ladder']\n\ndefaultTasks = [\n  {name: 'Set level type.', complete: (level) -> level.get('type')}\n  {name: 'Name the level.'}\n  {name: 'Create a Referee stub, if needed.', types: notWebDev}\n  {name: 'Replace \"Hero Placeholder\" with mcp.', types: ['game-dev']}\n  {name: 'Do basic set decoration.', types: notWebDev}\n  {name: 'Publish.', complete: (level) -> level.isPublished()}\n  {name: 'Choose the Existence System lifespan and frame rate.', types: notWebDev}\n  {name: 'Choose the UI System paths and coordinate hover if needed.', types: notWebDev}\n  {name: 'Choose the AI System pathfinding and Vision System line of sight.', types: notWebDev}\n  {name: 'Build the level.'}\n  {name: 'Set up goals.'}\n  {name: 'Add the \"win-game\" goal.', types: ['game-dev']}\n  {name: 'Write the sample code.', complete: (level) -> if level.isType('web-dev') then level.getSampleCode().html else level.getSampleCode().javascript and level.getSampleCode().python}\n  {name: 'Write the solution.', complete: (level) -> if level.isType('web-dev') then _.find(level.getSolutions(), language: 'html') else _.find(level.getSolutions(), language: 'javascript') and _.find(level.getSolutions(), language: 'python')}\n  {name: 'Make both teams playable and non-defaulted.', types: ladder}\n  {name: 'Set up goals for both teams.', types: ladder}\n  {name: 'Fill out the sample code for both Hero Placeholders.', types: ladder}\n  {name: 'Fill out default AI for both Hero Placeholders.', types: ladder}\n  {name: 'Make sure the level ends promptly on success and failure.'}\n  {name: 'Adjust script camera bounds.', types: notWebDev}\n  {name: 'Choose music file in Introduction script.', types: notWebDev}\n  {name: 'Choose autoplay in Introduction script.', types: heroBased}\n  {name: 'Write the description.'}\n  {name: 'Write the guide.'}\n  {name: 'Write intro guide.'}\n  {name: 'Write a loading tip, if needed.', complete: (level) -> level.get('loadingTip')}\n  {name: 'Add programming concepts covered.'}\n  {name: 'Set level kind.', complete: (level) -> level.get('kind')}\n  {name: 'Mark whether it requires a subscription.', complete: (level) -> level.get('requiresSubscription')?}\n  {name: 'Choose leaderboard score types.', types: ['hero', 'course'], complete: (level) -> level.get('scoreTypes')?}\n  {name: 'Do thorough set decoration.', types: notWebDev}\n  {name: 'Playtest with a slow/tough hero.', types: ['hero', 'hero-ladder']}\n  {name: 'Playtest with a fast/weak hero.', types: ['hero', 'hero-ladder']}\n  {name: 'Playtest with a couple random seeds.', types: heroBased}\n  {name: 'Remove/simplify unnecessary doodad collision.', types: notWebDev}\n  {name: 'Add to a campaign.'}\n  {name: 'Choose level options like required/restricted gear.', types: ['hero', 'hero-ladder']}\n  {name: 'Create achievements, including unlocking next level.'}\n  {name: 'Configure the hero\\'s expected equipment.', types: ['hero', 'course', 'course-ladder']}\n  {name: 'Configure the API docs.', types: ['web-dev', 'game-dev']}\n  {name: 'Write victory text.', complete: (level) -> level.get('victory')?.body}\n  {name: 'Write level hints.'}\n  {name: 'Set up solutions for the Verifier.'}\n  {name: 'Click the Populate i18n button.'}\n  {name: 'Add slug to ladder levels that should be simulated, if needed.', types: ladder}\n  {name: 'Write the advanced AIs (shaman, brawler, chieftain, etc).', types: ladder}\n  {name: 'Add achievements for defeating the advanced AIs.', types: ['hero-ladder']}\n  {name: 'Release to adventurers.'}\n  {name: 'Release to everyone.'}\n  {name: 'Create two sample projects.', types: ['game-dev', 'web-dev']}\n  {name: 'Write Lua sample code.', types: notWebDev, optional: true, complete: (level) -> level.getSampleCode().lua}\n  {name: 'Write Java sample code.', types: notWebDev, optional: true, complete: (level) -> level.getSampleCode().java}\n  {name: 'Write CoffeeScript sample code.', types: notWebDev, optional: true, complete: (level) -> level.getSampleCode().coffeescript}\n  {name: 'Write Lua solution.', types: notWebDev, optional: true, complete: (level) -> _.find(level.getSolutions(), language: 'lua')}\n  {name: 'Write Java solution.', types: notWebDev, optional: true, complete: (level) -> _.find(level.getSolutions(), language: 'java')}\n  {name: 'Write CoffeeScript solution.', types: notWebDev, optional: true, complete: (level) -> _.find(level.getSolutions(), language: 'coffeescript')}\n]\n\ndeprecatedTaskNames = [\n  'Add Io/Clojure/Lua/CoffeeScript.'\n  'Add Lua/CoffeeScript/Java.'\n  'Translate the sample code comments.'\n  'Add i18n field for the sample code comments.'\n  'Check completion/engagement/problem analytics.'\n  'Add a walkthrough video.'\n  'Do any custom scripting, if needed.'\n  'Write a really awesome description.'\n]\n\nrenamedTaskNames = {\n  'Release to adventurers.': 'Release to adventurers via MailChimp.'\n  'Release to everyone.': 'Release to everyone via MailChimp.'\n}\n\ntasksForLevel = (level) ->\n  tasks = []\n  inappropriateTasks = {}\n  for task in defaultTasks\n    if task.name is 'Create two sample projects' and level.get('shareable') isnt 'project'\n      inappropriateTasks[task.name] = task\n    else if task.types and ((level.get('realType') or level.get('type', true)) not in task.types)\n      inappropriateTasks[task.name] = task\n    else\n      tasks.push task\n  oldTasks = (level.get('tasks') ? []).slice()\n  newTasks = []\n  for task in tasks\n    oldName = renamedTaskNames[task.name] or task.name\n    if oldTask = (_.find(oldTasks, name: oldName) or _.find(oldTasks, name: task.name))\n      complete = oldTask.complete or Boolean task.complete?(level)\n      _.remove oldTasks, name: oldTask.name\n    else\n      complete = Boolean task.complete?(level)\n      continue if not complete and task.optional\n    newTasks.push name: task.name, complete: complete\n  for oldTask in oldTasks\n    unless oldTask.name in deprecatedTaskNames or inappropriateTasks[oldTask.name]\n      newTasks.push oldTask\n  newTasks\n"]}