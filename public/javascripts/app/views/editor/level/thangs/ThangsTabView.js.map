{"version":3,"sources":["app/views/editor/level/thangs/ThangsTabView.coffee"],"names":[],"mappings":"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","file":"public/javascripts/app/views/editor/level/thangs/ThangsTabView.js","sourcesContent":["CocoView = require 'views/core/CocoView'\nAddThangsView = require './AddThangsView'\nthangs_template = require 'templates/editor/level/thangs-tab-view'\nLevel = require 'models/Level'\nThangType = require 'models/ThangType'\nLevelComponent = require 'models/LevelComponent'\nCocoCollection = require 'collections/CocoCollection'\n{isObjectID} = require 'models/CocoModel'\nSurface = require 'lib/surface/Surface'\nThang = require 'lib/world/thang'\nLevelThangEditView = require './LevelThangEditView'\nLevelComponents = require 'collections/LevelComponents'\nrequire 'vendor/treema'\nGameUIState = require 'models/GameUIState'\n\n# Moving the screen while dragging thangs constants\nMOVE_MARGIN = 0.15\nMOVE_SPEED = 13\n\n# Let us place these on top of other Thangs\noverlappableThangTypeNames = ['Torch', 'Chains', 'Bird', 'Cloud 1', 'Cloud 2', 'Cloud 3', 'Waterfall', 'Obstacle', 'Electrowall', 'Spike Walls']\n\nclass ThangTypeSearchCollection extends CocoCollection\n  url: '/db/thang.type?project=original,name,version,slug,kind,components,prerenderedSpriteSheetData'\n  model: ThangType\n\nmodule.exports = class ThangsTabView extends CocoView\n  id: 'thangs-tab-view'\n  className: 'tab-pane active'\n  template: thangs_template\n\n  subscriptions:\n    'surface:mouse-moved': 'onSurfaceMouseMoved'\n    'surface:mouse-over': 'onSurfaceMouseOver'\n    'surface:mouse-out': 'onSurfaceMouseOut'\n    'editor:edit-level-thang': 'editThang'\n    'editor:level-thang-edited': 'onLevelThangEdited'\n    'editor:level-thang-done-editing': 'onLevelThangDoneEditing'\n    'editor:view-switched': 'onViewSwitched'\n    'sprite:dragged': 'onSpriteDragged'\n    'sprite:mouse-up': 'onSpriteMouseUp'\n    'sprite:double-clicked': 'onSpriteDoubleClicked'\n    'surface:stage-mouse-down': 'onStageMouseDown'\n    'surface:stage-mouse-up': 'onStageMouseUp'\n    'editor:random-terrain-generated': 'onRandomTerrainGenerated'\n\n  events:\n    'click #extant-thangs-filter button': 'onFilterExtantThangs'\n    'click #delete': 'onDeleteClicked'\n    'click #duplicate': 'onDuplicateClicked'\n    'click #thangs-container-toggle': 'toggleThangsContainer'\n    'click #thangs-palette-toggle': 'toggleThangsPalette'\n#    'click .add-thang-palette-icon': 'toggleThangsPalette'\n    'click #rotation-menu-item button': 'onClickRotationButton'\n\n  shortcuts:\n    'esc': 'selectAddThang'\n    'delete, del, backspace': 'deleteSelectedExtantThang'\n    'ctrl+z, ⌘+z': 'undo'\n    'ctrl+shift+z, ⌘+shift+z': 'redo'\n    'alt+c': 'toggleSelectedThangCollision'\n    'left': -> @moveSelectedThangBy -1, 0\n    'right': -> @moveSelectedThangBy 1, 0\n    'up': -> @moveSelectedThangBy 0, 1\n    'down': -> @moveSelectedThangBy 0, -1\n    'alt+left': -> @rotateSelectedThangTo Math.PI unless key.shift\n    'alt+right': -> @rotateSelectedThangTo 0 unless key.shift\n    'alt+up': -> @rotateSelectedThangTo -Math.PI / 2\n    'alt+down': -> @rotateSelectedThangTo Math.PI / 2\n    'alt+shift+left': -> @rotateSelectedThangBy Math.PI / 16\n    'alt+shift+right': -> @rotateSelectedThangBy -Math.PI / 16\n    'shift+left': -> @resizeSelectedThangBy -1, 0\n    'shift+right': -> @resizeSelectedThangBy 1, 0\n    'shift+up': -> @resizeSelectedThangBy 0, 1\n    'shift+down': -> @resizeSelectedThangBy 0, -1\n\n  constructor: (options) ->\n    super options\n    @world = options.world\n    @gameUIState = new GameUIState()\n    @listenTo(@gameUIState, 'sprite:mouse-down', @onSpriteMouseDown)\n    @listenTo(@gameUIState, 'surface:stage-mouse-move', @onStageMouseMove)\n    @listenTo(@gameUIState, 'change:selected', @onChangeSelected)\n\n    # should load depended-on Components, too\n    @thangTypes = @supermodel.loadCollection(new ThangTypeSearchCollection(), 'thangs').model\n    # just loading all Components for now: https://github.com/codecombat/codecombat/issues/405\n    @componentCollection = new LevelComponents([], {saveBackups: true})\n    @supermodel.trackRequest(@componentCollection.fetch())\n    @listenToOnce(@componentCollection, 'sync', ->\n      for component in @componentCollection.models\n        component.url = \"/db/level.component/#{component.get('original')}/version/#{component.get('version').major}\"\n        @supermodel.registerModel(component)\n    )\n    @level = options.level\n    @onThangsChanged = _.debounce(@onThangsChanged)\n\n    $(document).bind 'contextmenu', @preventDefaultContextMenu\n\n  getRenderData: (context={}) ->\n    context = super(context)\n    return context unless @supermodel.finished()\n    for thangType in @thangTypes.models\n      thangType.notInLevel = true\n    thangTypes = (thangType.attributes for thangType in @supermodel.getModels(ThangType))\n    thangTypes = _.uniq thangTypes, false, 'original'\n    thangTypes = _.reject thangTypes, (tt) -> tt.kind in ['Mark', undefined]\n    groupMap = {}\n    for thangType in thangTypes\n      groupMap[thangType.kind] ?= []\n      groupMap[thangType.kind].push thangType\n\n    groups = []\n    for groupName in Object.keys(groupMap).sort()\n      someThangTypes = groupMap[groupName]\n      someThangTypes = _.sortBy someThangTypes, 'name'\n      group =\n        name: groupName\n        thangs: someThangTypes\n      groups.push group\n\n    context.thangTypes = thangTypes\n    context.groups = groups\n    context\n\n  undo: (e) ->\n    if not @editThangView then @thangsTreema.undo() else @editThangView.undo()\n\n  redo: (e) ->\n    if not @editThangView then @thangsTreema.redo() else @editThangView.redo()\n\n  afterRender: ->\n    super()\n    return unless @supermodel.finished()\n    $('.tab-content').mousedown @selectAddThang\n    $('#thangs-list').bind 'mousewheel', @preventBodyScrollingInThangList\n    @$el.find('#extant-thangs-filter button:first').button('toggle')\n    $(window).on 'resize', @onWindowResize\n    @addThangsView = @insertSubView new AddThangsView world: @world\n    @buildInterface() # refactor to not have this trigger when this view re-renders?\n    if _.keys(@thangsTreema.data).length\n      @$el.find('#canvas-overlay').css('display', 'none')\n\n  onFilterExtantThangs: (e) ->\n    @$el.find('#extant-thangs-filter button.active').button('toggle')\n    button = $(e.target).closest('button')\n    button.button('toggle')\n    val = button.val()\n    @thangsTreema.$el.removeClass(@lastHideClass) if @lastHideClass\n    @thangsTreema.$el.addClass(@lastHideClass = \"hide-except-#{val}\") if val\n\n  preventBodyScrollingInThangList: (e) ->\n    @scrollTop += (if e.deltaY < 0 then 1 else -1) * 30\n    e.preventDefault()\n\n  buildInterface: (e) ->\n    @level = e.level if e\n\n    data = $.extend(true, [], @level.attributes.thangs ? [])\n    thangsObject = @groupThangs(data)\n\n    schema = {\n      type: 'object'\n      format: 'thangs-folder'\n      additionalProperties: {\n        anyOf: [\n          {\n            type: 'object'\n            format: 'thang'\n            required: ['thangType', 'id']\n          }\n          { $ref: '#' }\n        ]\n      }\n    }\n\n    treemaOptions =\n      schema: schema\n      data: thangsObject\n      skipValidation: true\n      supermodel: @supermodel\n      callbacks:\n        change: @onThangsChanged\n        select: @onTreemaThangSelected\n        dblclick: @onTreemaThangDoubleClicked\n      readOnly: true\n      nodeClasses:\n        thang: ThangNode\n        'thangs-folder': ThangsFolderNode\n      world: @world\n\n    @thangsTreema = @$el.find('#thangs-treema').treema treemaOptions\n    @thangsTreema.build()\n    @thangsTreema.open()\n    @openSmallerFolders(@thangsTreema)\n\n    @onThangsChanged()  # Initialize the World with Thangs\n    @initSurface()\n    thangsHeaderHeight = $('#thangs-header').height()\n    oldHeight = $('#thangs-list').height()\n    $('#thangs-list').height(oldHeight - thangsHeaderHeight)\n    if data?.length\n      @$el.find('.generate-terrain-button').hide()\n\n  openSmallerFolders: (folderTreema) ->\n    children = _.values folderTreema.childrenTreemas\n    for child in children\n      continue if child.data.thangType\n      if _.keys(child.data).length < 5\n        child.open()\n        @openSmallerFolders(child)\n\n  initSurface: ->\n    webGLCanvas = $('canvas#webgl-surface', @$el)\n    normalCanvas = $('canvas#normal-surface', @$el)\n    @surface = new Surface(@world, normalCanvas, webGLCanvas, {\n      paths: false\n      coords: true\n      grid: true\n      navigateToSelection: false\n      thangTypes: @supermodel.getModels(ThangType)\n      showInvisible: true\n      frameRate: 15\n      levelType: @level.get 'type', true\n      @gameUIState\n      handleEvents: false\n    })\n    @surface.playing = false\n    @surface.setWorld @world\n    @surface.lankBoss.suppressSelectionSounds = true\n    @centerCamera()\n\n  centerCamera: ->\n    [width, height] = @world.size()\n    width = Math.max width, 80\n    height = Math.max height, 68\n    {left, top, right, bottom} = @world.getBounds()\n    center = x: left + width / 2, y: bottom + height / 2\n    sup = @surface.camera.worldToSurface center\n    zoom = 0.94 * 92.4 / width  # Zoom 1.0 lets us see 92.4 meters.\n    @surface.camera.zoomTo(sup, zoom, 0)\n\n  destroy: ->\n    @selectAddThangType null\n    @surface?.destroy()\n    $(window).off 'resize', @onWindowResize\n    $(document).unbind 'contextmenu', @preventDefaultContextMenu\n    @thangsTreema?.destroy()\n    super()\n\n  onViewSwitched: (e) ->\n    @selectAddThang null, true\n    @surface?.lankBoss?.selectLank null, null\n\n  onStageMouseDown: (e) ->\n    # initial values for a mouse click lifecycle\n    @dragged = 0\n    @willUnselectSprite = false\n    @gameUIState.set('canDragCamera', true)\n\n    if @addThangLank?.thangType.get('kind') is 'Wall'\n      @paintingWalls = true\n      @gameUIState.set('canDragCamera', false)\n\n    else if @addThangLank\n      # We clicked on the background when we had an add Thang selected, so add it\n      @addThang @addThangType, @addThangLank.thang.pos\n\n    else if e.onBackground\n      @gameUIState.set('selected', [])\n\n  onStageMouseMove: (e) ->\n    @dragged += 1\n\n  onStageMouseUp: (e) ->\n    @paintingWalls = false\n    $('#contextmenu').hide()\n\n  onSpriteMouseDown: (e) ->\n    nativeEvent = e.originalEvent.nativeEvent\n    # update selection\n    selected = []\n    if nativeEvent.metaKey or nativeEvent.ctrlKey\n      selected = _.clone(@gameUIState.get('selected'))\n    if e.thang?.isSelectable\n      alreadySelected = _.find(selected, (s) -> s.thang is e.thang)\n      if alreadySelected\n        # move to end (make it the last selected) and maybe unselect it\n        @willUnselectSprite = true\n        selected = _.without(selected, alreadySelected)\n      selected.push({ thang: e.thang, sprite: e.sprite, spellName: e.spellName })\n    if _.any(selected) and key.alt\n      # Clone selected thang instead of selecting it\n      lastSelected = _.last(selected)\n      @selectAddThangType lastSelected.thang.spriteName, lastSelected.thang\n      selected = []\n    @gameUIState.set('selected', selected)\n    if _.any(selected)\n      @gameUIState.set('canDragCamera', false)\n\n  onSpriteDragged: (e) ->\n    selected = @gameUIState.get('selected')\n    return unless _.any(selected) and @dragged > 10\n    @willUnselectSprite = false\n    {stageX, stageY} = e.originalEvent\n\n    # move the one under the mouse\n    lastSelected = _.last(selected)\n    cap = @surface.camera.screenToCanvas x: stageX, y: stageY\n    wop = @surface.camera.canvasToWorld cap\n    wop.z = lastSelected.thang.depth / 2\n    posBefore = _.clone(lastSelected.thang.pos)\n    @adjustThangPos lastSelected.sprite, lastSelected.thang, wop\n    posAfter = lastSelected.thang.pos\n\n    # move any others selected, proportionally to how the 'main' sprite moved\n    xDiff = posAfter.x - posBefore.x\n    yDiff = posAfter.y - posBefore.y\n    if xDiff or yDiff\n      for singleSelected in selected.slice(0, selected.length - 1)\n        newPos = {\n          x: singleSelected.thang.pos.x + xDiff\n          y: singleSelected.thang.pos.y + yDiff\n        }\n        @adjustThangPos singleSelected.sprite, singleSelected.thang, newPos\n\n    # move the camera if we're on the edge of the screen\n    [w, h] = [@surface.camera.canvasWidth, @surface.camera.canvasHeight]\n    sidebarWidths = ((if @$el.find(id).hasClass('hide') then 0 else (@$el.find(id).outerWidth() / @surface.camera.canvasScaleFactorX)) for id in ['#all-thangs', '#add-thangs-view'])\n    w -= sidebarWidth for sidebarWidth in sidebarWidths\n    cap.x -= sidebarWidths[0]\n    @calculateMovement(cap.x / w, cap.y / h, w / h)\n\n  onSpriteMouseUp: (e) ->\n    selected = @gameUIState.get('selected')\n    if e.originalEvent.nativeEvent.button == 2 and _.any(selected)\n      @onSpriteContextMenu e\n    clearInterval(@movementInterval) if @movementInterval?\n    @movementInterval = null\n\n    return unless _.any(selected)\n\n    for singleSelected in selected\n      pos = singleSelected.thang.pos\n\n      thang = _.find(@level.get('thangs') ? [], {id: singleSelected.thang.id})\n      path = \"#{@pathForThang(thang)}/components/original=#{LevelComponent.PhysicalID}\"\n      physical = @thangsTreema.get path\n      continue if not physical or (physical.config.pos.x is pos.x and physical.config.pos.y is pos.y)\n      @thangsTreema.set path + '/config/pos', x: pos.x, y: pos.y, z: pos.z\n\n    if @willUnselectSprite\n      clickedSprite = _.find(selected, {sprite: e.sprite})\n      @gameUIState.set('selected', _.without(selected, clickedSprite))\n\n  onSpriteDoubleClicked: (e) ->\n    return if @dragged > 10\n    return unless e.thang\n    @editThang thangID: e.thang.id\n\n  onRandomTerrainGenerated: (e) ->\n    @thangsBatch = []\n    @hush = true\n    nonRandomThangs = (thang for thang in @flattenThangs(@thangsTreema.data) when not /Random/.test thang.id)\n    @thangsTreema.set '', @groupThangs(nonRandomThangs)\n\n    listening = {}\n    for thang in e.thangs\n      @selectAddThangType thang.id\n\n      # kind of a hack to get the walls to show up correctly when they load.\n      # might also fix other thangs who need to show up looking a certain way based on thang type components\n      unless @addThangType.isFullyLoaded() or listening[@addThangType.cid]\n        listening[@addThangType.cid] = true\n        @listenToOnce @addThangType, 'build-complete', @onThangsChanged\n\n      @addThang @addThangType, thang.pos, true\n    @hush = false\n    @onThangsChanged()\n    @selectAddThangType null\n\n  onChangeSelected: (gameUIState, selected) ->\n    previousSprite = gameUIState.previousAttributes()?.selected?.sprite\n    sprite = selected?.sprite\n    thang = selected?.thang\n\n    previousSprite?.setNameLabel?(null) unless previousSprite is sprite\n\n    if thang and not (@addThangLank and @addThangType.get('name') in overlappableThangTypeNames)\n      # We clicked on a Thang (or its Treema), so select the Thang\n      @selectAddThang(null, true)\n      @selectedExtantThangClickTime = new Date()\n      # Show the label above selected thang, notice that we may get here from thang-edit-view, so it will be selected but no label\n      sprite.setNameLabel(sprite.thangType.get('name') + ': ' + thang.id)\n      sprite.updateLabels()\n      sprite.updateMarks()\n\n  justAdded: -> @lastAddTime and (new Date() - @lastAddTime) < 150\n\n  selectAddThang: (e, forceDeselect=false) =>\n    return if e? and $(e.target).closest('#thang-search').length # Ignore if you're trying to search thangs\n    return unless (e? and $(e.target).closest('#thangs-tab-view').length) or key.isPressed('esc') or forceDeselect\n    if e then target = $(e.target) else target = @$el.find('.add-thangs-palette')  # pretend to click on background if no event\n    return true if target.attr('id') is 'webgl-surface'\n    target = target.closest('.add-thang-palette-icon')\n    wasSelected = target.hasClass 'selected'\n    @$el.find('.add-thangs-palette .add-thang-palette-icon.selected').removeClass('selected')\n    @selectAddThangType(if wasSelected then null else target.attr 'data-thang-type') unless key.alt or key.meta\n    @addThangLank?.playSound? 'selected'\n    target.addClass('selected') if @addThangType\n\n  moveAddThangSelection: (direction) ->\n    return unless @addThangType\n    icons = $('.add-thangs-palette .add-thang-palette-icon')\n    selectedIcon = icons.filter('.selected')\n    selectedIndex = icons.index selectedIcon\n    nextSelectedIndex = (selectedIndex + direction + icons.length) % icons.length\n    @selectAddThang {target: icons[nextSelectedIndex]}\n\n  selectAddThangType: (type, @cloneSourceThang) ->\n    if _.isString type\n      type = _.find @supermodel.getModels(ThangType), (m) -> m.get('name') is type\n    pos = @addThangLank?.thang.pos  # Maintain old sprite's pos if we have it\n    @surface.lankBoss.removeLank @addThangLank if @addThangLank\n    @addThangType = type\n    if @addThangType\n      @surface.lankBoss.reallyStopMoving = true\n      thang = @createAddThang()\n      @addThangLank = @surface.lankBoss.addThangToLanks thang, @surface.lankBoss.layerAdapters['Floating']\n      @addThangLank.notOfThisWorld = true\n      @addThangLank.sprite.alpha = 0.75\n      pos ?= x: Math.round(@world.width / 2), y: Math.round(@world.height / 2)\n      @adjustThangPos @addThangLank, thang, pos\n    else\n      @addThangLank = null\n      @surface?.lankBoss.reallyStopMoving = false\n\n  createEssentialComponents: (defaultComponents) ->\n    physicalConfig = {pos: {x: 10, y: 10, z: 1}}\n    if physicalOriginal = _.find(defaultComponents ? [], original: LevelComponent.PhysicalID)\n      physicalConfig.pos.z = physicalOriginal.config?.pos?.z ? 1  # Get the z right\n    [\n      {original: LevelComponent.ExistsID, majorVersion: 0, config: {}}\n      {original: LevelComponent.PhysicalID, majorVersion: 0, config: physicalConfig}\n    ]\n\n  createAddThang: ->\n    allComponents = (lc.attributes for lc in @supermodel.getModels LevelComponent)\n    rawComponents = @addThangType.get('components') ? []\n    rawComponents = @createEssentialComponents() unless rawComponents.length\n    mockThang = {components: rawComponents}\n    @level.sortThangComponents [mockThang], allComponents\n    components = []\n    for raw in mockThang.components\n      comp = _.find allComponents, {original: raw.original}\n      continue if comp.name in ['Selectable', 'Attackable']  # Don't draw health bars or intercept clicks\n      componentClass = @world.loadClassFromCode comp.js, comp.name, 'component'\n      components.push [componentClass, raw.config]\n    thang = new Thang @world, @addThangType.get('name'), 'Add Thang Phantom'\n    thang.addComponents components...\n    thang\n\n  adjustThangPos: (sprite, thang, pos) ->\n    if key.shift\n      # Meter resolution when holding shift, not caring about thang size.\n      pos.x = Math.round pos.x\n      pos.y = Math.round pos.y\n    else\n      snap = sprite?.data?.snap or sprite?.thangType?.get('snap') or x: 0.01, y: 0.01  # Centimeter resolution by default\n      pos.x = Math.round((pos.x - (thang.width ? 1) / 2) / snap.x) * snap.x + (thang.width ? 1) / 2\n      pos.y = Math.round((pos.y - (thang.height ? 1) / 2) / snap.y) * snap.y + (thang.height ? 1) / 2\n    pos.z = thang.depth / 2\n    thang.pos = pos\n    thang.stateChanged = true\n    @surface.lankBoss.update true  # Make sure Obstacle layer resets cache\n\n  onSurfaceMouseMoved: (e) ->\n    return unless @addThangLank\n    wop = @surface.camera.screenToWorld x: e.x, y: e.y\n    wop.z = 0.5\n    @adjustThangPos @addThangLank, @addThangLank.thang, wop\n    if @paintingWalls\n      unless _.find @surface.lankBoss.lankArray, ((lank) =>\n        lank.thangType.get('kind') is 'Wall' and\n        Math.abs(lank.thang.pos.x - @addThangLank.thang.pos.x) < 2 and\n        Math.abs(lank.thang.pos.y - @addThangLank.thang.pos.y) < 2 and\n        lank isnt @addThangLank\n      )\n        @addThang @addThangType, @addThangLank.thang.pos\n        @lastAddTime = new Date()\n        @paintedWalls = true\n    null\n\n  onSurfaceMouseOver: (e) ->\n    return unless @addThangLank\n    @addThangLank.sprite.visible = true\n\n  onSurfaceMouseOut: (e) ->\n    return unless @addThangLank\n    @addThangLank.sprite.visible = false\n\n  calculateMovement: (pctX, pctY, widthHeightRatio) ->\n    MOVE_TOP_MARGIN = 1.0 - MOVE_MARGIN\n    if MOVE_TOP_MARGIN > pctX > MOVE_MARGIN and MOVE_TOP_MARGIN > pctY > MOVE_MARGIN\n      clearInterval(@movementInterval) if @movementInterval?\n      @movementInterval = null\n      return @moveLatitude = @moveLongitude = @speed = 0\n\n    # calculating speed to be 0.0 to 1.0 within the movement buffer on the outer edge\n    diff = (MOVE_MARGIN * 2) # comments are assuming MOVE_MARGIN is 0.1\n    @speed = Math.max(Math.abs(pctX-0.5), Math.abs(pctY-0.5)) * 2 # pct is now 0.8 - 1.0\n    @speed -= 1.0 - diff # 0.0 - 0.2\n    @speed *= (1.0 / diff) # 0.0 - 1.0\n    @speed *= MOVE_SPEED\n\n    @moveLatitude = pctX * 2 - 1\n    @moveLongitude = pctY * 2 - 1\n    @moveLongitude /= widthHeightRatio if widthHeightRatio > 1.0\n    @moveLatitude *= widthHeightRatio if widthHeightRatio < 1.0\n    @movementInterval = setInterval(@moveSide, 16) unless @movementInterval?\n\n  moveSide: =>\n    return unless @speed\n    c = @surface.camera\n    p = {x: c.target.x + @moveLatitude * @speed / c.zoom, y: c.target.y + @moveLongitude * @speed / c.zoom}\n    c.zoomTo(p, c.zoom, 0)\n\n  deleteSelectedExtantThang: (e) =>\n    return if $(e.target).hasClass 'treema-node'\n    selected = @gameUIState.get('selected')\n    return unless _.any(selected)\n\n    for singleSelected in selected\n      thang = @getThangByID(singleSelected.thang.id)\n      @thangsTreema.delete(@pathForThang(thang))\n      @deleteEmptyTreema(thang)\n      Thang.resetThangIDs()  # TODO: find some way to do this when we delete from treema, too\n    @gameUIState.set('selected', [])\n\n  deleteEmptyTreema: (thang)->\n    thangType = @supermodel.getModelByOriginal ThangType, thang.thangType\n    children = @thangsTreema.childrenTreemas\n    thangKind = children[thangType.get('kind', true)].data\n    thangName = thangKind[thangType.get('name', true)]\n    if Object.keys(thangName).length == 0\n      folderPath = [thangType.get('kind', true), thangType.get('name', true)].join('/')\n      @thangsTreema.delete(folderPath)\n      if Object.keys(thangKind).length == 0\n        folderPath = [thangType.get('kind', true)].join('/')\n        @thangsTreema.delete(folderPath)\n\n  groupThangs: (thangs) ->\n    # array of thangs -> foldered thangs\n    grouped = {}\n    for thang, index in thangs\n      path = @folderForThang(thang)\n      obj = grouped\n      for key in path\n        obj[key] ?= {}\n        obj = obj[key]\n      obj[thang.id] = thang\n      thang.index = index\n    grouped\n\n  folderForThang: (thang) ->\n    thangType = @supermodel.getModelByOriginal ThangType, thang.thangType\n    console.error 'uhh, we had kind', thangType.get('kind', true), 'for', thangType unless thangType.get('kind', true)\n    [thangType.get('kind', true), thangType.get('name', true)]\n\n  pathForThang: (thang) ->\n    folder = @folderForThang(thang)\n    folder.push thang.id\n    folder.join('/')\n\n  flattenThangs: (thangs) ->\n    # foldered thangs -> array of thangs\n    flattened = []\n    for key, value of thangs\n      if value.id? and value.thangType\n        flattened.push value\n      else\n        flattened = flattened.concat @flattenThangs(value)\n    flattened\n\n  populateFoldersForThang: (thang) ->\n    thangFolder = @folderForThang(thang)\n    prefix = ''\n    for segment in thangFolder\n      if prefix then prefix += '/'\n      prefix += segment\n      if not @thangsTreema.get(prefix) then @thangsTreema.set(prefix, {})\n\n  onThangsChanged: (skipSerialization) =>\n    return if @hush\n\n    # keep the thangs in the same order as before, roughly\n    thangs = @flattenThangs(@thangsTreema.data)\n    thangs = $.extend true, [], thangs\n    thangs = _.sortBy thangs, 'index'\n    delete thang.index for thang in thangs\n\n    @level.set 'thangs', thangs\n    return if @editThangView\n    return if skipSerialization\n    serializedLevel = @level.serialize {@supermodel, session: null, otherSession: null, headless: false, sessionless: true, cached: true}\n    try\n      @world.loadFromLevel serializedLevel, false\n    catch error\n      console.error 'Catastrophic error loading the level:', error\n    thang.isSelectable = not thang.isLand for thang in @world.thangs  # let us select walls and such\n    @surface?.setWorld @world\n    @surface?.lankBoss.cachedObstacles = false\n    @selectAddThangType @addThangType, @cloneSourceThang if @addThangType  # make another addThang sprite, since the World just refreshed\n\n    # update selection, since the thangs have been remade\n    selected = @gameUIState.get('selected')\n    if _.any(selected)\n      for singleSelected in selected\n        sprite = @surface.lankBoss.lanks[singleSelected.thang.id]\n        if sprite\n          sprite.updateMarks()\n          singleSelected.sprite = sprite\n          singleSelected.thang = sprite.thang\n    Backbone.Mediator.publish 'editor:thangs-edited', thangs: @world.thangs\n\n  onTreemaThangSelected: (e, selectedTreemas) =>\n    selectedThangTreemas = _.filter(selectedTreemas, (t) -> t instanceof ThangNode)\n    thangIDs = (node.data.id for node in selectedThangTreemas)\n    lanks = (@surface.lankBoss.lanks[thangID] for thangID in thangIDs when thangID)\n    selected = ({ thang: lank.thang, sprite: lank } for lank in lanks when lank)\n    @gameUIState.set('selected', selected)\n\n  onTreemaThangDoubleClicked: (e, treema) =>\n    nativeEvent = e.originalEvent.nativeEvent\n    return if nativeEvent and (nativeEvent.ctrlKey or nativeEvent.metaKey)\n    id = treema?.data?.id\n    @editThang thangID: id if id\n\n  getThangByID: (id) -> _.find(@level.get('thangs') ? [], {id: id})\n\n  addThang: (thangType, pos, batchInsert=false) ->\n    @$el.find('.generate-terrain-button').hide()\n    if batchInsert\n      if thangType.get('name') is 'Hero Placeholder'\n        thangID = 'Hero Placeholder'\n        return if not @level.isType('hero', 'hero-ladder', 'hero-coop', 'course', 'course-ladder', 'game-dev', 'web-dev') or @getThangByID(thangID)\n      else\n        thangID = \"Random #{thangType.get('name')} #{@thangsBatch.length}\"\n    else\n      thangID = Thang.nextID(thangType.get('name'), @world) until thangID and not @getThangByID(thangID)\n    if @cloneSourceThang\n      components = _.cloneDeep @getThangByID(@cloneSourceThang.id).components\n    else if @level.isType('hero', 'hero-ladder', 'hero-coop', 'course', 'course-ladder', 'game-dev', 'web-dev')\n      components = []  # Load them all from default ThangType Components\n    else\n      components = _.cloneDeep thangType.get('components') ? []\n    components = @createEssentialComponents(thangType.get('components')) unless components.length\n    physical = _.find components, (c) -> c.config?.pos?\n    physical.config.pos = x: pos.x, y: pos.y, z: physical.config.pos.z if physical\n    thang = thangType: thangType.get('original'), id: thangID, components: components\n    if batchInsert\n      @thangsBatch.push thang\n    @populateFoldersForThang(thang)\n    @thangsTreema.set(@pathForThang(thang), thang)\n\n  editThang: (e) ->\n    if e.target  # click event\n      thangData = $(e.target).data 'thang-data'\n    else  # Mediator event\n      thangData = @getThangByID(e.thangID)\n    return unless thangData\n    @editThangView = new LevelThangEditView thangData: thangData, level: @level, world: @world, supermodel: @supermodel, oldPath: @pathForThang(thangData)  # supermodel needed for checkForMissingSystems\n    @insertSubView @editThangView\n    @$el.find('>').hide()\n    @editThangView.$el.show()\n    Backbone.Mediator.publish 'editor:view-switched', {}\n\n  onLevelThangDoneEditing: (e) ->\n    @removeSubView @editThangView\n    @editThangView = null\n    @updateEditedThang e.thangData, e.oldPath\n    @$el.find('>').show()\n\n  onLevelThangEdited: (e) ->\n    @updateEditedThang e.thangData, e.oldPath\n\n  updateEditedThang: (newThang, oldPath) ->\n    @hush = true\n    @thangsTreema.delete oldPath\n    @populateFoldersForThang(newThang)\n    @thangsTreema.set(@pathForThang(newThang), newThang)\n    @hush = false\n    @onThangsChanged()\n\n  preventDefaultContextMenu: (e) ->\n    return unless $(e.target).closest('#canvas-wrapper').length\n    e.preventDefault()\n\n  onSpriteContextMenu: (e) ->\n    {clientX, clientY} = e.originalEvent.nativeEvent\n    if @addThangType\n      $('#duplicate a').html $.i18n.t 'editor.stop_duplicate'\n    else\n      $('#duplicate a').html $.i18n.t 'editor.duplicate'\n    $('#contextmenu').css { position: 'fixed', left: clientX, top: clientY }\n    $('#contextmenu').show()\n\n  #- Context menu callbacks\n\n  onDeleteClicked: (e) ->\n    $('#contextmenu').hide()\n    @deleteSelectedExtantThang e\n\n  onDuplicateClicked: (e) ->\n    $('#contextmenu').hide()\n    selected = _.last(@gameUIState.get('selected'))\n    @selectAddThangType(selected.thang.spriteName, selected.thang)\n\n  onClickRotationButton: (e) ->\n    $('#contextmenu').hide()\n    rotation = parseFloat($(e.target).closest('button').data('rotation'))\n    @rotateSelectedThangTo rotation * Math.PI\n\n  modifySelectedThangComponentConfig: (thang, componentOriginal, modificationFunction) ->\n    return unless thang\n    @hush = true\n    thangData = @getThangByID thang.id\n    thangData = $.extend true, {}, thangData\n    component = _.find thangData.components, {original: componentOriginal}\n    unless component\n      component = original: componentOriginal, config: {}, majorVersion: 0\n      thangData.components.push component\n    modificationFunction component\n    @thangsTreema.set @pathForThang(thangData), thangData\n    @hush = false\n    @onThangsChanged true\n    thang.stateChanged = true\n    lank = @surface.lankBoss.lanks[thang.id]\n    lank.update true\n    lank.marks.debug?.destroy()\n    delete lank.marks.debug\n    lank.setDebug true\n\n  rotateSelectedThangTo: (radians) ->\n    for singleSelected in @gameUIState.get('selected')\n      selectedThang = singleSelected.thang\n      @modifySelectedThangComponentConfig selectedThang, LevelComponent.PhysicalID, (component) =>\n        component.config.rotation = radians\n        selectedThang.rotation = component.config.rotation\n\n  rotateSelectedThangBy: (radians) ->\n    for singleSelected in @gameUIState.get('selected')\n      selectedThang = singleSelected.thang\n      @modifySelectedThangComponentConfig selectedThang, LevelComponent.PhysicalID, (component) =>\n        component.config.rotation = ((component.config.rotation ? 0) + radians) % (2 * Math.PI)\n        selectedThang.rotation = component.config.rotation\n\n  moveSelectedThangBy: (xDir, yDir) ->\n    for singleSelected in @gameUIState.get('selected')\n      selectedThang = singleSelected.thang\n      @modifySelectedThangComponentConfig selectedThang, LevelComponent.PhysicalID, (component) =>\n        component.config.pos.x += 0.5 * xDir\n        component.config.pos.y += 0.5 * yDir\n        selectedThang.pos.x = component.config.pos.x\n        selectedThang.pos.y = component.config.pos.y\n\n  resizeSelectedThangBy: (xDir, yDir) ->\n    for singleSelected in @gameUIState.get('selected')\n      selectedThang = singleSelected.thang\n      @modifySelectedThangComponentConfig selectedThang, LevelComponent.PhysicalID, (component) =>\n        component.config.width = (component.config.width ? 4) + 0.5 * xDir\n        component.config.height = (component.config.height ? 4) + 0.5 * yDir\n        selectedThang.width = component.config.width\n        selectedThang.height = component.config.height\n\n  toggleSelectedThangCollision: ->\n    for singleSelected in @gameUIState.get('selected')\n      selectedThang = singleSelected.thang\n      @modifySelectedThangComponentConfig selectedThang, LevelComponent.CollidesID, (component) =>\n        component.config ?= {}\n        component.config.collisionCategory = if component.config.collisionCategory is 'none' then 'ground' else 'none'\n        selectedThang.collisionCategory = component.config.collisionCategory\n\n  toggleThangsContainer: (e) ->\n    $('#all-thangs').toggleClass('hide')\n\n  toggleThangsPalette: (e) ->\n    $('#add-thangs-view').toggleClass('hide')\n\nclass ThangsFolderNode extends TreemaNode.nodeMap.object\n  valueClass: 'treema-thangs-folder'\n  nodeDescription: 'Thang'\n  @nameToThangTypeMap: null\n\n  getTrackedActionDescription: (trackedAction) ->\n    trackedActionDescription = super(trackedAction)\n    if trackedActionDescription is 'Edit ' + @nodeDescription\n      path = trackedAction.path.split '/'\n      if path[path.length-1] is 'pos'\n        trackedActionDescription = 'Move Thang'\n    trackedActionDescription\n\n  buildValueForDisplay: (valEl, data) ->\n    el = $(\"<span><strong>#{@keyForParent}</strong> <span class='text-muted'>(#{@countThangs(data)})</span></span>\")\n\n    # Kind of like having the portraits on the individual thang rows, rather than the parent folder row\n    # but keeping this logic here in case we want to have it the other way.\n#    if thangType = @nameToThangType(@keyForParent)\n#      el.prepend($(\"<img class='img-circle' src='#{thangType.getPortraitURL()}' />\"))\n    valEl.append(el)\n\n  countThangs: (data) ->\n    return 0 if data.thangType and data.id?\n    num = 0\n    for key, value of data\n      if value.thangType and value.id?\n        num += 1\n      else\n        num += @countThangs(value)\n    num\n\n  nameToThangType: (name) ->\n    if not ThangsFolderNode.nameToThangTypeMap\n      thangTypes = @settings.supermodel.getModels(ThangType)\n      map = {}\n      map[thangType.get('name')] = thangType for thangType in thangTypes\n      ThangsFolderNode.nameToThangTypeMap = map\n    ThangsFolderNode.nameToThangTypeMap[name]\n\nclass ThangNode extends TreemaObjectNode\n  valueClass: 'treema-thang'\n  collection: false\n  @thangNameMap: {}\n  @thangKindMap: {}\n  buildValueForDisplay: (valEl, data) ->\n    pos = _.find(data.components, (c) -> c.config?.pos?)?.config.pos  # TODO: hack\n    s = data.id\n    if pos\n      s += \" (#{Math.round(pos.x)}, #{Math.round(pos.y)})\"\n    else\n      s += ' (non-physical)'\n    @buildValueForDisplaySimply valEl, s\n\n    thangType = @settings.supermodel.getModelByOriginal(ThangType, data.thangType)\n    if thangType\n      valEl.prepend($(\"<img class='img-circle' src='#{thangType.getPortraitURL()}' />\"))\n\n  onEnterPressed: ->\n    Backbone.Mediator.publish 'editor:edit-level-thang', thangID: @getData().id\n"]}