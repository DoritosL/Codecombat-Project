{"version":3,"sources":["app/views/editor/level/thangs/AddThangsView.coffee"],"names":[],"mappings":"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","file":"public/javascripts/app/views/editor/level/thangs/AddThangsView.js","sourcesContent":["CocoView = require 'views/core/CocoView'\nadd_thangs_template = require 'templates/editor/level/add-thangs-view'\nThangType = require 'models/ThangType'\nCocoCollection = require 'collections/CocoCollection'\n\nclass ThangTypeSearchCollection extends CocoCollection\n  url: '/db/thang.type?project=original,name,version,description,slug,kind,rasterIcon'\n  model: ThangType\n\n  addTerm: (term) ->\n    @url += \"&term=#{term}\" if term\n\nmodule.exports = class AddThangsView extends CocoView\n  id: 'add-thangs-view'\n  className: 'add-thangs-palette'\n  template: add_thangs_template\n\n  events:\n    'keyup input#thang-search': 'runSearch'\n\n  constructor: (options) ->\n    super options\n    @world = options.world\n\n    # should load depended-on Components, too\n    @thangTypes = @supermodel.loadCollection(new ThangTypeSearchCollection(), 'thangs').model\n\n  getRenderData: (context={}) ->\n    context = super(context)\n    if @searchModels\n      models = @searchModels\n    else\n      models = @supermodel.getModels(ThangType)\n\n    thangTypes = _.uniq models, false, (thangType) -> thangType.get('original')\n    thangTypes = _.reject thangTypes, (thangType) -> thangType.get('kind') in ['Mark', 'Item', undefined]\n    groupMap = {}\n    for thangType in thangTypes\n      kind = thangType.get('kind')\n      groupMap[kind] ?= []\n      groupMap[kind].push thangType\n\n    groups = []\n    for groupName in Object.keys(groupMap).sort()\n      someThangTypes = groupMap[groupName]\n      someThangTypes = _.sortBy someThangTypes, (thangType) -> thangType.get('name')\n      group =\n        name: groupName\n        thangs: someThangTypes\n      groups.push group\n\n    groups = _.sortBy groups, (group) ->\n      index = ['Wall', 'Floor', 'Unit', 'Doodad', 'Misc'].indexOf group.name\n      if index is -1 then 9001 else index\n\n    context.thangTypes = thangTypes\n    context.groups = groups\n    context\n\n  afterRender: ->\n    super()\n    @buildAddThangPopovers()\n\n  buildAddThangPopovers: ->\n    @$el.find('#thangs-list .add-thang-palette-icon').addClass('has-tooltip').tooltip(container: 'body', animation: false)\n\n  runSearch: (e) =>\n    if e?.which is 27\n      @onEscapePressed()\n    term = @$el.find('input#thang-search').val()\n    return unless term isnt @lastSearch\n\n    @searchModels = @thangTypes.filter (model) ->\n      return true unless term\n      regExp = new RegExp term, 'i'\n      return model.get('name').match regExp\n    @render()\n    @$el.find('input#thang-search').focus().val(term)\n    @lastSearch = term\n\n  onEscapePressed: ->\n    @$el.find('input#thang-search').val('')\n    @runSearch\n"]}