{"version":3,"sources":["app/views/editor/level/RelatedAchievementsView.coffee"],"names":[],"mappings":";AAAA;EAAA;;;AAAA,WAAW,QAAQ,qBAAR;;AACX,WAAW,QAAQ,6CAAR;;AACX,gCAAgC,QAAQ,2CAAR;;AAChC,cAAc,QAAQ,oBAAR;;AACd,sBAAsB,QAAQ,8BAAR;;AACtB,MAAM,QAAQ,kBAAR;;AAEN,MAAM,CAAC,OAAP,GAAuB;;;oCACrB,KAAI;;oCACJ,WAAU;;oCACV,YAAW;;oCAEX,SACE;IAAA,iCAAiC,oBAAjC;;;oCAEF,gBACE;IAAA,wBAAwB,gBAAxB;;;EAEW,iCAAC,OAAD;IACX,yDAAM,OAAN;IACA,IAAC,MAAD,GAAS,OAAO,CAAC;IACjB,IAAC,UAAD,GAAa,IAAC,MAAK,CAAC,GAAP,CAAW,UAAX;IACb,IAAC,aAAD,GAAoB,kCAA8B,IAAC,UAA/B;EAJT;;oCAMb,mBAAkB;IAChB,IAAU,IAAC,oBAAX;AAAA;;IACA,IAAC,WAAU,CAAC,cAAZ,CAA2B,IAAC,aAA5B,EAA0C,cAA1C;IACA,IAAC,oBAAD,GAAuB;WACvB,IAAC,OAAD;EAJgB;;oCAMlB,wBAAuB,SAAC,WAAD;;oCAKvB,qBAAoB;AAClB;IAAA,QAAY,wBAAoB;MAAA,OAAO,WAAP;MAAoB,YAAY,aAAhC;MAA+C,OAAO,IAAC,MAAvD;KAApB;IACZ,KAAK,CAAC,IAAN,CAAW,eAAX,EAA4B,IAAC,sBAA7B;WACA,IAAC,cAAD,CAAe,KAAf;EAHkB;;oCAKpB,iBAAgB,SAAC,CAAD;IAEd,IAAc,CAAC,CAAC,SAAF,KAAe,4BAA7B;AAAA;;WACA,IAAC,iBAAD;EAHc;;;;GAjCqC","file":"public/javascripts/app/views/editor/level/RelatedAchievementsView.js","sourcesContent":["CocoView = require 'views/core/CocoView'\ntemplate = require 'templates/editor/level/related-achievements'\nRelatedAchievementsCollection = require 'collections/RelatedAchievementsCollection'\nAchievement = require 'models/Achievement'\nNewAchievementModal = require './modals/NewAchievementModal'\napp = require 'core/application'\n\nmodule.exports = class RelatedAchievementsView extends CocoView\n  id: 'related-achievements-view'\n  template: template\n  className: 'tab-pane'\n\n  events:\n    'click #new-achievement-button': 'makeNewAchievement'\n\n  subscriptions:\n    'editor:view-switched': 'onViewSwitched'\n\n  constructor: (options) ->\n    super options\n    @level = options.level\n    @relatedID = @level.get('original')\n    @achievements = new RelatedAchievementsCollection @relatedID\n\n  loadAchievements: ->\n    return if @loadingAchievements\n    @supermodel.loadCollection @achievements, 'achievements'\n    @loadingAchievements = true\n    @render()\n\n  onNewAchievementSaved: (achievement) ->\n    # We actually open the new tab in NewAchievementModal, so we don't replace this window.\n    #url = '/editor/achievement/' + (achievement.get('slug') or achievement.id)\n    #app.router.navigate(, {trigger: true})  # Let's open a new tab instead.\n\n  makeNewAchievement: ->\n    modal = new NewAchievementModal model: Achievement, modelLabel: 'Achievement', level: @level\n    modal.once 'model-created', @onNewAchievementSaved\n    @openModalView modal\n\n  onViewSwitched: (e) ->\n    # Lazily load.\n    return unless e.targetURL is '#related-achievements-view'\n    @loadAchievements()\n"]}