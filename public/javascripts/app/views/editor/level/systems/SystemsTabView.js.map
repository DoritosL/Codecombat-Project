{"version":3,"sources":["app/views/editor/level/systems/SystemsTabView.coffee"],"names":[],"mappings":"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","file":"public/javascripts/app/views/editor/level/systems/SystemsTabView.js","sourcesContent":["CocoView = require 'views/core/CocoView'\ntemplate = require 'templates/editor/level/systems-tab-view'\nLevel = require 'models/Level'\nLevelSystem = require 'models/LevelSystem'\nLevelSystemEditView = require './LevelSystemEditView'\nNewLevelSystemModal = require './NewLevelSystemModal'\nAddLevelSystemModal = require './AddLevelSystemModal'\nnodes = require '../treema_nodes'\nrequire 'vendor/treema'\n\nmodule.exports = class SystemsTabView extends CocoView\n  id: 'systems-tab-view'\n  template: template\n  className: 'tab-pane'\n\n  subscriptions:\n    'editor:level-system-added': 'onLevelSystemAdded'\n    'editor:edit-level-system': 'editLevelSystem'\n    'editor:level-system-editing-ended': 'onLevelSystemEditingEnded'\n    'editor:level-loaded': 'onLevelLoaded'\n    'editor:terrain-changed': 'onTerrainChanged'\n\n  events:\n    'click #add-system-button': 'addLevelSystem'\n    'click #create-new-system-button': 'createNewLevelSystem'\n    'click #create-new-system': 'createNewLevelSystem'\n\n  constructor: (options) ->\n    super options\n    for system in @buildDefaultSystems()\n      url = \"/db/level.system/#{system.original}/version/#{system.majorVersion}\"\n      ls = new LevelSystem().setURL(url)\n      @supermodel.loadModel(ls)\n\n  afterRender: ->\n    @buildSystemsTreema()\n\n  onLoaded: ->\n    super()\n\n  onLevelLoaded: (e) ->\n    @level = e.level\n    @buildSystemsTreema()\n\n  buildSystemsTreema: ->\n    return unless @level and @supermodel.finished()\n    systems = $.extend(true, [], @level.get('systems') ? [])\n    unless systems.length\n      systems = @buildDefaultSystems()\n      insertedDefaults = true\n    systems = @getSortedByName systems\n    thangs = if @level? then @level.get('thangs') else []\n    thangIDs = _.filter(_.pluck(thangs, 'id'))\n    teams = _.filter(_.pluck(thangs, 'team'))\n    superteams = _.filter(_.pluck(thangs, 'superteam'))\n    superteams = _.union(teams, superteams)\n    treemaOptions =\n      supermodel: @supermodel\n      schema: Level.schema.properties.systems\n      data: systems\n      readOnly: me.get('anonymous')\n      world: @options.world\n      view: @\n      thangIDs: thangIDs\n      teams: teams\n      superteams: superteams\n      callbacks:\n        change: @onSystemsChanged\n        select: @onSystemSelected\n      nodeClasses:\n        'level-system': LevelSystemNode\n        'level-system-configuration': LevelSystemConfigurationNode\n        'point2d': nodes.WorldPointNode\n        'viewport': nodes.WorldViewportNode\n        'bounds': nodes.WorldBoundsNode\n        'radians': nodes.RadiansNode\n        'team': nodes.TeamNode\n        'superteam': nodes.SuperteamNode\n        'meters': nodes.MetersNode\n        'kilograms': nodes.KilogramsNode\n        'seconds': nodes.SecondsNode\n        'speed': nodes.SpeedNode\n        'acceleration': nodes.AccelerationNode\n        'thang-type': nodes.ThangTypeNode\n        'item-thang-type': nodes.ItemThangTypeNode\n\n    @systemsTreema = @$el.find('#systems-treema').treema treemaOptions\n    @systemsTreema.build()\n    @systemsTreema.open()\n    @onSystemsChanged() if insertedDefaults\n\n  onSystemsChanged: (e) =>\n    systems = @getSortedByName @systemsTreema.data\n    @level.set 'systems', systems\n\n  getSortedByName: (systems) =>\n    systemModels = @supermodel.getModels LevelSystem\n    systemModelMap = {}\n    systemModelMap[sys.get('original')] = sys.get('name') for sys in systemModels\n    _.sortBy systems, (sys) -> systemModelMap[sys.original]\n\n  onSystemSelected: (e, selected) =>\n    selected = if selected.length > 1 then selected[0].getLastSelectedTreema() else selected[0]\n    unless selected\n      @removeSubView @levelSystemEditView if @levelSystemEditView\n      @levelSystemEditView = null\n      return\n    until (data = selected.getData()) and data.original\n      selected = selected.parent\n    @editLevelSystem original: data.original, majorVersion: data.majorVersion\n\n  onLevelSystemAdded: (e) ->\n    @systemsTreema.insert '/', e.system\n\n  addLevelSystem: (e) ->\n    @openModalView new AddLevelSystemModal supermodel: @supermodel, extantSystems: _.cloneDeep @systemsTreema.data\n    Backbone.Mediator.publish 'editor:view-switched', {}\n\n  createNewLevelSystem: (e) ->\n    @openModalView new NewLevelSystemModal supermodel: @supermodel\n    Backbone.Mediator.publish 'editor:view-switched', {}\n\n  editLevelSystem: (e) ->\n    @levelSystemEditView = @insertSubView new LevelSystemEditView(original: e.original, majorVersion: e.majorVersion, supermodel: @supermodel)\n\n  onLevelSystemEditingEnded: (e) ->\n    @removeSubView @levelSystemEditView\n    @levelSystemEditView = null\n\n  onTerrainChanged: (e) ->\n    defaultPathfinding = e.terrain in ['Dungeon', 'Indoor', 'Mountain', 'Glacier', 'Volcano']\n    changed = false\n    if AI = @systemsTreema.get 'original=528110f30268d018e3000001'\n      unless AI.config?.findsPaths is defaultPathfinding\n        AI.config ?= {}\n        AI.config.findsPaths = defaultPathfinding\n        @systemsTreema.set 'original=528110f30268d018e3000001', AI\n        changed = true\n    if Vision = @systemsTreema.get 'original=528115040268d018e300001b'\n      unless Vision.config?.checksLineOfSight is defaultPathfinding\n        Vision.config ?= {}\n        Vision.config.checksLineOfSight = defaultPathfinding\n        @systemsTreema.set 'original=528115040268d018e300001b', Vision\n        changed = true\n    if changed\n      noty {\n        text: \"AI/Vision System defaulted pathfinding/line-of-sight to #{defaultPathfinding} for terrain #{e.terrain}.\"\n        layout: 'topCenter'\n        timeout: 5000\n        type: 'information'\n      }\n\n  buildDefaultSystems: ->\n    [\n      {original: '528112c00268d018e3000008', majorVersion: 0}  # Event\n      {original: '5280f83b8ae1581b66000001', majorVersion: 0}  # Existence\n      {original: '5281146f0268d018e3000014', majorVersion: 0}  # Programming\n      {original: '528110f30268d018e3000001', majorVersion: 0}  # AI\n      {original: '52810ffa33e01a6e86000012', majorVersion: 0}  # Action\n      {original: '528114b20268d018e3000017', majorVersion: 0}  # Targeting\n      {original: '528105f833e01a6e86000007', majorVersion: 0}  # Collision\n      {original: '528113240268d018e300000c', majorVersion: 0}  # Movement\n      {original: '528112530268d018e3000007', majorVersion: 0}  # Combat\n      {original: '52810f4933e01a6e8600000c', majorVersion: 0}  # Hearing\n      {original: '528115040268d018e300001b', majorVersion: 0}  # Vision\n      {original: '5280dc4d251616c907000001', majorVersion: 0}  # Inventory\n      {original: '528111b30268d018e3000004', majorVersion: 0}  # Alliance\n      {original: '528114e60268d018e300001a', majorVersion: 0}  # UI\n      {original: '528114040268d018e3000011', majorVersion: 0}  # Physics\n      {original: '52ae4f02a4dcd4415200000b', majorVersion: 0}  # Display\n      {original: '52e953e81b2028d102000004', majorVersion: 0}  # Effect\n      {original: '52f1354370fb890000000005', majorVersion: 0}  # Magic\n    ]\n\n  destroy: ->\n    @systemsTreema?.destroy()\n    super()\n\nclass LevelSystemNode extends TreemaObjectNode\n  valueClass: 'treema-level-system'\n  constructor: ->\n    super(arguments...)\n    @grabDBComponent()\n    @collection = @system?.attributes?.configSchema?.properties?\n\n  grabDBComponent: ->\n    data = @getData()\n    @system = @settings.supermodel.getModelByOriginalAndMajorVersion(LevelSystem, data.original, data.majorVersion)\n    console.error 'Couldn\\'t find system for', data.original, data.majorVersion, 'from models', @settings.supermodel.models unless @system\n\n  getChildSchema: (key) ->\n    return @system.attributes.configSchema if key is 'config'\n    return super(key)\n\n  buildValueForDisplay: (valEl, data) ->\n    return super valEl unless data.original and @system\n    name = @system.get 'name'\n    name += \" v#{@system.get('version').major}\" if @system.get('version').major\n    @buildValueForDisplaySimply valEl, name\n\n  onEnterPressed: (e) ->\n    super e\n    data = @getData()\n    Backbone.Mediator.publish 'editor:edit-level-system', original: data.original, majorVersion: data.majorVersion\n\n  open: (depth) ->\n    super depth\n    cTreema = @childrenTreemas.config\n    if cTreema? and (cTreema.getChildren().length or cTreema.canAddChild())\n      cTreema.open()\n# No easy way to flatten the config object, so for now just keep it longer than it needs to be\n\nclass LevelSystemConfigurationNode extends TreemaObjectNode\n  valueClass: 'treema-level-system-configuration'\n  buildValueForDisplay: -> return\n"]}