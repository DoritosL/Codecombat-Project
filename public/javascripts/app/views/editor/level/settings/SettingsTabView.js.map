{"version":3,"sources":["app/views/editor/level/settings/SettingsTabView.coffee"],"names":[],"mappings":"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","file":"public/javascripts/app/views/editor/level/settings/SettingsTabView.js","sourcesContent":["CocoView = require 'views/core/CocoView'\ntemplate = require 'templates/editor/level/settings_tab'\nLevel = require 'models/Level'\nThangType = require 'models/ThangType'\nSurface = require 'lib/surface/Surface'\nnodes = require './../treema_nodes'\n{me} = require 'core/auth'\nrequire 'vendor/treema'\nconcepts = require 'schemas/concepts'\n\nmodule.exports = class SettingsTabView extends CocoView\n  id: 'editor-level-settings-tab-view'\n  className: 'tab-pane'\n  template: template\n\n  # not thangs or scripts or the backend stuff\n  editableSettings: [\n    'name', 'description', 'documentation', 'nextLevel', 'victory', 'i18n', 'goals',\n    'type', 'kind', 'terrain', 'banner', 'loadingTip', 'requiresSubscription', 'adventurer', 'adminOnly',\n    'helpVideos', 'replayable', 'scoreTypes', 'concepts', 'primaryConcepts', 'picoCTFProblem', 'practice', 'practiceThresholdMinutes'\n    'primerLanguage', 'shareable', 'studentPlayInstructions', 'requiredCode', 'suspectCode',\n    'requiredGear', 'restrictedGear', 'requiredProperties', 'restrictedProperties', 'recommendedHealth', 'allowedHeroes'\n  ]\n\n  subscriptions:\n    'editor:level-loaded': 'onLevelLoaded'\n    'editor:thangs-edited': 'onThangsEdited'\n    'editor:random-terrain-generated': 'onRandomTerrainGenerated'\n\n  constructor: (options) ->\n    super options\n\n  onLoaded: ->\n  onLevelLoaded: (e) ->\n    @level = e.level\n    data = _.pick @level.attributes, (value, key) => key in @editableSettings\n    schema = _.cloneDeep Level.schema\n    schema.properties = _.pick schema.properties, (value, key) => key in @editableSettings\n    schema.required = _.intersection schema.required, @editableSettings\n    schema.default = _.pick schema.default, (value, key) => key in @editableSettings\n    @thangIDs = @getThangIDs()\n    treemaOptions =\n      filePath: \"db/level/#{@level.get('original')}\"\n      supermodel: @supermodel\n      schema: schema\n      data: data\n      readOnly: me.get('anonymous')\n      callbacks: {change: @onSettingsChanged}\n      thangIDs: @thangIDs\n      nodeClasses:\n        object: SettingsNode\n        thang: nodes.ThangNode\n        'solution-gear': SolutionGearNode\n        'solution-stats': SolutionStatsNode\n        concept: ConceptNode\n        'concepts-list': ConceptsListNode\n      solutions: @level.getSolutions()\n\n    @settingsTreema = @$el.find('#settings-treema').treema treemaOptions\n    @settingsTreema.build()\n    @settingsTreema.open()\n    @lastTerrain = data.terrain\n\n  getThangIDs: ->\n    (t.id for t in @level.get('thangs') ? [])\n\n  onSettingsChanged: (e) =>\n    $('.level-title').text @settingsTreema.data.name\n    for key in @editableSettings\n      @level.set key, @settingsTreema.data[key]\n    if (terrain = @settingsTreema.data.terrain) isnt @lastTerrain\n      @lastTerrain = terrain\n      Backbone.Mediator.publish 'editor:terrain-changed', terrain: terrain\n    for goal, index in @settingsTreema.data.goals ? []\n      continue if goal.id\n      goalIndex = index\n      goalID = \"goal-#{goalIndex}\"\n      goalID = \"goal-#{++goalIndex}\" while _.find @settingsTreema.get(\"goals\"), id: goalID\n      @settingsTreema.disableTracking()\n      @settingsTreema.set \"/goals/#{index}/id\", goalID\n      @settingsTreema.set \"/goals/#{index}/name\", _.string.humanize goalID\n      @settingsTreema.enableTracking()\n\n  onThangsEdited: (e) ->\n    # Update in-place so existing Treema nodes refer to the same array.\n    @thangIDs?.splice(0, @thangIDs.length, @getThangIDs()...)\n    @settingsTreema.solutions = @level.getSolutions()  # Remove if slow\n\n  onRandomTerrainGenerated: (e) ->\n    @settingsTreema.set '/terrain', e.terrain\n\n  destroy: ->\n    @settingsTreema?.destroy()\n    super()\n\n\nclass SettingsNode extends TreemaObjectNode\n  nodeDescription: 'Settings'\n\nclass SolutionGearNode extends TreemaArrayNode\n  select: ->\n    super()\n    return unless solution = _.find @getRoot().solutions, succeeds: true, language: 'javascript'\n    propertiesUsed = []\n    for match in (solution.source ? '').match /hero\\.([a-z][A-Za-z0-9]*)/g\n      prop = match.split('.')[1]\n      propertiesUsed.push prop unless prop in propertiesUsed\n    return unless propertiesUsed.length\n    if _.isEqual @data, propertiesUsed\n      @$el.find('.treema-description').html('Solution uses exactly these required properties.')\n      return\n    description = 'Solution used properties: ' + [\"<code>#{prop}</code>\" for prop in propertiesUsed].join(' ')\n    button = $('<button class=\"btn btn-sm\">Use</button>')\n    $(button).on 'click', =>\n      @set '', propertiesUsed\n      _.defer =>\n        @open()\n        @select()\n    @$el.find('.treema-description').html(description).append(button)\n\nclass SolutionStatsNode extends TreemaNode.nodeMap.number\n  select: ->\n    super()\n    return unless solution = _.find @getRoot().solutions, succeeds: true, language: 'javascript'\n    ThangType.calculateStatsForHeroConfig solution.heroConfig, (stats) =>\n      stats[key] = val.toFixed(2) for key, val of stats when parseInt(val) isnt val\n      description = \"Solution had stats: <code>#{JSON.stringify(stats)}</code>\"\n      button = $('<button class=\"btn btn-sm\">Use health</button>')\n      $(button).on 'click', =>\n        @set '', stats.health\n        _.defer =>\n          @open()\n          @select()\n      @$el.find('.treema-description').html(description).append(button)\n\nclass ConceptNode extends TreemaNode.nodeMap.string\n  buildValueForDisplay: (valEl, data) ->\n    super valEl, data\n    return unless data\n    return console.error \"Couldn't find concept #{@data}\" unless concept = _.find concepts, concept: @data\n    description = \"#{concept.name} -- #{concept.description}\"\n    description = description + \" (Deprecated)\" if concept.deprecated\n    description = \"AUTO | \" + description if concept.automatic\n    @$el.find('.treema-row').css('float', 'left')\n    @$el.addClass('concept-automatic') if concept.automatic\n    @$el.addClass('concept-deprecated') if concept.deprecated\n    @$el.find('.treema-description').remove()\n    @$el.append($(\"<span class='treema-description'>#{description}</span>\").show())\n\n  limitChoices: (options) ->\n    if @parent.keyForParent is 'concepts'\n      options = (o for o in options when _.find(concepts, (c) -> c.concept is o and not c.automatic and not c.deprecated))  # Allow manual, not automatic\n    else\n      options = (o for o in options when _.find(concepts, (c) -> c.concept is o and not c.deprecated))  # Allow both\n    super options\n\n  onClick: (e) ->\n    return if @$el.hasClass('concept-automatic')  # Don't allow editing of automatic concepts\n    super e\n\nclass ConceptsListNode extends TreemaNode.nodeMap.array\n  sort: true\n\n  sortFunction: (a, b) ->\n    aAutomatic = _.find concepts, (c) -> c.concept is a and c.automatic\n    bAutomatic = _.find concepts, (c) -> c.concept is b and c.automatic\n    return 1 if bAutomatic and not aAutomatic  # Auto before manual\n    return -1 if aAutomatic and not bAutomatic  # Auto before manual\n    return 0 if not aAutomatic and not bAutomatic  # No ordering within manual\n    super a, b  # Alpha within auto\n"]}