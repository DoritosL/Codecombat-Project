{"version":3,"sources":["app/views/editor/achievement/AchievementEditView.coffee"],"names":[],"mappings":"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","file":"public/javascripts/app/views/editor/achievement/AchievementEditView.js","sourcesContent":["RootView = require 'views/core/RootView'\ntemplate = require 'templates/editor/achievement/edit'\nAchievement = require 'models/Achievement'\nLevel = require 'models/Level'\nAchievementPopup = require 'views/core/AchievementPopup'\nConfirmModal = require 'views/core/ConfirmModal'\nPatchesView = require 'views/editor/PatchesView'\nerrors = require 'core/errors'\napp = require 'core/application'\nnodes = require 'views/editor/level/treema_nodes'\n\nrequire 'game-libraries'\n\nmodule.exports = class AchievementEditView extends RootView\n  id: 'editor-achievement-edit-view'\n  template: template\n\n  events:\n    'click #save-button': 'saveAchievement'\n    'click #recalculate-button': 'confirmRecalculation'\n    'click #recalculate-all-button': 'confirmAllRecalculation'\n    'click #delete-button': 'confirmDeletion'\n\n  constructor: (options, @achievementID) ->\n    super options\n    @achievement = new Achievement(_id: @achievementID)\n    @achievement.saveBackups = true\n    @supermodel.trackRequest @achievement.fetch()\n    \n    # load level names so they're available to treema nodes\n    @listenToOnce @achievement, 'sync', ->\n      for levelOriginal in @achievement.get('rewards')?.levels ? []\n        level = new Level()\n        @supermodel.trackRequest level.fetchLatestVersion(levelOriginal, {data: {project:'name,version,original'}})\n        level.once 'sync', (level) => @supermodel.registerModel(level)\n        \n    @pushChangesToPreview = _.throttle(@pushChangesToPreview, 500)\n\n  onLoaded: ->\n    super()\n    @buildTreema()\n    @listenTo @achievement, 'change', =>\n      @achievement.updateI18NCoverage()\n      @treema.set('/', @achievement.attributes)\n\n  buildTreema: ->\n    return if @treema? or (not @achievement.loaded)\n    data = $.extend(true, {}, @achievement.attributes)\n    options =\n      data: data\n      filePath: \"db/achievement/#{@achievement.get('_id')}\"\n      schema: Achievement.schema\n      readOnly: me.get('anonymous')\n      callbacks:\n        change: @pushChangesToPreview\n      nodeClasses:\n        'thang-type': nodes.ThangTypeNode\n        'item-thang-type': nodes.ItemThangTypeNode\n      supermodel: @supermodel\n    @treema = @$el.find('#achievement-treema').treema(options)\n    @treema.build()\n    @treema.childrenTreemas.rewards?.open(3)\n    @pushChangesToPreview()\n\n  afterRender: ->\n    super()\n    return unless @supermodel.finished()\n    @showReadOnly() if me.get('anonymous')\n    @pushChangesToPreview()\n    @patchesView = @insertSubView(new PatchesView(@achievement), @$el.find('.patches-view'))\n    @patchesView.load()\n\n  pushChangesToPreview: =>\n    return unless @treema\n    @$el.find('#achievement-view').empty()\n    for key, value of @treema.data\n      @achievement.set key, value\n    earned = get: (key) => {earnedPoints: @achievement.get('worth'), previouslyAchievedAmount: 0}[key]\n    popup = new AchievementPopup achievement: @achievement, earnedAchievement: earned, popup: false, container: $('#achievement-view')\n\n  openSaveModal: ->\n    'Maybe later' # TODO patch patch patch\n\n  saveAchievement: (e) ->\n    @treema.endExistingEdits()\n    for key, value of @treema.data\n      @achievement.set(key, value)\n\n    res = @achievement.save()\n\n    res.error (collection, response, options) =>\n      console.error response\n\n    res.success =>\n      if window.achievementSavedCallback\n        # CampaignEditor is using this as a child, so let it know that we have changed something (and don't reload)\n        window.achievementSavedCallback achievement: @achievement\n      else\n        url = \"/editor/achievement/#{@achievement.get('slug') or @achievement.id}\"\n        document.location.href = url\n\n  confirmRecalculation: (e, all=false) ->\n    renderData =\n      title: 'Are you really sure?'\n      body: \"This will trigger recalculation of #{if all then 'all achievements' else 'the achievement'} for all users. Are you really sure you want to go down this path?\"\n      decline: 'Not really'\n      confirm: 'Definitely'\n\n    confirmModal = new ConfirmModal renderData\n    confirmModal.on 'confirm', @recalculateAchievement\n    @recalculatingAll = all\n    @openModalView confirmModal\n\n  confirmAllRecalculation: (e) ->\n    @confirmRecalculation e, true\n\n  confirmDeletion: ->\n    renderData =\n      title: 'Are you really sure?'\n      body: 'This will completely delete the achievement, potentially breaking a lot of stuff you don\\'t want breaking. Are you entirely sure?'\n      decline: 'Not really'\n      confirm: 'Definitely'\n\n    confirmModal = new ConfirmModal renderData\n    confirmModal.on 'confirm', @deleteAchievement\n    @openModalView confirmModal\n\n  recalculateAchievement: =>\n    data = if @recalculatingAll then {} else {achievements: [@achievement.get('slug') or @achievement.get('_id')]}\n    $.ajax\n      data: JSON.stringify data\n      success: (data, status, jqXHR) ->\n        noty\n          timeout: 5000\n          text: 'Recalculation process started'\n          type: 'success'\n          layout: 'topCenter'\n      error: (jqXHR, status, error) ->\n        console.error jqXHR\n        noty\n          timeout: 5000\n          text: \"Starting recalculation process failed with error code #{jqXHR.status}\"\n          type: 'error'\n          layout: 'topCenter'\n      url: '/admin/earned.achievement/recalculate'\n      type: 'POST'\n      contentType: 'application/json'\n\n  deleteAchievement: =>\n    console.debug 'deleting'\n    $.ajax\n      type: 'DELETE'\n      success: ->\n        noty\n          timeout: 5000\n          text: 'Aaaand it\\'s gone.'\n          type: 'success'\n          layout: 'topCenter'\n        _.delay ->\n          app.router.navigate '/editor/achievement', trigger: true\n        , 500\n      error: (jqXHR, status, error) ->\n        console.error jqXHR\n        timeout: 5000\n        text: \"Deleting achievement failed with error code #{jqXHR.status}\"\n        type: 'error'\n        layout: 'topCenter'\n      url: \"/db/achievement/#{@achievement.id}\"\n"]}