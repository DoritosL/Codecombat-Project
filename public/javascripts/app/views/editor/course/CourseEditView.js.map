{"version":3,"sources":["app/views/editor/course/CourseEditView.coffee"],"names":[],"mappings":";AAAA;EAAA;;;AAAA,WAAW,QAAQ,qBAAR;;AACX,WAAW,QAAQ,8BAAR;;AACX,SAAS,QAAQ,eAAR;;AACT,eAAe,QAAQ,yBAAR;;AACf,cAAc,QAAQ,0BAAR;;AACd,SAAS,QAAQ,aAAR;;AACT,MAAM,QAAQ,kBAAR;;AAEN,QAAQ,gBAAR;;AAEA,MAAM,CAAC,OAAP,GAAuB;;;2BACrB,KAAI;;2BACJ,WAAU;;2BAEV,SACE;IAAA,sBAAsB,mBAAtB;;;EAEW,wBAAC,OAAD,EAAU,QAAV;IAAU,IAAC,YAAD;IACrB,gDAAM,OAAN;IACA,IAAC,OAAD,GAAc,WAAO;MAAA,KAAK,IAAC,SAAN;KAAP;IACd,IAAC,OAAM,CAAC,WAAR,GAAsB;IACtB,IAAC,WAAU,CAAC,SAAZ,CAAsB,IAAC,OAAvB;EAJW;;2BAMb,WAAU;IACR;IACA,IAAC,YAAD;WACA,IAAC,SAAD,CAAU,IAAC,OAAX,EAAmB,QAAnB,EAA6B;aAAA;QAC3B,KAAC,OAAM,CAAC,kBAAR;eACA,KAAC,OAAM,CAAC,GAAR,CAAY,GAAZ,EAAiB,KAAC,OAAM,CAAC,UAAzB;MAF2B;IAAA,QAA7B;EAHQ;;2BAOV,cAAa;AACX;IAAA,IAAU,yBAAY,CAAC,CAAI,IAAC,OAAM,CAAC,MAAb,CAAtB;AAAA;;IACA,OAAO,CAAC,CAAC,MAAF,CAAS,IAAT,EAAe,EAAf,EAAmB,IAAC,OAAM,CAAC,UAA3B;IACP,UACE;MAAA,MAAM,IAAN;MACA,UAAU,eAAY,CAAC,IAAC,OAAM,CAAC,GAAR,CAAY,KAAZ,CAAD,CADtB;MAEA,QAAQ,MAAM,CAAC,MAFf;MAGA,UAAU,EAAE,CAAC,GAAH,CAAO,WAAP,CAHV;MAIA,YAAY,IAAC,WAJb;;IAKF,IAAC,OAAD,GAAU,IAAC,IAAG,CAAC,IAAL,CAAU,gBAAV,CAA2B,CAAC,MAA5B,CAAmC,OAAnC;IACV,IAAC,OAAM,CAAC,KAAR;oEAC+B,CAAE,IAAjC,CAAsC,CAAtC;EAXW;;2BAab,cAAa;IACX;IACA,KAAc,IAAC,WAAU,CAAC,QAAZ,EAAd;AAAA;;IACA,IAAmB,EAAE,CAAC,GAAH,CAAO,WAAP,CAAnB;MAAA,IAAC,aAAD;;IACA,IAAC,YAAD,GAAe,IAAC,cAAD,CAAmB,gBAAY,IAAC,OAAb,CAAnB,EAAyC,IAAC,IAAG,CAAC,IAAL,CAAU,eAAV,CAAzC;WACf,IAAC,YAAW,CAAC,IAAb;EALW;;2BAOb,oBAAmB,SAAC,CAAD;AACjB;IAAA,IAAC,OAAM,CAAC,gBAAR;AACA;AAAA;;MACE,IAAC,OAAM,CAAC,GAAR,CAAY,GAAZ,EAAiB,KAAjB;AADF;IAEA,IAAC,OAAM,CAAC,kBAAR;IAEA,MAAM,IAAC,OAAM,CAAC,IAAR;IAEN,GAAG,CAAC,KAAJ,CAAU;aAAA,SAAC,UAAD,EAAa,QAAb,EAAuB,OAAvB;eACR,OAAO,CAAC,KAAR,CAAc,QAAd;MADQ;IAAA,QAAV;WAGA,GAAG,CAAC,OAAJ,CAAY;aAAA;AACV;QAAA,MAAM,oBAAiB,CAAC,KAAC,OAAM,CAAC,GAAR,CAAY,MAAZ,KAAuB,KAAC,OAAM,CAAC,EAAhC;eACvB,QAAQ,CAAC,QAAQ,CAAC,IAAlB,GAAyB;MAFf;IAAA,QAAZ;EAXiB;;;;GAxCyB","file":"public/javascripts/app/views/editor/course/CourseEditView.js","sourcesContent":["RootView = require 'views/core/RootView'\ntemplate = require 'templates/editor/course/edit'\nCourse = require 'models/Course'\nConfirmModal = require 'views/core/ConfirmModal'\nPatchesView = require 'views/editor/PatchesView'\nerrors = require 'core/errors'\napp = require 'core/application'\n\nrequire 'game-libraries'\n\nmodule.exports = class CourseEditView extends RootView\n  id: 'editor-course-edit-view'\n  template: template\n\n  events:\n    'click #save-button': 'onClickSaveButton'\n\n  constructor: (options, @courseID) ->\n    super options\n    @course = new Course(_id: @courseID)\n    @course.saveBackups = true\n    @supermodel.loadModel @course\n\n  onLoaded: ->\n    super()\n    @buildTreema()\n    @listenTo @course, 'change', =>\n      @course.updateI18NCoverage()\n      @treema.set('/', @course.attributes)\n\n  buildTreema: ->\n    return if @treema? or (not @course.loaded)\n    data = $.extend(true, {}, @course.attributes)\n    options =\n      data: data\n      filePath: \"db/course/#{@course.get('_id')}\"\n      schema: Course.schema\n      readOnly: me.get('anonymous')\n      supermodel: @supermodel\n    @treema = @$el.find('#course-treema').treema(options)\n    @treema.build()\n    @treema.childrenTreemas.rewards?.open(3)\n\n  afterRender: ->\n    super()\n    return unless @supermodel.finished()\n    @showReadOnly() if me.get('anonymous')\n    @patchesView = @insertSubView(new PatchesView(@course), @$el.find('.patches-view'))\n    @patchesView.load()\n\n  onClickSaveButton: (e) ->\n    @treema.endExistingEdits()\n    for key, value of @treema.data\n      @course.set(key, value)\n    @course.updateI18NCoverage()\n\n    res = @course.save()\n\n    res.error (collection, response, options) =>\n      console.error response\n\n    res.success =>\n      url = \"/editor/course/#{@course.get('slug') or @course.id}\"\n      document.location.href = url\n"]}