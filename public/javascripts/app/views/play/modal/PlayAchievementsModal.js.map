{"version":3,"sources":["app/templates/play/modal/play-achievements-modal.jade","app/views/play/modal/PlayAchievementsModal.coffee"],"names":[],"mappings":"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","file":"public/javascripts/app/views/play/modal/PlayAchievementsModal.js","sourcesContent":["var __templateData = function anonymous(locals\n/**/) {\nvar buf = [];\nvar locals_ = (locals || {}),view = locals_.view,moment = locals_.moment,rewards = locals_.rewards,worth = locals_.worth;buf.push(\"<div class=\\\"modal-dialog game\\\"><div class=\\\"background-wrapper\\\"><div class=\\\"modal-content\\\"><div class=\\\"modal-header\\\">\");\nif ( view.closeButton)\n{\nbuf.push(\"<div type=\\\"button\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\" class=\\\"button close\\\">&times;</div>\");\n}\nbuf.push(\"<h3 data-i18n=\\\"play.achievements\\\">Achievements</h3></div><div class=\\\"modal-body\\\">\");\n// iterate view.achievements.models\n;(function(){\n  var $$obj = view.achievements.models;\n  if ('number' == typeof $$obj.length) {\n\n    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {\n      var achievement = $$obj[$index];\n\nbuf.push(\"<div\" + (jade.attrs({ \"class\": [('panel'),(achievement.earned ? 'earned' : '')] }, {\"class\":true})) + \"><div class=\\\"panel-body\\\"><img\" + (jade.attrs({ 'src':(achievement.getImageURL()), 'draggable':(\"false\"), \"class\": [('icon')] }, {\"src\":true,\"draggable\":true})) + \"/><h3>\" + (jade.escape(null == (jade.interp = achievement.name + (achievement.earned && achievement.earned.get('achievedAmount') ? (' - ' + achievement.earned.get('achievedAmount') + 'x') : '')) ? \"\" : jade.interp)) + \"</h3><p>\" + (jade.escape(null == (jade.interp = achievement.description) ? \"\" : jade.interp)) + \"</p></div>\");\nif ( achievement.earnedDate)\n{\nbuf.push(\"<div class=\\\"created\\\">\" + (jade.escape(null == (jade.interp = moment(achievement.earnedDate).fromNow()) ? \"\" : jade.interp)) + \"</div>\");\n}\nelse\n{\nbuf.push(\"<div data-i18n=\\\"user.status_unfinished\\\" class=\\\"created\\\"></div>\");\n}\nbuf.push(\"<div class=\\\"rewards\\\">\");\nrewards = achievement.get('rewards');\nif ( rewards && rewards.gems)\n{\nbuf.push(\"<span class=\\\"gems label label-default\\\"><span>\" + (jade.escape(null == (jade.interp = achievement.earnedGems || rewards.gems) ? \"\" : jade.interp)) + \"</span><img src=\\\"/images/common/gem.png\\\" draggable=\\\"false\\\" class=\\\"gem\\\"/></span>\");\n}\nworth = achievement.get('worth');\nif ( worth)\n{\nbuf.push(\"<span class=\\\"worth label label-default\\\"><span>\" + (jade.escape((jade.interp = achievement.earnedPoints || worth) == null ? '' : jade.interp)) + \"xp</span></span>\");\n}\nbuf.push(\"<!-- maybe add more icons/numbers for items, heroes, levels, xp?--></div></div>\");\n    }\n\n  } else {\n    var $$l = 0;\n    for (var $index in $$obj) {\n      $$l++;      var achievement = $$obj[$index];\n\nbuf.push(\"<div\" + (jade.attrs({ \"class\": [('panel'),(achievement.earned ? 'earned' : '')] }, {\"class\":true})) + \"><div class=\\\"panel-body\\\"><img\" + (jade.attrs({ 'src':(achievement.getImageURL()), 'draggable':(\"false\"), \"class\": [('icon')] }, {\"src\":true,\"draggable\":true})) + \"/><h3>\" + (jade.escape(null == (jade.interp = achievement.name + (achievement.earned && achievement.earned.get('achievedAmount') ? (' - ' + achievement.earned.get('achievedAmount') + 'x') : '')) ? \"\" : jade.interp)) + \"</h3><p>\" + (jade.escape(null == (jade.interp = achievement.description) ? \"\" : jade.interp)) + \"</p></div>\");\nif ( achievement.earnedDate)\n{\nbuf.push(\"<div class=\\\"created\\\">\" + (jade.escape(null == (jade.interp = moment(achievement.earnedDate).fromNow()) ? \"\" : jade.interp)) + \"</div>\");\n}\nelse\n{\nbuf.push(\"<div data-i18n=\\\"user.status_unfinished\\\" class=\\\"created\\\"></div>\");\n}\nbuf.push(\"<div class=\\\"rewards\\\">\");\nrewards = achievement.get('rewards');\nif ( rewards && rewards.gems)\n{\nbuf.push(\"<span class=\\\"gems label label-default\\\"><span>\" + (jade.escape(null == (jade.interp = achievement.earnedGems || rewards.gems) ? \"\" : jade.interp)) + \"</span><img src=\\\"/images/common/gem.png\\\" draggable=\\\"false\\\" class=\\\"gem\\\"/></span>\");\n}\nworth = achievement.get('worth');\nif ( worth)\n{\nbuf.push(\"<span class=\\\"worth label label-default\\\"><span>\" + (jade.escape((jade.interp = achievement.earnedPoints || worth) == null ? '' : jade.interp)) + \"xp</span></span>\");\n}\nbuf.push(\"<!-- maybe add more icons/numbers for items, heroes, levels, xp?--></div></div>\");\n    }\n\n  }\n}).call(this);\n\nbuf.push(\"</div><div class=\\\"modal-body wait secret\\\"><h3>Reticulating Splines...</h3><div class=\\\"progress progress-striped active\\\"><div class=\\\"progress-bar\\\"></div></div></div></div></div></div>\");;return buf.join(\"\");\n};\nif (typeof define === 'function' && define.amd) {\n  define([], function() {\n    return __templateData;\n  });\n} else if (typeof module === 'object' && module && module.exports) {\n  module.exports = __templateData;\n} else {\n  __templateData;\n}","ModalView = require 'views/core/ModalView'\ntemplate = require 'templates/play/modal/play-achievements-modal'\nCocoCollection = require 'collections/CocoCollection'\nAchievement = require 'models/Achievement'\nEarnedAchievement = require 'models/EarnedAchievement'\n\nutils = require 'core/utils'\n\nPAGE_SIZE = 200\n\nmodule.exports = class PlayAchievementsModal extends ModalView\n  className: 'modal fade play-modal'\n  template: template\n  id: 'play-achievements-modal'\n  plain: true\n\n  earnedMap: {}\n\n  constructor: (options) ->\n    super options\n    @achievements = new Backbone.Collection()\n    earnedMap = {}\n\n    achievementsFetcher = new CocoCollection([], {url: '/db/achievement', model: Achievement})\n    achievementsFetcher.setProjection([\n      'name'\n      'description'\n      'icon'\n      'worth'\n      'i18n'\n      'rewards'\n      'collection'\n      'function'\n      'query'\n    ])\n\n    earnedAchievementsFetcher = new CocoCollection([], {url: '/db/earned_achievement', model: EarnedAchievement})\n    earnedAchievementsFetcher.setProjection ['achievement', 'achievedAmount']\n\n    achievementsFetcher.skip = 0\n    achievementsFetcher.fetch cache: false, data: {skip: 0, limit: PAGE_SIZE}\n    earnedAchievementsFetcher.skip = 0\n    earnedAchievementsFetcher.fetch cache: false, data: {skip: 0, limit: PAGE_SIZE}\n\n    @listenTo achievementsFetcher, 'sync', @onAchievementsLoaded\n    @listenTo earnedAchievementsFetcher, 'sync', @onEarnedAchievementsLoaded\n    @stopListening @supermodel, 'loaded-all'\n\n    @supermodel.loadCollection(achievementsFetcher, 'achievement')\n    @supermodel.loadCollection(earnedAchievementsFetcher, 'achievement')\n\n    @onEverythingLoaded = _.after(2, @onEverythingLoaded)\n\n  onAchievementsLoaded: (fetcher) ->\n    needMore = fetcher.models.length is PAGE_SIZE\n    @achievements.add(fetcher.models)\n    if needMore\n      fetcher.skip += PAGE_SIZE\n      fetcher.fetch cache: false, data: {skip: fetcher.skip, limit: PAGE_SIZE}\n    else\n      @stopListening(fetcher)\n      @onEverythingLoaded()\n\n  onEarnedAchievementsLoaded: (fetcher) ->\n    needMore = fetcher.models.length is PAGE_SIZE\n    for earned in fetcher.models\n      @earnedMap[earned.get('achievement')] = earned\n    if needMore\n      fetcher.skip += PAGE_SIZE\n      fetcher.fetch cache: false, data: {skip: fetcher.skip, limit: PAGE_SIZE}\n    else\n      @stopListening(fetcher)\n      @onEverythingLoaded()\n\n  onEverythingLoaded: =>\n    @achievements.set(@achievements.filter((m) -> m.get('collection') isnt 'level.sessions' or m.get('query')?.team))\n    achievementsByDescription = earned: {}, unearned: {}\n    for achievement in @achievements.models\n      if earned = @earnedMap[achievement.id]\n        achievement.earned = earned\n        achievement.earnedDate = earned.getCreationDate()\n        expFunction = achievement.getExpFunction()\n        achievement.earnedGems = Math.round (achievement.get('rewards')?.gems or 0) * expFunction earned.get('achievedAmount')\n        achievement.earnedPoints = Math.round (achievement.get('worth', true) or 0) * expFunction earned.get('achievedAmount')\n      achievement.earnedDate ?= ''\n    for achievement in @achievements.models\n      if achievement.earned\n        holder = achievementsByDescription.earned\n      else\n        holder = achievementsByDescription.unearned\n      nextInSet = holder[achievement.get('description')]\n      [a, b] = [achievement.get('worth', true), nextInSet?.get('worth', true) ? 0]\n      if achievement.earned\n        shouldKeep = not nextInSet or a > b\n      else\n        shouldKeep = not nextInSet or a < b\n      if shouldKeep\n        holder[achievement.get('description')] = achievement\n    @achievements.set _.values(achievementsByDescription.earned).concat(_.values(achievementsByDescription.unearned))\n    @achievements.comparator = (m) -> m.earnedDate\n    @achievements.sort()\n    @achievements.set(@achievements.models.reverse())\n    for achievement in @achievements.models\n      achievement.name = utils.i18n achievement.attributes, 'name'\n      achievement.description = utils.i18n achievement.attributes, 'description'\n    @render()\n\n  afterRender: ->\n    super()\n    return unless @supermodel.finished()\n    @playSound 'game-menu-open'\n\n  onHidden: ->\n    super()\n    @playSound 'game-menu-close'\n"]}