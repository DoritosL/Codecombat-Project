{"version":3,"sources":["app/views/play/common/LadderSubmissionView.coffee"],"names":[],"mappings":"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","file":"public/javascripts/app/views/play/common/LadderSubmissionView.js","sourcesContent":["CocoView = require 'views/core/CocoView'\ntemplate = require 'templates/play/common/ladder_submission'\n{createAetherOptions} = require 'lib/aether_utils'\nLevelSession = require 'models/LevelSession'\n\nmodule.exports = class LadderSubmissionView extends CocoView\n  className: 'ladder-submission-view'\n  template: template\n\n  events:\n    'click .rank-button': 'rankSession'\n    'click .help-simulate': 'onHelpSimulate'\n\n  constructor: (options) ->\n    super options\n    @session = options.session\n    @mirrorSession = options.mirrorSession\n    @level = options.level\n\n  getRenderData: ->\n    ctx = super()\n    ctx.readyToRank = @session?.readyToRank()\n    ctx.isRanking = @session?.get('isRanking')\n    ctx.simulateURL = \"/play/ladder/#{@level.get('slug')}#simulate\"\n    ctx.lastSubmitted = moment(submitDate).fromNow() if submitDate = @session?.get('submitDate')\n    ctx\n\n  afterRender: ->\n    super()\n    return unless @supermodel.finished()\n    @rankButton = @$el.find('.rank-button')\n    @updateButton()\n\n  updateButton: ->\n    rankingState = 'unavailable'\n    if @session?.readyToRank()\n      rankingState = 'rank'\n    else if @session?.get 'isRanking'\n      rankingState = 'ranking'\n    @setRankingButtonText rankingState\n\n  setRankingButtonText: (spanClass) ->\n    @rankButton.find('span').hide()\n    @rankButton.find(\".#{spanClass}\").show()\n    @rankButton.toggleClass 'disabled', spanClass isnt 'rank'\n    helpSimulate = spanClass in ['submitted', 'ranking']\n    @$el.find('.help-simulate').toggle(helpSimulate, 'slow')\n    showLastSubmitted = not (spanClass in ['submitting'])\n    @$el.find('.last-submitted').toggle(showLastSubmitted)\n\n  showApologeticSignupModal: ->\n    CreateAccountModal = require 'views/core/CreateAccountModal'\n    @openModalView(new CreateAccountModal({showRequiredError: true}))\n\n  rankSession: (e) ->\n    return unless @session.readyToRank()\n    return @showApologeticSignupModal() if me.get('anonymous')\n    @playSound 'menu-button-click'\n    @setRankingButtonText 'submitting'\n    success = =>\n      @setRankingButtonText 'submitted' unless @destroyed\n      Backbone.Mediator.publish 'ladder:game-submitted', session: @session, level: @level\n    failure = (jqxhr, textStatus, errorThrown) =>\n      console.log jqxhr.responseText\n      @setRankingButtonText 'failed' unless @destroyed\n    @session.save null, success: =>\n      ajaxData =\n        session: @session.id\n        levelID: @level.id\n        originalLevelID: @level.get('original')\n        levelMajorVersion: @level.get('version').major\n      ajaxOptions =\n        type: 'POST'\n        data: ajaxData\n        success: success\n        error: failure\n      if @mirrorSession and @mirrorSession.get('submittedCode')\n        # Also submit the mirrorSession after the main session submits successfully.\n        mirrorAjaxData = _.clone ajaxData\n        mirrorAjaxData.session = @mirrorSession.id\n        mirrorCode = @mirrorSession.get('code')\n        if @session.get('team') is 'humans'\n          mirrorCode['hero-placeholder-1'] = @session.get('code')['hero-placeholder']\n        else\n          mirrorCode['hero-placeholder'] = @session.get('code')['hero-placeholder-1']\n        mirrorAjaxOptions = _.clone ajaxOptions\n        mirrorAjaxOptions.data = mirrorAjaxData\n        ajaxOptions.success = =>\n          patch = code: mirrorCode, codeLanguage: @session.get('codeLanguage')\n          tempSession = new LevelSession _id: @mirrorSession.id\n          tempSession.save patch, patch: true, type: 'PUT', success: ->\n            $.ajax '/queue/scoring', mirrorAjaxOptions\n\n      $.ajax '/queue/scoring', ajaxOptions\n\n  onHelpSimulate: ->\n    @playSound 'menu-button-click'\n    $('a[href=\"#simulate\"]').tab('show')\n"]}