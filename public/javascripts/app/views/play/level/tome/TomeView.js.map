{"version":3,"sources":["app/views/play/level/tome/TomeView.coffee"],"names":[],"mappings":"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","file":"public/javascripts/app/views/play/level/tome/TomeView.js","sourcesContent":["# There's one TomeView per Level. It has:\n# - a CastButtonView, which has\n#   - a cast button\n#   - a submit/done button\n# - for each spell (programmableMethod) (which is now just always only 'plan')\n#   - a Spell, which has\n#     - a Thang that uses that Spell, with an aether and a castAether\n#     - a SpellView, which has\n#       - tons of stuff; the meat\n#     - a SpellTopBarView, which has some controls\n# - a SpellPaletteView, which has\n#   - for each programmableProperty:\n#     - a SpellPaletteEntryView\n#\n# The CastButtonView always shows.\n# The SpellPaletteView shows the entries for the currently selected Programmable Thang.\n# The SpellView shows the code and runtime state for the currently selected Spell and, specifically, Thang.\n# You can switch a SpellView to showing the runtime state of another Thang sharing that Spell.\n# SpellPaletteViews are destroyed and recreated whenever you switch Thangs.\n\nCocoView = require 'views/core/CocoView'\ntemplate = require 'templates/play/level/tome/tome'\n{me} = require 'core/auth'\nSpell = require './Spell'\nSpellPaletteView = require './SpellPaletteView'\nCastButtonView = require './CastButtonView'\nutils = require 'core/utils'\n\nmodule.exports = class TomeView extends CocoView\n  id: 'tome-view'\n  template: template\n  controlsEnabled: true\n  cache: false\n\n  subscriptions:\n    'tome:spell-loaded': 'onSpellLoaded'\n    'tome:cast-spell': 'onCastSpell'\n    'tome:change-language': 'updateLanguageForAllSpells'\n    'surface:sprite-selected': 'onSpriteSelected'\n    'god:new-world-created': 'onNewWorld'\n    'tome:comment-my-code': 'onCommentMyCode'\n    'tome:select-primary-sprite': 'onSelectPrimarySprite'\n\n  events:\n    'click': 'onClick'\n\n  constructor: (options) ->\n    super options\n    unless options.god\n      console.error \"TomeView created with no God!\"\n\n  afterRender: ->\n    super()\n    @worker = @createWorker()\n    programmableThangs = _.filter @options.thangs, (t) -> t.isProgrammable and t.programmableMethods\n    if @options.level.isType('web-dev')\n      if @fakeProgrammableThang = @createFakeProgrammableThang()\n        programmableThangs = [@fakeProgrammableThang]\n    @createSpells programmableThangs, programmableThangs[0]?.world  # Do before castButton\n    @castButton = @insertSubView new CastButtonView spells: @spells, level: @options.level, session: @options.session, god: @options.god\n    @teamSpellMap = @generateTeamSpellMap(@spells)\n    unless programmableThangs.length\n      @cast()\n      warning = 'Warning: There are no Programmable Thangs in this level, which makes it unplayable.'\n      noty text: warning, layout: 'topCenter', type: 'warning', killer: false, timeout: 15000, dismissQueue: true, maxVisible: 3\n      console.warn warning\n    delete @options.thangs\n\n  onNewWorld: (e) ->\n    programmableThangs = _.filter e.thangs, (t) -> t.isProgrammable and t.programmableMethods and t.inThangList\n    @createSpells programmableThangs, e.world\n\n  onCommentMyCode: (e) ->\n    for spellKey, spell of @spells when spell.canWrite()\n      console.log 'Commenting out', spellKey\n      commentedSource = spell.view.commentOutMyCode() + 'Commented out to stop infinite loop.\\n' + spell.getSource()\n      spell.view.updateACEText commentedSource\n      spell.view.recompile false\n    @cast()\n\n  createWorker: ->\n    return null unless Worker?\n    return null if window.application.isIPadApp  # Save memory!\n    return new Worker('/javascripts/workers/aether_worker.js')\n\n  generateTeamSpellMap: (spellObject) ->\n    teamSpellMap = {}\n    for spellName, spell of spellObject\n      teamName = spell.team\n      teamSpellMap[teamName] ?= []\n\n      spellNameElements = spellName.split '/'\n      thangName = spellNameElements[0]\n      spellName = spellNameElements[1]\n\n      teamSpellMap[teamName].push thangName if thangName not in teamSpellMap[teamName]\n\n    return teamSpellMap\n\n  createSpells: (programmableThangs, world) ->\n    language = @options.session.get('codeLanguage') ? me.get('aceConfig')?.language ? 'python'\n    pathPrefixComponents = ['play', 'level', @options.levelID, @options.session.id, 'code']\n    @spells ?= {}\n    @thangSpells ?= {}\n    for thang in programmableThangs\n      continue if @thangSpells[thang.id]?\n      @thangSpells[thang.id] = []\n      for methodName, method of thang.programmableMethods\n        pathComponents = [thang.id, methodName]\n        pathComponents[0] = _.string.slugify pathComponents[0]\n        spellKey = pathComponents.join '/'\n        @thangSpells[thang.id].push spellKey\n        skipProtectAPI = @getQueryVariable 'skip_protect_api', false\n        spell = @spells[spellKey] = new Spell\n          hintsState: @options.hintsState\n          programmableMethod: method\n          spellKey: spellKey\n          pathComponents: pathPrefixComponents.concat(pathComponents)\n          session: @options.session\n          otherSession: @options.otherSession\n          supermodel: @supermodel\n          skipProtectAPI: skipProtectAPI\n          worker: @worker\n          language: language\n          spectateView: @options.spectateView\n          spectateOpponentCodeLanguage: @options.spectateOpponentCodeLanguage\n          observing: @options.observing\n          levelID: @options.levelID\n          level: @options.level\n          god: @options.god\n          courseID: @options.courseID\n\n    for thangID, spellKeys of @thangSpells\n      thang = @fakeProgrammableThang ? world.getThangByID thangID\n      if thang\n        @spells[spellKey].addThang thang for spellKey in spellKeys\n      else\n        delete @thangSpells[thangID]\n        spell.removeThangID thangID for spell in @spells\n    for spellKey, spell of @spells when not spell.canRead()  # Make sure these get transpiled (they have no views).\n      spell.transpile()\n      spell.loaded = true\n    null\n\n  onSpellLoaded: (e) ->\n    console.log 'onSpellLoaded', e if me.get('name') is 'Shanakin'\n    for spellID, spell of @spells\n      return unless spell.loaded\n    console.log '... all loaded, let us begin' if me.get('name') is 'Shanakin'\n    justBegin = @options.level.isType('game-dev')\n    @cast false, false, justBegin\n\n  onCastSpell: (e) ->\n    # A single spell is cast.\n    @cast e?.preload, e?.realTime, e?.justBegin\n\n  cast: (preload=false, realTime=false, justBegin=false) ->\n    return if @options.level.isType('web-dev')\n    sessionState = @options.session.get('state') ? {}\n    if realTime\n      sessionState.submissionCount = (sessionState.submissionCount ? 0) + 1\n      sessionState.flagHistory = _.filter sessionState.flagHistory ? [], (event) => event.team isnt (@options.session.get('team') ? 'humans')\n      sessionState.lastUnsuccessfulSubmissionTime = new Date() if @options.level.get 'replayable'\n      @options.session.set 'state', sessionState\n    difficulty = sessionState.difficulty ? 0\n    if @options.observing\n      difficulty = Math.max 0, difficulty - 1  # Show the difficulty they won, not the next one.\n    Backbone.Mediator.publish 'level:set-playing', {playing: false}\n    Backbone.Mediator.publish 'tome:cast-spells', {\n      @spells,\n      preload,\n      realTime,\n      justBegin,\n      difficulty,\n      submissionCount: sessionState.submissionCount ? 0,\n      flagHistory: sessionState.flagHistory ? [],\n      god: @options.god,\n      fixedSeed: @options.fixedSeed\n    }\n\n  onClick: (e) ->\n    Backbone.Mediator.publish 'tome:focus-editor', {} unless $(e.target).parents('.popover').length\n\n  onSpriteSelected: (e) ->\n    return if @spellView and @options.level.get('type', true) in ['hero', 'hero-ladder', 'hero-coop', 'course', 'course-ladder', 'game-dev', 'web-dev']  # Never deselect the hero in the Tome.\n    spell = @spellFor e.thang, e.spellName\n    if spell?.canRead()\n      @setSpellView spell, e.thang\n\n  setSpellView: (spell, thang) ->\n    unless spell.view is @spellView\n      @spellView = spell.view\n      @spellTopBarView = spell.topBarView\n      @$el.find('#' + @spellView.id).after(@spellView.el).remove()\n      @$el.find('#' + @spellTopBarView.id).after(@spellTopBarView.el).remove()\n      @castButton?.attachTo @spellView\n    @updateSpellPalette thang, spell\n    @spellView?.setThang thang\n\n  updateSpellPalette: (thang, spell) ->\n    @options.playLevelView.updateSpellPalette thang, spell\n\n  spellFor: (thang, spellName) ->\n    return null unless thang?.isProgrammable\n    return unless @thangSpells[thang.id]  # Probably in streaming mode, where we don't update until it's done.\n    selectedThangSpells = (@spells[spellKey] for spellKey in @thangSpells[thang.id])\n    if spellName\n      spell = _.find selectedThangSpells, {name: spellName}\n    else\n      spell = _.find selectedThangSpells, (spell) -> spell.canWrite()\n      spell ?= _.find selectedThangSpells, (spell) -> spell.canRead()\n    spell\n\n  reloadAllCode: ->\n    if utils.getQueryVariable 'dev'\n      @options.playLevelView.spellPaletteView.destroy()\n      @updateSpellPalette @spellView.thang, @spellView.spell\n    spell.view.reloadCode false for spellKey, spell of @spells when spell.view and (spell.team is me.team or (spell.team in ['common', 'neutral', null]))\n    @cast false, false\n\n  updateLanguageForAllSpells: (e) ->\n    spell.updateLanguageAether e.language for spellKey, spell of @spells when spell.canWrite()\n    if e.reload\n      @reloadAllCode()\n    else\n      @cast()\n\n  onSelectPrimarySprite: (e) ->\n    if @options.level.isType('web-dev')\n      @setSpellView @spells['hero-placeholder/plan'], @fakeProgrammableThang\n      return\n    # This is fired by PlayLevelView\n    if @options.session.get('team') is 'ogres'\n      Backbone.Mediator.publish 'level:select-sprite', thangID: 'Hero Placeholder 1'\n    else\n      Backbone.Mediator.publish 'level:select-sprite', thangID: 'Hero Placeholder'\n\n  createFakeProgrammableThang: ->\n    return null unless hero = _.find @options.level.get('thangs'), id: 'Hero Placeholder'\n    return null unless programmableConfig = _.find(hero.components, (component) -> component.config?.programmableMethods).config\n    usesHTMLConfig = _.find(hero.components, (component) -> component.config?.programmableHTMLProperties).config\n    usesWebJavaScriptConfig = _.find(hero.components, (component) -> component.config?.programmableWebJavaScriptProperties)?.config\n    usesJQueryConfig = _.find(hero.components, (component) -> component.config?.programmableJQueryProperties)?.config\n    console.warn \"Couldn't find usesHTML config; is it presented and not defaulted on the Hero Placeholder?\" unless usesHTMLConfig\n    thang =\n      id: 'Hero Placeholder'\n      isProgrammable: true\n    thang = _.merge thang, programmableConfig, usesHTMLConfig, usesWebJavaScriptConfig, usesJQueryConfig\n    thang\n\n  destroy: ->\n    spell.destroy() for spellKey, spell of @spells\n    @worker?.terminate()\n    super()\n"]}