{"version":3,"sources":["app/views/play/level/tome/SpellPaletteThangEntryView.coffee"],"names":[],"mappings":"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","file":"public/javascripts/app/views/play/level/tome/SpellPaletteThangEntryView.js","sourcesContent":["CocoView = require 'views/core/CocoView'\ntemplate = require 'templates/play/level/tome/spell-palette-thang-entry'\npopoverTemplate = require 'templates/play/level/tome/spell_palette_entry_popover'\n{me} = require 'core/auth'\nfilters = require 'lib/image_filter'\nDocFormatter = require './DocFormatter'\nutils = require 'core/utils'\n\nmodule.exports = class SpellPaletteThangEntryView extends CocoView\n  tagName: 'div'  # Could also try <code> instead of <div>, but would need to adjust colors\n  className: 'spell-palette-thang-entry-view'\n  template: template\n \n  subscriptions:\n    'surface:frame-changed': 'onFrameChanged'\n    'tome:palette-hovered': 'onPaletteHovered'\n    'tome:palette-clicked': 'onPaletteClicked'\n    'tome:spell-debug-property-hovered': 'onSpellDebugPropertyHovered'\n\n  events:\n    'mouseenter': 'onMouseEnter'\n    'mouseleave': 'onMouseLeave'\n    'click': 'onClick'\n\n  constructor: (options) ->\n    super options\n    @thang = options.thang\n    if options.doc.example?\n      example = options.doc.example?[options.language]\n    else\n      example = \"\\# usage code \\ngame.spawnXY(\\\"#{options.buildableName}\\\", 21, 20)\"\n    @doc =\n      name: options.buildableName\n      initialHTML: popoverTemplate _: _, marked: marked, doc:\n        #shortName: @thang.get('name')\n        shortName: options.doc.name\n        type: \"spawnable\"\n        description: \"![#{@thang.get('name')}](#{@thang.getPortraitURL()}) #{options.doc.description}\"\n        example: example\n      example: example\n\n    #@aceEditors = []\n\n  afterRender: ->\n    super()\n    #@$el.addClass _.string.slugify @doc.type\n\n  resetPopoverContent: ->\n    #@$el.data('bs.popover').options.content = @docFormatter.formatPopover()\n    #@$el.popover('setContent')\n\n  onMouseEnter: (e) ->\n    return if @popoverPinned or @otherPopoverPinned\n    #@resetPopoverContent()\n    #@$el.popover 'show'\n\n  onMouseLeave: (e) ->\n    #@$el.popover 'hide' unless @popoverPinned or @otherPopoverPinned\n\n\n  onPaletteClicked: (e) =>\n    @$el.toggleClass('selected', e.prop is @doc.name)\n\n  onClick: (e) =>\n    if key.shift\n      Backbone.Mediator.publish 'tome:insert-snippet', doc: @options.doc, language: @options.language, formatted: @doc\n      return\n    Backbone.Mediator.publish 'tome:palette-clicked', thang: @thang, prop: @doc.name, entry: @\n\n  onFrameChanged: (e) ->\n    #return unless e.selectedThang?.id is @thang.id\n    #@options.thang = @thang = @docFormatter.options.thang = e.selectedThang  # Update our thang to the current version\n\n  onPaletteHovered: (e) ->\n    return if e.entry is @\n\n  onSpellDebugPropertyHovered: (e) ->\n    matched = e.property is @doc.name and e.owner is @doc.owner\n    if matched and not @debugHovered\n      @debugHovered = true\n      @togglePinned() unless @popoverPinned\n    else if @debugHovered and not matched\n      @debugHovered = false\n      @togglePinned() if @popoverPinned\n    null\n\n  destroy: ->\n    @$el.off()\n    oldEditor.destroy() for oldEditor in @aceEditors\n    super()\n"]}