{"version":3,"sources":["app/views/play/level/tome/Problem.coffee"],"names":[],"mappings":"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","file":"public/javascripts/app/views/play/level/tome/Problem.js","sourcesContent":["ace = require 'ace'\nRange = ace.require('ace/range').Range\n\n# This class can either wrap an AetherProblem,\n# or act as a general runtime error container for web-dev iFrame errors.\n# TODO: Use subclasses? Might need a factory pattern for that (bleh)\nmodule.exports = class Problem\n  annotation: null\n  markerRange: null\n  # Construction with AetherProblem will include all but `error`\n  # Construction with a standard error will have `error`, `isCast`, `levelID`, `ace`\n  constructor: ({ @aether, @aetherProblem, @ace, isCast=false, @levelID, error, userCodeHasChangedSinceLastCast }) ->\n    if @aetherProblem\n      @annotation = @buildAnnotationFromAetherProblem(@aetherProblem)\n      { @lineMarkerRange, @textMarkerRange } = @buildMarkerRangesFromAetherProblem(@aetherProblem) if isCast\n\n      { @level, @range, @message, @hint, @userInfo } = @aetherProblem\n      { @row, @column: col } = @aetherProblem.range?[0] or {}\n      @createdBy = 'aether'\n    else\n      unless userCodeHasChangedSinceLastCast\n        @annotation = @buildAnnotationFromWebDevError(error)\n        { @lineMarkerRange, @textMarkerRange } = @buildMarkerRangesFromWebDevError(error)\n\n      @level = 'error'\n      @row = error.line\n      @column = error.column\n      @message = error.message or 'Unknown Error'\n      if error.line and not userCodeHasChangedSinceLastCast\n        @message = \"Line #{error.line + 1}: \" + @message # Ace's gutter numbers are 1-indexed but annotation.rows are 0-indexed\n      if userCodeHasChangedSinceLastCast\n        @hint = \"This error was generated by old code â€”Â Try running your new code first.\"\n      else\n        @hint = undefined\n      @userInfo = undefined\n      @createdBy = 'web-dev-iframe'\n      # TODO: Include runtime/transpile error types depending on something?\n\n    # TODO: get ACE screen line, too, for positioning, since any multiline \"lines\" will mess up positioning\n    Backbone.Mediator.publish(\"problem:problem-created\", line: @annotation.row, text: @annotation.text) if application.isIPadApp\n\n  isEqual: (problem) ->\n    _.all ['row', 'column', 'level', 'column', 'message', 'hint'], (attr) =>\n      @[attr] is problem[attr]\n\n  destroy: ->\n    @removeMarkerRanges()\n    @userCodeProblem.off() if @userCodeProblem\n\n  buildAnnotationFromWebDevError: (error) ->\n    {\n      row: error.line\n      column: error.column\n      raw: error.message\n      text: error.message\n      type: 'error'\n      createdBy: 'web-dev-iframe'\n    }\n\n  buildAnnotationFromAetherProblem: (aetherProblem) ->\n    return unless aetherProblem.range\n    text = aetherProblem.message.replace /^Line \\d+: /, ''\n    start = aetherProblem.range[0]\n    {\n      row: start.row,\n      column: start.col,\n      raw: text,\n      text: text,\n      type: @aetherProblem.level ? 'error'\n      createdBy: 'aether'\n    }\n\n  buildMarkerRangesFromWebDevError: (error) ->\n    lineMarkerRange = new Range error.line, 0, error.line, 1\n    lineMarkerRange.start = @ace.getSession().getDocument().createAnchor lineMarkerRange.start\n    lineMarkerRange.end = @ace.getSession().getDocument().createAnchor lineMarkerRange.end\n    lineMarkerRange.id = @ace.getSession().addMarker lineMarkerRange, 'problem-line', 'fullLine'\n    textMarkerRange = undefined # We don't get any per-character info from standard errors\n    { lineMarkerRange, textMarkerRange }\n\n  buildMarkerRangesFromAetherProblem: (aetherProblem) ->\n    return {} unless aetherProblem.range\n    [start, end] = aetherProblem.range\n    textClazz = \"problem-marker-#{aetherProblem.level}\"\n    textMarkerRange = new Range start.row, start.col, end.row, end.col\n    textMarkerRange.start = @ace.getSession().getDocument().createAnchor textMarkerRange.start\n    textMarkerRange.end = @ace.getSession().getDocument().createAnchor textMarkerRange.end\n    textMarkerRange.id = @ace.getSession().addMarker textMarkerRange, textClazz, 'text'\n    lineClazz = \"problem-line\"\n    lineMarkerRange = new Range start.row, start.col, end.row, end.col\n    lineMarkerRange.start = @ace.getSession().getDocument().createAnchor lineMarkerRange.start\n    lineMarkerRange.end = @ace.getSession().getDocument().createAnchor lineMarkerRange.end\n    lineMarkerRange.id = @ace.getSession().addMarker lineMarkerRange, lineClazz, 'fullLine'\n    { lineMarkerRange, textMarkerRange }\n\n  removeMarkerRanges: ->\n    if @textMarkerRange\n      @ace.getSession().removeMarker @textMarkerRange.id\n      @textMarkerRange.start.detach()\n      @textMarkerRange.end.detach()\n    if @lineMarkerRange\n      @ace.getSession().removeMarker @lineMarkerRange.id\n      @lineMarkerRange.start.detach()\n      @lineMarkerRange.end.detach()\n"]}