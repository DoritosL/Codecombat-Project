{"version":3,"sources":["app/views/play/level/LevelGoalsView.coffee"],"names":[],"mappings":"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","file":"public/javascripts/app/views/play/level/LevelGoalsView.js","sourcesContent":["CocoView = require 'views/core/CocoView'\ntemplate = require 'templates/play/level/goals'\n{me} = require 'core/auth'\nutils = require 'core/utils'\n\nstateIconMap =\n  success: 'glyphicon-ok'\n  failure: 'glyphicon-remove'\n\nmodule.exports = class LevelGoalsView extends CocoView\n  id: 'goals-view'\n  template: template\n  className: 'secret expanded'\n  playbackEnded: false\n\n  subscriptions:\n    'goal-manager:new-goal-states': 'onNewGoalStates'\n    'tome:cast-spells': 'onTomeCast'\n    'level:set-letterbox': 'onSetLetterbox'\n    'level:set-playing': 'onSetPlaying'\n    'surface:playback-restarted': 'onSurfacePlaybackRestarted'\n    'surface:playback-ended': 'onSurfacePlaybackEnded'\n\n  events:\n    'mouseenter': ->\n      @mouseEntered = true\n      @updatePlacement()\n\n    'mouseleave': ->\n      @mouseEntered = false\n      @updatePlacement()\n\n  constructor: (options) ->\n    super options\n    @level = options.level\n\n  onNewGoalStates: (e) ->\n    firstRun = not @previousGoalStatus?\n    @previousGoalStatus ?= {}\n    @$el.find('.goal-status').addClass 'secret'\n    classToShow = null\n    classToShow = 'success' if e.overallStatus is 'success'\n    classToShow = 'failure' if e.overallStatus is 'failure'\n    classToShow ?= 'timed-out' if e.timedOut\n    classToShow ?= 'incomplete'\n    @$el.find('.goal-status.'+classToShow).removeClass 'secret'\n    list = $('#primary-goals-list', @$el)\n    list.empty()\n    goals = []\n    for goal in e.goals\n      state = e.goalStates[goal.id]\n      continue if goal.optional and @level.isType('course') and state.status isnt 'success'\n      if goal.hiddenGoal\n        continue if goal.optional and state.status isnt 'success'\n        continue if not goal.optional and state.status isnt 'failure'\n      continue if goal.team and me.team isnt goal.team\n      text = utils.i18n goal, 'name'\n      if state.killed\n        dead = _.filter(_.values(state.killed)).length\n        targeted = _.values(state.killed).length\n        if targeted > 1\n          # Does this make sense?\n          if goal.isPositive\n            completed = dead\n          else\n            completed = targeted - dead\n          text = text + \" (#{completed}/#{targeted})\"\n      # This should really get refactored, along with GoalManager, so that goals have a standard\n      # representation of how many are done, how many are needed, what that means, etc.\n      li = $('<li></li>').addClass(\"status-#{state.status}\").text(text)\n      iconClass = stateIconMap[state.status]\n      li.prepend($('<i></i>').addClass(\"glyphicon #{iconClass or ''}\"))  # If empty, insert a .glyphicon to take up space\n      list.append(li)\n      goals.push goal\n      if not firstRun and state.status is 'success' and @previousGoalStatus[goal.id] isnt 'success'\n        @soundToPlayWhenPlaybackEnded = 'goal-success'\n      else if not firstRun and state.status isnt 'success' and @previousGoalStatus[goal.id] is 'success'\n        @soundToPlayWhenPlaybackEnded = 'goal-incomplete-again'\n      else\n        @soundToPlayWhenPlaybackEnded = null\n      @previousGoalStatus[goal.id] = state.status\n    if goals.length > 0 and @$el.hasClass 'secret'\n      @$el.removeClass('secret')\n      @lastSizeTweenTime = new Date()\n    @updatePlacement()\n\n  onTomeCast: (e) ->\n    return if e.preload\n    @$el.find('.goal-status').addClass('secret')\n    @$el.find('.goal-status.running').removeClass('secret')\n\n  onSetPlaying: (e) ->\n    return unless e.playing\n    # Automatically hide it while we replay\n    @mouseEntered = false\n    @expanded = true\n    @updatePlacement()\n\n  onSurfacePlaybackRestarted: ->\n    @playbackEnded = false\n    @$el.removeClass 'brighter'\n    @lastSizeTweenTime = new Date()\n    @updatePlacement()\n\n  onSurfacePlaybackEnded: ->\n    return if @level.isType('game-dev')\n    @playbackEnded = true\n    @updateHeight()\n    @$el.addClass 'brighter'\n    @lastSizeTweenTime = new Date()\n    @updatePlacement()\n    if @soundToPlayWhenPlaybackEnded\n      @playSound @soundToPlayWhenPlaybackEnded\n\n  updateHeight: ->\n    return if @$el.hasClass('brighter') or @$el.hasClass('secret')\n    return if (new Date() - @lastSizeTweenTime) < 500  # Don't measure this while still animating, might get the wrong value. Should match sass transition time.\n    @normalHeight = @$el.outerHeight()\n\n  updatePlacement: ->\n    # Expand it if it's at the end. Mousing over reverses this.\n    expand = @playbackEnded isnt @mouseEntered\n    return if expand is @expanded\n    @updateHeight()\n    sound = if expand then 'goals-expand' else 'goals-collapse'\n    if expand\n      top = -5\n    else\n      height = @normalHeight\n      height = @$el.outerHeight() if not height or @playbackEnded\n      top = 41 - height\n    @$el.css 'top', top\n    if @soundTimeout\n      # Don't play the sound we were going to play after all; the transition has reversed.\n      clearTimeout @soundTimeout\n      @soundTimeout = null\n    else if @expanded?\n      # Play it when the transition ends, not when it begins.\n      @soundTimeout = _.delay @playToggleSound, 500, sound\n    @expanded = expand\n\n  playToggleSound: (sound) =>\n    return if @destroyed\n    @playSound sound unless @options.level.isType('game-dev')\n    @soundTimeout = null\n\n  onSetLetterbox: (e) ->\n    @$el.toggle not e.on\n    @updatePlacement()\n"]}