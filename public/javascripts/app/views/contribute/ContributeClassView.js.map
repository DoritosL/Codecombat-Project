{"version":3,"sources":["app/views/contribute/ContributeClassView.coffee"],"names":[],"mappings":";AAAA;EAAA;;;AAAA,qBAAqB,QAAQ,+BAAR;;AACrB,WAAW,QAAQ,qBAAR;;AACV,KAAM,QAAQ,WAAR,EAAN;;AACD,qCAAqC,QAAQ,mDAAR;;AACrC,4BAA4B,QAAQ,yCAAR;;AAC5B,0BAA0B,QAAQ,uCAAR;;AAE1B,MAAM,CAAC,OAAP,GAAuB;;;;;;;gCAErB,SACE;IAAA,iCAAiC,mBAAjC;;;gCAEF,cAAa;AACX;IAAA;IACA,IAAC,IAAG,CAAC,IAAL,CAAU,+BAAV,CAA0C,CAAC,WAA3C,CAAuD,mCAAmC;MAAA,IAAI,EAAJ;KAAnC,CAAvD;IACA,IAAC,IAAG,CAAC,IAAL,CAAU,qBAAV,CAAgC,CAAC,IAAjC,CAAsC;AACpC;MAAA,UAAU;QAAA,IAAI,EAAJ;QAAQ,sBAAsB,EAAE,IAAF,CAAI,CAAC,IAAL,CAAU,wBAAV,CAA9B;;aACV,EAAE,IAAF,CAAI,CAAC,WAAL,CAAiB,0BAA0B,OAA1B,CAAjB;IAFoC,CAAtC;IAGA,IAAC,IAAG,CAAC,IAAL,CAAU,mBAAV,CAA8B,CAAC,WAA/B,CAA2C,wBAAwB;MAAA,cAAc,IAAC,aAAf;MAA6B,sBAAsB,IAAC,qBAApD;KAAxB,CAA3C;IAEA,aAAa,IAAC,IAAG,CAAC,IAAL,CAAU,wBAAV,CAAmC,CAAC,OAApC;WACb,CAAC,CAAC,OAAF,CAAU,UAAV,EAAsB,SAAC,EAAD;MACpB,KAAK,EAAE,EAAF;MACL,IAA4B,EAAE,CAAC,0BAAH,CAA8B,EAAE,CAAC,IAAH,CAAQ,MAAR,IAAgB,MAA9C,CAA5B;eAAA,EAAE,CAAC,IAAH,CAAQ,SAAR,EAAmB,IAAnB;;IAFoB,CAAtB;EATW;;gCAab,oBAAmB,SAAC,CAAD;AACjB;IAAA,KAAK,EAAE,CAAC,CAAC,MAAJ;IACL,UAAU,EAAE,CAAC,IAAH,CAAQ,SAAR;IACV,eAAe,EAAE,CAAC,IAAH,CAAQ,MAAR;IAEf,EAAE,CAAC,oBAAH,CAAwB,eAAa,MAArC,EAA6C,OAA7C;IACA,EAAE,CAAC,KAAH;IACA,IAA2C,EAAE,CAAC,GAAH,CAAO,WAAP,CAA3C;MAAA,IAAC,cAAD,CAAmB,wBAAnB;;WACA,EAAE,CAAC,MAAH,EAAW,CAAC,IAAZ,CAAiB,qBAAjB,CAAuC,CAAC,MAAxC,EAAgD,CAAC,IAAjD,CAAsD,MAAtD,CAA6D,CAAC,KAA9D,CAAoE,IAApE,CAAyE,CAAC,OAA1E,CAAkF,IAAlF;EARiB;;;;GAlB8B","file":"public/javascripts/app/views/contribute/ContributeClassView.js","sourcesContent":["CreateAccountModal = require 'views/core/CreateAccountModal'\nRootView = require 'views/core/RootView'\n{me} = require 'core/auth'\ncontributorSignupAnonymousTemplate = require 'templates/contribute/contributor_signup_anonymous'\ncontributorSignupTemplate = require 'templates/contribute/contributor_signup'\ncontributorListTemplate = require 'templates/contribute/contributor_list'\n\nmodule.exports = class ContributeClassView extends RootView\n\n  events:\n    'change input[type=\"checkbox\"]': 'onCheckboxChanged'\n\n  afterRender: ->\n    super()\n    @$el.find('.contributor-signup-anonymous').replaceWith(contributorSignupAnonymousTemplate(me: me))\n    @$el.find('.contributor-signup').each ->\n      context = me: me, contributorClassName: $(@).data('contributor-class-name')\n      $(@).replaceWith(contributorSignupTemplate(context))\n    @$el.find('#contributor-list').replaceWith(contributorListTemplate(contributors: @contributors, contributorClassName: @contributorClassName))\n\n    checkboxes = @$el.find('input[type=\"checkbox\"]').toArray()\n    _.forEach checkboxes, (el) ->\n      el = $(el)\n      el.prop('checked', true) if me.isEmailSubscriptionEnabled(el.attr('name')+'News')\n\n  onCheckboxChanged: (e) ->\n    el = $(e.target)\n    checked = el.prop('checked')\n    subscription = el.attr('name')\n\n    me.setEmailSubscription subscription+'News', checked\n    me.patch()\n    @openModalView new CreateAccountModal() if me.get 'anonymous'\n    el.parent().find('.saved-notification').finish().show('fast').delay(3000).fadeOut(2000)\n"]}