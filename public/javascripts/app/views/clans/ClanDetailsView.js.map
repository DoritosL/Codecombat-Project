{"version":3,"sources":["app/views/clans/ClanDetailsView.coffee"],"names":[],"mappings":"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","file":"public/javascripts/app/views/clans/ClanDetailsView.js","sourcesContent":["RootView = require 'views/core/RootView'\ntemplate = require 'templates/clans/clan-details'\napp = require 'core/application'\nCreateAccountModal = require 'views/core/CreateAccountModal'\nCocoCollection = require 'collections/CocoCollection'\nCampaign = require 'models/Campaign'\nClan = require 'models/Clan'\nEarnedAchievement = require 'models/EarnedAchievement'\nLevelSession = require 'models/LevelSession'\nSubscribeModal = require 'views/core/SubscribeModal'\nThangType = require 'models/ThangType'\nUser = require 'models/User'\nutils = require 'core/utils'\n\n# TODO: Add message for clan not found\n# TODO: Progress visual for premium levels?\n# TODO: Add expanded level names toggle\n# TODO: Only need campaign data if clan is private\n\nmodule.exports = class ClanDetailsView extends RootView\n  id: 'clan-details-view'\n  template: template\n\n  events:\n    'change .expand-progress-checkbox': 'onExpandedProgressCheckbox'\n    'click .delete-clan-btn': 'onDeleteClan'\n    'click .edit-description-save-btn': 'onEditDescriptionSave'\n    'click .edit-name-save-btn': 'onEditNameSave'\n    'click .join-clan-btn': 'onJoinClan'\n    'click .leave-clan-btn': 'onLeaveClan'\n    'click .member-header': 'onClickMemberHeader'\n    'click .progress-header': 'onClickProgressHeader'\n    'click .progress-level-cell': 'onClickLevel'\n    'click .remove-member-btn': 'onRemoveMember'\n    'mouseenter .progress-level-cell': 'onMouseEnterPoint'\n    'mouseleave .progress-level-cell': 'onMouseLeavePoint'\n\n  constructor: (options, @clanID) ->\n    super options\n    @initData()\n\n  destroy: ->\n    @stopListening?()\n\n  initData: ->\n    @showExpandedProgress = false\n    @memberSort = 'nameAsc'\n    @stats = {}\n\n    @campaigns = new CocoCollection([], { url: \"/db/campaign\", model: Campaign, comparator:'_id' })\n    @clan = new Clan _id: @clanID\n    @members = new CocoCollection([], { url: \"/db/clan/#{@clanID}/members\", model: User, comparator: 'nameLower' })\n    @memberAchievements = new CocoCollection([], { url: \"/db/clan/#{@clanID}/member_achievements\", model: EarnedAchievement, comparator:'_id' })\n    @memberSessions = new CocoCollection([], { url: \"/db/clan/#{@clanID}/member_sessions\", model: LevelSession, comparator:'_id' })\n\n    @listenTo me, 'sync', => @render?()\n    @listenTo @campaigns, 'sync', @onCampaignSync\n    @listenTo @clan, 'sync', @onClanSync\n    @listenTo @members, 'sync', @onMembersSync\n    @listenTo @memberAchievements, 'sync', @onMemberAchievementsSync\n    @listenTo @memberSessions, 'sync', @onMemberSessionsSync\n\n    @supermodel.loadModel @campaigns, cache: false\n    @supermodel.loadModel @clan, cache: false\n    @supermodel.loadCollection(@members, 'members', {cache: false})\n    @supermodel.loadCollection(@memberAchievements, 'member_achievements', {cache: false})\n\n  getRenderData: ->\n    context = super()\n    context.campaignLevelProgressions = @campaignLevelProgressions ? []\n    context.clan = @clan\n    context.conceptsProgression = @conceptsProgression ? []\n    if application.isProduction()\n      context.joinClanLink = \"https://codecombat.com/clans/#{@clanID}\"\n    else\n      context.joinClanLink = \"http://localhost:3000/clans/#{@clanID}\"\n    context.owner = @owner\n    context.memberAchievementsMap = @memberAchievementsMap\n    context.memberLanguageMap = @memberLanguageMap\n    context.memberLevelStateMap = @memberLevelMap ? {}\n    context.memberMaxLevelCount = @memberMaxLevelCount\n    context.memberSort = @memberSort\n    context.isOwner = @clan.get('ownerID') is me.id\n    context.isMember = @clanID in (me.get('clans') ? [])\n    context.stats = @stats\n\n    # Find last campaign level for each user\n    # TODO: why do we do this for every render?\n    highestUserLevelCountMap = {}\n    lastUserCampaignLevelMap = {}\n    maxLastUserCampaignLevel = 0\n    userConceptsMap = {}\n    if @campaigns.loaded\n      levelCount = 0\n      for campaign in @campaigns.models when campaign.get('type') is 'hero'\n        campaignID = campaign.id\n        lastLevelIndex = 0\n        for levelID, level of campaign.get('levels')\n          levelSlug = level.slug\n          for member in @members?.models ? []\n            if context.memberLevelStateMap[member.id]?[levelSlug]\n              lastUserCampaignLevelMap[member.id] ?= {}\n              lastUserCampaignLevelMap[member.id][campaignID] ?= {}\n              lastUserCampaignLevelMap[member.id][campaignID] =\n                levelSlug: levelSlug\n                index: lastLevelIndex\n              maxLastUserCampaignLevel = lastLevelIndex if lastLevelIndex > maxLastUserCampaignLevel\n              if level.concepts?\n                userConceptsMap[member.id] ?= {}\n                for concept in level.concepts\n                  continue if userConceptsMap[member.id][concept] is 'complete'\n                  userConceptsMap[member.id][concept] = context.memberLevelStateMap[member.id][levelSlug].state\n              highestUserLevelCountMap[member.id] = levelCount\n          lastLevelIndex++\n          levelCount++\n\n    @sortMembers(highestUserLevelCountMap, userConceptsMap)# if @clan.get('dashboardType') is 'premium'\n    context.members = @members?.models ? []\n    context.lastUserCampaignLevelMap = lastUserCampaignLevelMap\n    context.showExpandedProgress = maxLastUserCampaignLevel <= 30 or @showExpandedProgress\n    context.userConceptsMap = userConceptsMap\n    context.arenas = @arenas\n    context.i18n = utils.i18n\n    context\n\n  afterRender: ->\n    super()\n    @updateHeroIcons()\n\n  refreshData: ->\n    me.fetch cache: false\n    @members.fetch cache: false\n    @memberAchievements.fetch cache: false\n    @memberSessions.fetch cache: false\n\n  sortMembers: (highestUserLevelCountMap, userConceptsMap) ->\n    # Progress sort precedence: most completed concepts, most started concepts, most levels, name sort\n    return unless @members? and @memberSort?\n    switch @memberSort\n      when \"nameDesc\"\n        @members.comparator = (a, b) -> return (b.get('name') or 'Anonymous').localeCompare(a.get('name') or 'Anonymous')\n      when \"progressAsc\"\n        @members.comparator = (a, b) ->\n          aComplete = (concept for concept, state of userConceptsMap[a.id] when state is 'complete')\n          bComplete = (concept for concept, state of userConceptsMap[b.id] when state is 'complete')\n          aStarted = (concept for concept, state of userConceptsMap[a.id] when state is 'started')\n          bStarted = (concept for concept, state of userConceptsMap[b.id] when state is 'started')\n          if aComplete < bComplete then return -1\n          else if aComplete > bComplete then return 1\n          else if aStarted < bStarted then return -1\n          else if aStarted > bStarted then return 1\n          if highestUserLevelCountMap[a.id] < highestUserLevelCountMap[b.id] then return -1\n          else if highestUserLevelCountMap[a.id] > highestUserLevelCountMap[b.id] then return 1\n          (a.get('name') or 'Anonymous').localeCompare(b.get('name') or 'Anonymous')\n      when \"progressDesc\"\n        @members.comparator = (a, b) ->\n          aComplete = (concept for concept, state of userConceptsMap[a.id] when state is 'complete')\n          bComplete = (concept for concept, state of userConceptsMap[b.id] when state is 'complete')\n          aStarted = (concept for concept, state of userConceptsMap[a.id] when state is 'started')\n          bStarted = (concept for concept, state of userConceptsMap[b.id] when state is 'started')\n          if aComplete > bComplete then return -1\n          else if aComplete < bComplete then return 1\n          else if aStarted > bStarted then return -1\n          else if aStarted < bStarted then return 1\n          if highestUserLevelCountMap[a.id] > highestUserLevelCountMap[b.id] then return -1\n          else if highestUserLevelCountMap[a.id] < highestUserLevelCountMap[b.id] then return 1\n          (b.get('name') or 'Anonymous').localeCompare(a.get('name') or 'Anonymous')\n      else\n        @members.comparator = (a, b) -> return (a.get('name') or 'Anonymous').localeCompare(b.get('name') or 'Anonymous')\n    @members.sort()\n\n  updateHeroIcons: ->\n    return unless @members?.models?\n    for member in @members.models\n      continue unless hero = member.get('heroConfig')?.thangType\n      for slug, original of ThangType.heroes when original is hero\n        @$el.find(\".player-hero-icon[data-memberID=#{member.id}]\").removeClass('.player-hero-icon').addClass('player-hero-icon ' + slug)\n\n  onCampaignSync: ->\n    return unless @campaigns.loaded\n    @campaignLevelProgressions = []\n    @conceptsProgression = []\n    @arenas = []\n    for campaign in @campaigns.models when campaign.get('type') is 'hero'\n      campaignLevelProgression =\n        ID: campaign.id\n        slug: campaign.get('slug')\n        name: utils.i18n(campaign.attributes, 'fullName') or utils.i18n(campaign.attributes, 'name')\n        levels: []\n      for levelID, level of campaign.get('levels')\n        campaignLevelProgression.levels.push\n          ID: levelID\n          slug: level.slug\n          name: utils.i18n level, 'name'\n        if level.concepts?\n          for concept in level.concepts\n            @conceptsProgression.push concept unless concept in @conceptsProgression\n        if level.type is 'hero-ladder' and level.slug not in ['capture-their-flag']  # Would use isType, but it's not a Level model\n          @arenas.push level\n      @campaignLevelProgressions.push campaignLevelProgression\n    @render?()\n\n  onClanSync: ->\n    unless @owner?\n      @owner = new User _id: @clan.get('ownerID')\n      @listenTo @owner, 'sync', => @render?()\n      @supermodel.loadModel @owner, cache: false\n    if @clan.get(\"dashboardType\") is \"premium\"\n      @supermodel.loadCollection(@memberSessions, 'member_sessions', {cache: false})\n    @render?()\n\n  onMembersSync: ->\n    @stats.averageLevel = Math.round(@members.reduce(((sum, member) -> sum + member.level()), 0) / @members.length)\n    @render?()\n\n  onMemberAchievementsSync: ->\n    @memberAchievementsMap = {}\n    for achievement in @memberAchievements.models\n      user = achievement.get('user')\n      @memberAchievementsMap[user] ?= []\n      @memberAchievementsMap[user].push achievement\n    for user of @memberAchievementsMap\n      @memberAchievementsMap[user].sort (a, b) -> b.id.localeCompare(a.id)\n    @stats.averageAchievements = Math.round(@memberAchievements.models.length / Object.keys(@memberAchievementsMap).length)\n    @render?()\n\n  onMemberSessionsSync: ->\n    @memberLevelMap = {}\n    memberSessions = {}\n    for levelSession in @memberSessions.models\n      continue if levelSession.isMultiplayer()\n      user = levelSession.get('creator')\n      levelSlug = levelSession.get('levelID')\n      @memberLevelMap[user] ?= {}\n      @memberLevelMap[user][levelSlug] ?= {}\n      levelInfo =\n        level: levelSession.get('levelName')\n        levelID: levelSession.get('levelID')\n        changed: new Date(levelSession.get('changed')).toLocaleString()\n        playtime: levelSession.get('playtime')\n        sessionID: levelSession.id\n      @memberLevelMap[user][levelSlug].levelInfo = levelInfo\n      if levelSession.get('state')?.complete is true\n        @memberLevelMap[user][levelSlug].state = 'complete'\n        memberSessions[user] ?= []\n        memberSessions[user].push levelSession\n      else\n        @memberLevelMap[user][levelSlug].state = 'started'\n    @memberMaxLevelCount = 0\n    @memberLanguageMap = {}\n    for user of memberSessions\n      languageCounts = {}\n      for levelSession in memberSessions[user]\n        language = levelSession.get('codeLanguage') or levelSession.get('submittedCodeLanguage')\n        languageCounts[language] = (languageCounts[language] or 0) + 1 if language\n      @memberMaxLevelCount = memberSessions[user].length if @memberMaxLevelCount < memberSessions[user].length\n      mostUsedCount = 0\n      for language, count of languageCounts\n        if count > mostUsedCount\n          mostUsedCount = count\n          @memberLanguageMap[user] = language\n    @render?()\n\n  onMouseEnterPoint: (e) ->\n    $('.level-popup-container').hide()\n    container = $(e.target).find('.level-popup-container').show()\n    margin = 20\n    offset = $(e.target).offset()\n    scrollTop = $(e.target).offsetParent().scrollTop()\n    height = container.outerHeight()\n    container.css('left', offset.left + e.offsetX)\n    container.css('top', offset.top + scrollTop - height - margin)\n\n  onMouseLeavePoint: (e) ->\n    $(e.target).find('.level-popup-container').hide()\n\n  onClickLevel: (e) ->\n    levelInfo = $(e.target).data 'level-info'\n    return unless levelInfo?.levelID? and levelInfo?.sessionID?\n    url = \"/play/level/#{levelInfo.levelID}?session=#{levelInfo.sessionID}&observing=true\"\n    window.open url, '_blank'\n\n  onDeleteClan: (e) ->\n    return @openModalView(new CreateAccountModal()) if me.isAnonymous()\n    return unless window.confirm(\"Delete Clan?\")\n    options =\n      url: \"/db/clan/#{@clanID}\"\n      method: 'DELETE'\n      error: (model, response, options) =>\n        console.error 'Error joining clan', response\n      success: (model, response, options) =>\n        app.router.navigate \"/clans\"\n        window.location.reload()\n    @supermodel.addRequestResource( 'delete_clan', options).load()\n\n  onEditDescriptionSave: (e) ->\n    description = $('.edit-description-input').val()\n    @clan.set 'description', description\n    @clan.patch()\n    $('#editDescriptionModal').modal('hide')\n\n  onEditNameSave: (e) ->\n    if name = $('.edit-name-input').val()\n      @clan.set 'name', name\n      @clan.patch()\n    $('#editNameModal').modal('hide')\n\n  onExpandedProgressCheckbox: (e) ->\n    @showExpandedProgress = $('.expand-progress-checkbox').prop('checked')\n    # TODO: why does render reset the checkbox to be unchecked?\n    @render?()\n    $('.expand-progress-checkbox').attr('checked', @showExpandedProgress)\n\n  onJoinClan: (e) ->\n    return @openModalView(new CreateAccountModal()) if me.isAnonymous()\n    return unless @clan.loaded\n    if @clan.get('type') is 'private' and not me.isPremium()\n      @openModalView new SubscribeModal()\n      window.tracker?.trackEvent 'Show subscription modal', category: 'Subscription', label: 'join clan'\n      return\n    options =\n      url: \"/db/clan/#{@clanID}/join\"\n      method: 'PUT'\n      error: (model, response, options) =>\n        console.error 'Error joining clan', response\n      success: (model, response, options) => @refreshData()\n    @supermodel.addRequestResource( 'join_clan', options).load()\n\n  onLeaveClan: (e) ->\n    options =\n      url: \"/db/clan/#{@clanID}/leave\"\n      method: 'PUT'\n      error: (model, response, options) =>\n        console.error 'Error leaving clan', response\n      success: (model, response, options) => @refreshData()\n    @supermodel.addRequestResource( 'leave_clan', options).load()\n\n  onClickMemberHeader: (e) ->\n    @memberSort = if @memberSort is 'nameAsc' then 'nameDesc' else 'nameAsc'\n    @render?()\n\n  onClickProgressHeader: (e) ->\n    @memberSort = if @memberSort is 'progressAsc' then 'progressDesc' else 'progressAsc'\n    @render?()\n\n  onRemoveMember: (e) ->\n    return unless window.confirm(\"Remove Hero?\")\n    if memberID = $(e.target).data('id')\n      options =\n        url: \"/db/clan/#{@clanID}/remove/#{memberID}\"\n        method: 'PUT'\n        error: (model, response, options) =>\n          console.error 'Error removing clan member', response\n        success: (model, response, options) => @refreshData()\n      @supermodel.addRequestResource( 'remove_member', options).load()\n    else\n      console.error \"No member ID attached to remove button.\"\n"]}