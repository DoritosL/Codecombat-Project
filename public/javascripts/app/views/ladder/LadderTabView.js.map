{"version":3,"sources":["app/views/ladder/LadderTabView.coffee"],"names":[],"mappings":"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","file":"public/javascripts/app/views/ladder/LadderTabView.js","sourcesContent":["CocoView = require 'views/core/CocoView'\nCocoClass = require 'core/CocoClass'\nLevel = require 'models/Level'\nLevelSession = require 'models/LevelSession'\nCocoCollection = require 'collections/CocoCollection'\nUser = require 'models/User'\nLeaderboardCollection  = require 'collections/LeaderboardCollection'\n{teamDataFromLevel} = require './utils'\nModelModal = require 'views/modal/ModelModal'\nrequire 'vendor/d3'\n\nHIGHEST_SCORE = 1000000\n\nmodule.exports = class LadderTabView extends CocoView\n  id: 'ladder-tab-view'\n  template: require 'templates/play/ladder/ladder-tab-view'\n\n  events:\n    'click .connect-facebook': 'onConnectFacebook'\n    'click .connect-google-plus': 'onConnectGPlus'\n    'click .name-col-cell': 'onClickPlayerName'\n    'click .spectate-cell': 'onClickSpectateCell'\n    'click .load-more-ladder-entries': 'onLoadMoreLadderEntries'\n\n    # Refactored, to-reimplement\n#  subscriptions:\n#    'auth:facebook-api-loaded': 'checkFriends'\n#    'auth:gplus-api-loaded': 'checkFriends'\n#    'auth:logged-in-with-facebook': 'onConnectedWithFacebook'\n#    'auth:logged-in-with-gplus': 'onConnectedWithGPlus'\n\n  initialize: (options, @level, @sessions) ->\n    @teams = teamDataFromLevel @level\n    @leaderboards = []\n    @refreshLadder()\n\n    @capitalize = _.string.capitalize\n\n    # Trying not loading the FP/G+ stuff for now to see if anyone complains they were using it so we can have just two columns.\n    #@socialNetworkRes = @supermodel.addSomethingResource('social_network_apis', 0)\n    #@checkFriends()\n\n  checkFriends: ->\n    return  # Skipping for now\n    return if @checked or (not window.FB) or (not window.gapi)\n    @checked = true\n\n    # @addSomethingToLoad('facebook_status')\n\n    @fbStatusRes = @supermodel.addSomethingResource('facebook_status', 0)\n    @fbStatusRes.load()\n\n    FB.getLoginStatus (response) =>\n      return if @destroyed\n      @facebookStatus = response.status\n      @onFacebook = view.facebookStatus is 'connected'\n      @loadFacebookFriends() if @onFacebook\n      @fbStatusRes.markLoaded()\n\n    if application.gplusHandler.loggedIn is undefined\n      @listenToOnce(application.gplusHandler, 'checked-state', @gplusSessionStateLoaded)\n    else\n      @gplusSessionStateLoaded()\n\n    @socialNetworkRes.markLoaded()\n\n  # FACEBOOK\n\n  onConnectFacebook: ->\n    @connecting = true\n    FB.login()\n\n  onConnectedWithFacebook: -> location.reload() if @connecting\n\n  loadFacebookFriends: ->\n    # @addSomethingToLoad('facebook_friends')\n\n    @fbFriendRes = @supermodel.addSomethingResource('facebook_friends', 0)\n    @fbFriendRes.load()\n\n    FB.api '/me/friends', @onFacebookFriendsLoaded\n\n  onFacebookFriendsLoaded: (response) =>\n    @facebookData = response.data\n    @loadFacebookFriendSessions()\n    @fbFriendRes.markLoaded()\n\n  loadFacebookFriendSessions: ->\n    levelFrag = \"#{@level.get('original')}.#{@level.get('version').major}\"\n    url = \"/db/level/#{levelFrag}/leaderboard_facebook_friends\"\n\n    @fbFriendSessionRes = @supermodel.addRequestResource('facebook_friend_sessions', {\n      url: url\n      data: { friendIDs: (f.id for f in @facebookData) }\n      method: 'POST'\n      success: @onFacebookFriendSessionsLoaded\n    })\n    @fbFriendSessionRes.load()\n\n  onFacebookFriendSessionsLoaded: (result) =>\n    friendsMap = {}\n    friendsMap[friend.id] = friend.name for friend in @facebookData\n    for friend in result\n      friend.name = friendsMap[friend.facebookID]\n      friend.otherTeam = if friend.team is 'humans' then 'ogres' else 'humans'\n      friend.imageSource = \"http://graph.facebook.com/#{friend.facebookID}/picture\"\n    @facebookFriendSessions = result\n    @friends = @consolidateFriends()\n    @render() # because the ladder tab renders before waiting for fb to finish\n\n  # GOOGLE PLUS\n\n  onConnectGPlus: ->\n    @connecting = true\n    @listenToOnce application.gplusHandler, 'logged-in', @onConnectedWithGPlus\n    application.gplusHandler.reauthorize()\n\n  onConnectedWithGPlus: -> location.reload() if @connecting\n\n  gplusSessionStateLoaded: ->\n    if application.gplusHandler.loggedIn\n      @onGPlus = true\n      #@addSomethingToLoad('gplus_friends')\n      @gpFriendRes = @supermodel.addSomethingResource('gplus_friends', 0)\n      @gpFriendRes.load()\n      application.gplusHandler.loadFriends @gplusFriendsLoaded\n\n  gplusFriendsLoaded: (friends) =>\n    @gplusData = friends.items\n    @loadGPlusFriendSessions()\n    @gpFriendRes.markLoaded()\n\n  loadGPlusFriendSessions: ->\n    levelFrag = \"#{@level.get('original')}.#{@level.get('version').major}\"\n    url = \"/db/level/#{levelFrag}/leaderboard_gplus_friends\"\n\n    @gpFriendSessionRes = @supermodel.addRequestResource('gplus_friend_sessions', {\n      url: url\n      data: { friendIDs: (f.id for f in @gplusData) }\n      method: 'POST'\n      success: @onGPlusFriendSessionsLoaded\n    })\n    @gpFriendSessionRes.load()\n\n  onGPlusFriendSessionsLoaded: (result) =>\n    friendsMap = {}\n    friendsMap[friend.id] = friend for friend in @gplusData\n    for friend in result\n      friend.name = friendsMap[friend.gplusID].displayName\n      friend.otherTeam = if friend.team is 'humans' then 'ogres' else 'humans'\n      friend.imageSource = friendsMap[friend.gplusID].image.url\n    @gplusFriendSessions = result\n    @friends = @consolidateFriends()\n    @render() # because the ladder tab renders before waiting for gplus to finish\n\n  # LADDER LOADING\n\n  refreshLadder: ->\n    # Only do this so often if not in a league; servers cache a lot of this data for a few minutes anyway.\n    return if not @options.league and (new Date() - 2 * 60 * 1000 < @lastRefreshTime)\n    @lastRefreshTime = new Date()\n    @supermodel.resetProgress()\n    @ladderLimit ?= parseInt @getQueryVariable('top_players', if @options.league then 100 else 20)\n    for team in @teams\n      if oldLeaderboard = @leaderboards[team.id]\n        @supermodel.removeModelResource oldLeaderboard\n        oldLeaderboard.destroy()\n      teamSession = _.find @sessions.models, (session) -> session.get('team') is team.id\n      @leaderboards[team.id] = new LeaderboardData(@level, team.id, teamSession, @ladderLimit, @options.league)\n      team.leaderboard = @leaderboards[team.id]\n      @leaderboardRes = @supermodel.addModelResource(@leaderboards[team.id], 'leaderboard', {cache: false}, 3)\n      @leaderboardRes.load()\n\n  render: ->\n    super()\n\n    @$el.find('.histogram-display').each (i, el) =>\n      histogramWrapper = $(el)\n      team = _.find @teams, name: histogramWrapper.data('team-name')\n      histogramData = null\n      $.when(\n        level = \"#{@level.get('original')}.#{@level.get('version').major}\"\n        url = \"/db/level/#{level}/histogram_data?team=#{team.name.toLowerCase()}\"\n        url += '&leagues.leagueID=' + @options.league.id if @options.league\n        $.get url, (data) -> histogramData = data\n      ).then =>\n        @generateHistogram(histogramWrapper, histogramData, team.name.toLowerCase()) unless @destroyed\n\n  generateHistogram: (histogramElement, histogramData, teamName) ->\n    #renders twice, hack fix\n    if $('#' + histogramElement.attr('id')).has('svg').length then return\n    histogramData = histogramData.map (d) -> d*100\n\n    margin =\n      top: 20\n      right: 20\n      bottom: 30\n      left: 15\n\n    width = 470 - margin.left - margin.right\n    height = 125 - margin.top - margin.bottom\n\n    formatCount = d3.format(',.0')\n\n    minX = Math.floor(Math.min(histogramData...) / 1000) * 1000\n    maxX = Math.ceil(Math.max(histogramData...) / 1000) * 1000\n    x = d3.scale.linear().domain([minX, maxX]).range([0, width])\n    data = d3.layout.histogram().bins(x.ticks(20))(histogramData)\n    y = d3.scale.linear().domain([0, d3.max(data, (d) -> d.y)]).range([height, 10])\n\n    #create the x axis\n    xAxis = d3.svg.axis().scale(x).orient('bottom').ticks(5).outerTickSize(0)\n\n    svg = d3.select('#' + histogramElement.attr('id')).append('svg')\n      .attr('width', width + margin.left + margin.right)\n      .attr('height', height + margin.top + margin.bottom)\n    .append('g')\n      .attr('transform', \"translate(#{margin.left}, #{margin.top})\")\n    barClass = 'bar'\n    if teamName.toLowerCase() is 'ogres' then barClass = 'ogres-bar'\n    if teamName.toLowerCase() is 'humans' then barClass = 'humans-bar'\n\n    bar = svg.selectAll('.bar')\n      .data(data)\n    .enter().append('g')\n      .attr('class', barClass)\n      .attr('transform', (d) -> \"translate(#{x(d.x)}, #{y(d.y)})\")\n\n    bar.append('rect')\n      .attr('x', 1)\n      .attr('width', width/20)\n      .attr('height', (d) -> height - y(d.y))\n    if session = @leaderboards[teamName].session\n      if @options.league\n        playerScore = (_.find(session.get('leagues'), {leagueID: @options.league.id})?.stats.totalScore or 10) * 100\n      else\n        playerScore = session.get('totalScore') * 100\n      scorebar = svg.selectAll('.specialbar')\n        .data([playerScore])\n        .enter().append('g')\n        .attr('class', 'specialbar')\n        .attr('transform', \"translate(#{x(playerScore)}, 0)\")\n\n      scorebar.append('rect')\n        .attr('x', 1)\n        .attr('width', 3)\n        .attr('height', height)\n    rankClass = 'rank-text'\n    if teamName.toLowerCase() is 'ogres' then rankClass = 'rank-text ogres-rank-text'\n    if teamName.toLowerCase() is 'humans' then rankClass = 'rank-text humans-rank-text'\n\n    message = \"#{histogramData.length} players\"\n    if @leaderboards[teamName].session?\n      if @options.league\n        # TODO: fix server handler to properly fetch myRank with a leagueID\n        message = \"#{histogramData.length} players in league\"\n      else if @leaderboards[teamName].myRank <= histogramData.length\n        message = \"##{@leaderboards[teamName].myRank} of #{histogramData.length}\"\n        message += \"+\" if histogramData.length >= 100000\n      else\n        message = 'Rank your session!'\n    svg.append('g')\n      .append('text')\n      .attr('class', rankClass)\n      .attr('y', 0)\n      .attr('text-anchor', 'end')\n      .attr('x', width)\n      .text(message)\n\n    #Translate the x-axis up\n    svg.append('g')\n      .attr('class', 'x axis')\n      .attr('transform', 'translate(0, ' + height + ')')\n      .call(xAxis)\n\n  consolidateFriends: ->\n    allFriendSessions = (@facebookFriendSessions or []).concat(@gplusFriendSessions or [])\n    sessions = _.uniq allFriendSessions, false, (session) -> session._id\n    if @options.league\n      sessions = _.sortBy sessions, (session) -> _.find(session.leagues, leagueID: @options.league.id)?.stats.totalScore ? (session.totalScore / 2)\n    else\n      sessions = _.sortBy sessions, 'totalScore'\n    sessions.reverse()\n    sessions\n\n  # Admin view of players' code\n  onClickPlayerName: (e) ->\n    return unless me.isAdmin()\n    row = $(e.target).parent()\n    player = new User _id: row.data 'player-id'\n    session = new LevelSession _id: row.data 'session-id'\n    @openModalView new ModelModal models: [session, player]\n\n  onClickSpectateCell: (e) ->\n    cell = $(e.target).closest '.spectate-cell'\n    row = cell.parent()\n    table = row.closest('table')\n    wasSelected = cell.hasClass 'selected'\n    table.find('.spectate-cell.selected').removeClass 'selected'\n    cell = $(e.target).closest('.spectate-cell').toggleClass 'selected', not wasSelected\n    sessionID = row.data 'session-id'\n    teamID = table.data 'team'\n    @spectateTargets ?= {}\n    @spectateTargets[teamID] = if wasSelected then null else sessionID\n    console.log @spectateTargets, cell, row, table\n\n  onLoadMoreLadderEntries: (e) ->\n    @ladderLimit ?= 100\n    @ladderLimit += 100\n    @lastRefreshTime = null\n    @refreshLadder()\n\nmodule.exports.LeaderboardData = LeaderboardData = class LeaderboardData extends CocoClass\n  ###\n  Consolidates what you need to load for a leaderboard into a single Backbone Model-like object.\n  ###\n\n  constructor: (@level, @team, @session, @limit, @league) ->\n    super()\n\n  collectionParameters: (parameters) ->\n    parameters.team = @team\n    parameters['leagues.leagueID'] = @league.id if @league\n    parameters\n\n  fetch: ->\n    console.warn 'Already have top players on', @ if @topPlayers\n\n    @topPlayers = new LeaderboardCollection(@level, @collectionParameters(order: -1, scoreOffset: HIGHEST_SCORE, limit: @limit))\n    promises = []\n    promises.push @topPlayers.fetch cache: false\n\n    if @session\n      if @league\n        score = _.find(@session.get('leagues'), {leagueID: @league.id})?.stats.totalScore\n      else\n        score = @session.get('totalScore')\n      if score\n        @playersAbove = new LeaderboardCollection(@level, @collectionParameters(order: 1, scoreOffset: score, limit: 4))\n        promises.push @playersAbove.fetch cache: false\n        @playersBelow = new LeaderboardCollection(@level, @collectionParameters(order: -1, scoreOffset: score, limit: 4))\n        promises.push @playersBelow.fetch cache: false\n        level = \"#{@level.get('original')}.#{@level.get('version').major}\"\n        success = (@myRank) =>\n        loadURL = \"/db/level/#{level}/leaderboard_rank?scoreOffset=#{score}&team=#{@team}\"\n        loadURL += '&leagues.leagueID=' + @league.id if @league\n        promises.push $.ajax(loadURL, cache: false, success: success)\n    @promise = $.when(promises...)\n    @promise.then @onLoad\n    @promise.fail @onFail\n    @promise\n\n  onLoad: =>\n    return if @destroyed or not @topPlayers.loaded\n    @loaded = true\n    @loading = false\n    @trigger 'sync', @\n    # TODO: cache user ids -> names mapping, and load them here as needed,\n    #   and apply them to sessions. Fetching each and every time is too costly.\n\n  onFail: (resource, jqxhr) =>\n    return if @destroyed\n    @trigger 'error', @, jqxhr\n\n  inTopSessions: ->\n    return me.id in (session.attributes.creator for session in @topPlayers.models)\n\n  nearbySessions: ->\n    if @league\n      score = _.find(@session?.get('leagues'), {leagueID: @league.id})?.stats.totalScore\n    else\n      score = @session?.get('totalScore')\n    return [] unless score\n    l = []\n    above = @playersAbove.models\n    l = l.concat(above)\n    l.reverse()\n    l.push @session\n    l = l.concat(@playersBelow.models)\n    if @myRank\n      startRank = @myRank - 4\n      session.rank = startRank + i for session, i in l\n    l\n\n  allResources: ->\n    resources = [@topPlayers, @playersAbove, @playersBelow]\n    return (r for r in resources when r)\n"]}